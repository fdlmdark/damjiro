{"version":3,"sources":["MIDIPlayer.js","MIDIFilePicker.js","App.js","serviceWorker.js","index.js"],"names":["getFirstEffectiveMIDIEvent","midiBuf","ons","MIDIFile","getMidiEvents","filter","ev","subtype","MIDIEvents","EVENT_MIDI_NOTE_ON","length","Error","PCMPlayer","audioContext","pcm","_audioContext","_pcm","_playing","_currentTime","_offset","_epoch","_onAudioProcess","bind","this","_node","createScriptProcessor","numChannels","connect","destination","addEventListener","emit","disconnect","removeEventListener","e","bufsize","ch","out","outputBuffer","getChannelData","i","si","s","data","currentTime","stop","EventEmitter","MIDIPlayer","buffer","onReady","onPlay","onEnd","useState","setAudioContext","pcmPlayer","setPCMPlayer","isPlaying","setIsPlaying","refOnReady","useRef","refOnPlay","refOnEnd","useEffect","AudioContext","close","a","synth","JSLibTimidity","sampleRate","isReady","Promise","r","setTimeout","midi2wav","Uint8Array","pcmWoRest","restLength","playTime","Int16Array","set","player","current","target","on","oldPlayer","f","type","onClick","play","MIDIFilePicker","onLoad","accept","onChange","file","files","includes","reader","FileReader","onload","result","readAsArrayBuffer","console","log","round","num","base","Math","floor","lower_bound","ary","cmp","begin","end","len","half","mid","impl","midi2notes","targetTrack","targetChannel","midi","header","getFormat","getTracksCount","getTimeDivision","Header","TICKS_PER_BEAT","notes_begin","notes_end","events","channel","push","param1","EVENT_MIDI_NOTE_OFF","notes","b","tpos","duration","pitch","gakufu2json","gNotes","youtubeVideoId","timeOffset","gakufu","map","n","JSON","stringify","createPitchDetector","navigator","mediaDevices","getUserMedia","audio","video","stream","resolve","pitchHandler","ml5","pitchDetection","getPitch","reject","err","freq","m","stopAudio","getTracks","forEach","track","NotesSVG","styled","svg","NotesDisplay","start","step","curtpos","uNotes","seconds","cw","tpos2x","tpos2x_view","notes2bars","color","note","reduce","acc","last","abs","concat","Fragment","key","x","y","width","height","rx","ry","fill","fillOpacity","viewBox","preserveAspectRatio","x1","x2","y1","y2","strokeWidth","stroke","Array","from","_","correct","InputDamjiroGakufu","dispatch","gakufuText","setGakufuText","errorMsg","setErrorMsg","value","json","parse","videoId","String","isNaN","message","TimeOffsetForm","Number","required","PitchOffsetForm","pitchOffset","NotesScroller","user","playing","curTimeOffset","curPitchOffset","setCurtpos","useCallback","timerAdjust","setInterval","getCurrentTime","prev","getBiasedVideoTime","now","biasedPitch","lbIdx","lb","gap","clearInterval","onPause","ScoreDisplay","score","uNote","gNote","loss","sum","MIDIEditor","fileBody","setFileBody","trackNo","setTrackNo","channelNo","setChannelNo","introTime","setIntroTime","setPitchOffset","setYoutubeVideoId","setVideo","gNotesOriginal","epoch","makeNotesSensible","estimatedIntroTime","seekTo","readOnly","playVideo","pauseVideo","rootReducer","combineReducers","state","action","persistReducer","storage","whitelist","persistedReducer","store","createStore","persistor","persistStore","App","loading","buf","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.852060fa.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport JSLibTimidity from 'js-libtimidity'\nimport EventEmitter from 'events'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\n\nconst TIMIDITY_CFG = `\nsoundfont GeneralUserGSv1.471.sf2\n`\n\nfunction getFirstEffectiveMIDIEvent (midiBuf) {\n  const midi = new MIDIFile(midiBuf)\n  const events = midi.getMidiEvents()\n  const ons = events.filter(ev => ev.subtype === MIDIEvents.EVENT_MIDI_NOTE_ON)\n  if (ons.length === 0) throw new Error('invalid midi file')\n  return ons[0]\n}\n\nclass PCMPlayer extends EventEmitter {\n  constructor (audioContext, pcm) {\n    super()\n    this._audioContext = audioContext\n    this._pcm = pcm\n    this._playing = false\n    this._currentTime = 0\n    this._offset = 0\n    this._epoch = null\n    this._onAudioProcess = this._onAudioProcess.bind(this)\n  }\n\n  play () {\n    if (this._playing) return\n\n    this._node = this._audioContext.createScriptProcessor(\n      0,\n      0,\n      this._pcm.numChannels\n    )\n    this._node.connect(this._audioContext.destination)\n    this._node.addEventListener('audioprocess', this._onAudioProcess)\n\n    this._playing = true\n    this.emit('start')\n  }\n\n  stop () {\n    if (!this._playing) return\n\n    this._node.disconnect()\n    this._node.removeEventListener('audioprocess', this._onAudioProcess)\n\n    this._playing = false\n    this._pcm = null\n    this.emit('end')\n  }\n\n  _onAudioProcess (e) {\n    let bufsize = 0\n    for (let ch = 0; ch < this._pcm.numChannels; ch++) {\n      const out = e.outputBuffer.getChannelData(ch)\n      bufsize = out.length\n      for (let i = 0; i < bufsize; i++) {\n        const si = (this._offset + i) * this._pcm.numChannels + ch\n        const s = si < this._pcm.data.length ? this._pcm.data[si] / 0x7fff : 0\n        out[i] = s\n      }\n    }\n    this._offset += bufsize\n\n    if (!this._epoch) this._epoch = this._audioContext.currentTime\n\n    if (\n      this._playing &&\n      this._offset * this._pcm.numChannels > this._pcm.data.length\n    )\n      this.stop()\n  }\n\n  getCurrentTime () {\n    if (!this._epoch) return 0\n    return this._audioContext.currentTime - this._epoch\n  }\n}\n\nfunction MIDIPlayer ({ buffer, onReady, onPlay, onEnd }) {\n  const [audioContext, setAudioContext] = useState(null)\n  const [pcmPlayer, setPCMPlayer] = useState(null)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const refOnReady = useRef(onReady)\n  const refOnPlay = useRef(onPlay)\n  const refOnEnd = useRef(onEnd)\n\n  useEffect(() => {\n    const audioContext = new AudioContext()\n    setAudioContext(audioContext)\n    return () => {\n      audioContext.close()\n    }\n  }, [])\n  useEffect(() => {\n    if (!audioContext || !buffer) return\n    async function f () {\n      const synth = new JSLibTimidity('/', TIMIDITY_CFG, {\n        sampleRate: audioContext.sampleRate,\n        numChannels: 2\n      })\n      while (!synth.isReady()) await new Promise(r => setTimeout(r, 1000))\n      let pcmWoRest = await synth.midi2wav(new Uint8Array(buffer))\n\n      // Prefix 'rest' to pcmWoRest\n      // c.f.: https://superuser.com/questions/737036/timidity-extract-tracks-preserving-initial-silence\n      const restLength =\n        (getFirstEffectiveMIDIEvent(buffer).playTime / 1000) *\n        pcmWoRest.sampleRate *\n        pcmWoRest.numChannels\n      const pcm = {\n        ...pcmWoRest,\n        data: new Int16Array(restLength + pcmWoRest.data.length)\n      }\n      pcm.data.set(pcmWoRest.data, restLength)\n\n      const player = new PCMPlayer(audioContext, pcm)\n      if (refOnReady.current) refOnReady.current({ target: player })\n      player.on('start', () => {\n        if (refOnPlay.current) refOnPlay.current()\n        setIsPlaying(true)\n      })\n      player.on('end', () => {\n        if (refOnEnd.current) refOnEnd.current()\n        setIsPlaying(false)\n      })\n      setPCMPlayer(oldPlayer => {\n        if (oldPlayer) oldPlayer.stop()\n        return player\n      })\n    }\n    f()\n  }, [buffer, audioContext])\n\n  refOnReady.current = onReady\n  refOnPlay.current = onPlay\n  refOnEnd.current = onEnd\n\n  return (\n    <div>\n      {pcmPlayer && !isPlaying && (\n        <button type='button' onClick={e => pcmPlayer.play()}>\n          Play\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default MIDIPlayer\n","import React from 'react'\n\nfunction MIDIFilePicker ({ onLoad }) {\n  return (\n    <input\n      type='file'\n      accept='audio/midi, audio/x-midi, audio/mid'\n      onChange={e => {\n        // Read the file\n        try {\n          const file = e.target.files[0]\n          if (!['audio/midi', 'audio/x-midi', 'audio/mid'].includes(file.type))\n            throw new Error('invalid mime type')\n          const reader = new FileReader()\n          reader.onload = e => onLoad(e.target.result)\n          reader.readAsArrayBuffer(file)\n        } catch (e) {\n          console.log(e)\n        }\n      }}\n    />\n  )\n}\n\nexport default MIDIFilePicker\n","import React, { useRef, useState, useCallback, useEffect } from 'react'\nimport { combineReducers, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\nimport styled from 'styled-components'\nimport YouTube from 'react-youtube'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport ml5 from 'ml5'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\nimport MIDIPlayer from './MIDIPlayer'\nimport MIDIFilePicker from './MIDIFilePicker'\n\n// Thanks to: https://stackoverflow.com/questions/4059147/check-if-a-variable-is-a-string-in-javascript\nfunction isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nfunction isNumber (n) {\n  return !isNaN(n)\n}\n\nfunction sec2us (n) {\n  return n * 1000000\n}\n\nfunction isClose (a, b) {\n  return Math.abs(a - b) < 0.0001\n}\n\nfunction round (num, base) {\n  return Math.floor(num / base) * base\n}\n\nfunction range (start, stop, step) {\n  return Array.from(\n    { length: (stop - start) / step + 1 },\n    (_, i) => start + i * step\n  )\n}\n\n// c.f. C++'s std::lower_bound\n// Thanks to: https://cpprefjp.github.io/reference/algorithm/lower_bound.html\nfunction lower_bound (ary, cmp) {\n  const impl = (begin, end) => {\n    for (let len = end - begin; len !== 0; ) {\n      const half = Math.floor(len / 2)\n      const mid = begin + half\n      if (cmp(ary[mid])) {\n        len -= half + 1\n        begin = mid + 1\n      } else {\n        len = half\n      }\n    }\n    return begin\n  }\n  return impl(0, ary.length)\n}\n\nfunction midi2notes (buffer, targetTrack, targetChannel) {\n  const midi = new MIDIFile(buffer)\n  if (midi.header.getFormat() === 2)\n    throw new Error('Unsupported format of MIDI')\n  if (midi.header.getTracksCount() === 0) throw new Error('Not enough tracks')\n  if (midi.header.getTimeDivision() !== MIDIFile.Header.TICKS_PER_BEAT)\n    throw new Error('Unsupported time division')\n\n  const notes_begin = []\n  const notes_end = []\n  const events = midi.getMidiEvents()\n  for (let ev of events) {\n    if (ev.channel !== targetChannel) continue\n\n    switch (ev.subtype) {\n      case MIDIEvents.EVENT_MIDI_NOTE_ON:\n        notes_begin.push([ev.playTime * 1000, ev.param1])\n        break\n\n      case MIDIEvents.EVENT_MIDI_NOTE_OFF:\n        if (\n          notes_begin.length === 0 ||\n          notes_begin[notes_begin.length - 1][1] !== ev.param1\n        )\n          throw new Error('Invalid note off')\n        notes_end.push([ev.playTime * 1000, ev.param1])\n        break\n\n      default:\n        break\n    }\n  }\n  if (notes_begin.length !== notes_end.length)\n    throw new Error('Invalid # of note offs')\n\n  const notes = []\n  for (let i = 0; i < notes_begin.length; i++) {\n    const b = notes_begin[i]\n    const e = notes_end[i]\n    notes.push({\n      tpos: b[0],\n      duration: e[0] - b[0],\n      pitch: b[1]\n    })\n  }\n\n  return notes\n}\n\nfunction makeNotesSensible (notes, introTime, pitchOffset) {\n  if (notes.length === 0) return notes\n\n  const epoch = notes[0].tpos\n  return notes.map(n => ({\n    tpos: n.tpos - epoch + introTime,\n    duration: n.duration,\n    pitch: n.pitch + pitchOffset\n  }))\n}\n\nfunction gakufu2json (gNotes, youtubeVideoId, timeOffset) {\n  const gakufu = {\n    notes: gNotes.map(n => [\n      Math.round(n.tpos),\n      Math.round(n.duration),\n      Math.round(n.pitch)\n    ]),\n    youtubeVideoId,\n    timeOffset\n  }\n  return JSON.stringify(gakufu)\n}\n\nasync function createPitchDetector () {\n  const audioContext = new AudioContext()\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: false\n  })\n\n  const pitchHandler = await new Promise(resolve => {\n    const pitchHandler = ml5.pitchDetection(\n      './model',\n      audioContext,\n      stream,\n      () => {\n        resolve(pitchHandler)\n      }\n    )\n  })\n\n  const getPitch = () =>\n    new Promise((resolve, reject) =>\n      pitchHandler.getPitch((err, freq) => {\n        if (err) reject(err)\n        if (!freq) resolve(null)\n        const m = Math.round(12 * (Math.log(freq / 440) / Math.log(2))) + 69\n        resolve(m)\n      })\n    )\n  const stopAudio = () => {\n    stream.getTracks().forEach(track => track.stop())\n    audioContext.close()\n  }\n\n  return [getPitch, stopAudio]\n}\n\nconst NotesSVG = styled.svg`\n  width: 80vw;\n  height: 80vh;\n`\nfunction NotesDisplay ({ curtpos, gNotes, uNotes, seconds }) {\n  // curtpos, tpos, duration in us\n  // pitch in SMF\n\n  const SIZE_PER_SEC = 100\n  const cw = SIZE_PER_SEC * seconds\n  const ch = 500\n  const tpos2x = tpos => (tpos * SIZE_PER_SEC) / 1000000\n  const r = {\n    from: round(tpos2x(curtpos), cw),\n    to: round(tpos2x(curtpos), cw) + cw\n  }\n  const tpos2x_view = tpos => tpos2x(tpos) - r.from\n\n  const notes2bars = (notes, color) =>\n    notes\n      .filter(\n        note =>\n          r.from < tpos2x(note.tpos + note.duration) && tpos2x(note.tpos) < r.to\n      )\n      .reduce((acc, note) => {\n        // Concat close notes at same pitch\n        if (acc.length === 0) return [note]\n        const last = acc[acc.length - 1]\n        if (\n          last.pitch !== note.pitch ||\n          !isClose(last.tpos + last.duration, note.tpos)\n        )\n          return acc.concat(note)\n        acc[acc.length - 1] = {\n          tpos: last.tpos,\n          duration: note.tpos + note.duration - last.tpos,\n          pitch: last.pitch\n        }\n        return acc\n      }, [])\n      .map(note => (\n        <React.Fragment key={note.tpos}>\n          <rect\n            x={tpos2x_view(note.tpos)}\n            y={500 - note.pitch * 5}\n            width={tpos2x(note.duration)}\n            height={5}\n            rx={1}\n            ry={1}\n            fill={color}\n            fillOpacity={0.7}\n          />\n        </React.Fragment>\n      ))\n\n  return (\n    <>\n      <p>{curtpos}</p>\n      <NotesSVG viewBox={'0,0,' + cw + ',' + ch} preserveAspectRatio='none'>\n        {\n          // horizontal lines\n        }\n        <line x1={0} x2={cw} y1={0} y2={0} strokeWidth={5} stroke='gray' />\n        <line x1={0} x2={cw} y1={ch} y2={ch} strokeWidth={5} stroke='gray' />\n        {// vertical lines\n        range(0, cw, SIZE_PER_SEC).map(x => (\n          <line\n            key={x}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={ch}\n            strokeWidth={1}\n            stroke='gray'\n            fillOpacity={0.7}\n          />\n        ))}\n        <line\n          x1={tpos2x_view(curtpos)}\n          x2={tpos2x_view(curtpos)}\n          y1={0}\n          y2={ch}\n          strokeWidth={1}\n          stroke='red'\n        />\n        {// note bars\n        notes2bars(gNotes, 'gray')}\n        {// user's correct note bars\n        notes2bars(\n          uNotes.filter(n => n.correct),\n          '#FFA500'\n        )}\n        {// user's wrong note bars\n        notes2bars(\n          uNotes.filter(n => !n.correct),\n          'red'\n        )}\n      </NotesSVG>\n    </>\n  )\n}\n\nfunction InputDamjiroGakufu ({ dispatch }) {\n  const [gakufuText, setGakufuText] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  return (\n    <div>\n      <textarea\n        value={gakufuText}\n        onChange={e => {\n          setGakufuText(e.target.value)\n          try {\n            const json = JSON.parse(e.target.value)\n            const notes = json.notes.map(n => ({\n              tpos: n[0],\n              duration: n[1],\n              pitch: n[2]\n            }))\n            const videoId = json.youtubeVideoId\n            const timeOffset = json.timeOffset\n            if (!isString(videoId) || !isNumber(timeOffset))\n              throw new Error('Invalid JSON')\n            dispatch({ type: 'SET_GAKUFU', gakufu: { notes, videoId } })\n            dispatch({ type: 'SET_USER_TIME_OFFSET', value: timeOffset })\n            setErrorMsg(null)\n          } catch (e) {\n            dispatch({ type: 'RESET_GAKUFU' })\n            setErrorMsg(e.message)\n          }\n          dispatch({ type: 'RESET_USER_NOTES' })\n        }}\n      />\n      {errorMsg}\n    </div>\n  )\n}\nInputDamjiroGakufu = connect()(InputDamjiroGakufu)\n\nfunction TimeOffsetForm ({ timeOffset, dispatch }) {\n  return (\n    <div>\n      <input\n        type='number'\n        value={Math.floor(timeOffset / 1000)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_TIME_OFFSET',\n            value: Number(e.target.value) * 1000\n          })\n        }\n        required\n      />\n      ms\n    </div>\n  )\n}\nTimeOffsetForm = connect(({ user: { timeOffset } }) => ({ timeOffset }))(\n  TimeOffsetForm\n)\n\nfunction PitchOffsetForm ({ pitchOffset, dispatch }) {\n  return (\n    <div>\n      <input\n        type='number'\n        value={Math.floor(pitchOffset)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_PITCH_OFFSET',\n            value: Number(e.target.value)\n          })\n        }\n        required\n      />\n      note#\n    </div>\n  )\n}\nPitchOffsetForm = connect(({ user: { pitchOffset } }) => ({ pitchOffset }))(\n  PitchOffsetForm\n)\n\nfunction NotesScroller ({\n  dispatch,\n  gakufu,\n  user: { notes: uNotes, timeOffset, pitchOffset }\n}) {\n  const playing = useRef(false)\n  const curTimeOffset = useRef(timeOffset)\n  const curPitchOffset = useRef(pitchOffset)\n  const [curtpos, setCurtpos] = useState(0)\n  const video = useRef(null)\n  const onPlay = useCallback(async () => {\n    if (playing.current) return\n    playing.current = true\n\n    // Set timer to scroll notes\n    const timerAdjust = setInterval(\n      () => setCurtpos(video.current.getCurrentTime() * 1000 * 1000),\n      25\n    )\n\n    // Create pitch detector\n    const [getPitch, stopAudio] = await createPitchDetector()\n\n    // Clear user's previous notes\n    dispatch({ type: 'RESET_USER_NOTES' })\n\n    // Loop to get pitches from mic\n    const getBiasedVideoTime = () =>\n      sec2us(video.current.getCurrentTime()) - curTimeOffset.current\n    let prev = getBiasedVideoTime()\n    while (playing.current) {\n      const pitch = await getPitch()\n      const now = getBiasedVideoTime()\n      if (pitch) {\n        const duration = now - prev\n        let biasedPitch = pitch\n        let correct = false\n\n        const lbIdx = lower_bound(gakufu.notes, n => n.tpos < prev) - 1\n        const lb = lbIdx >= 0 ? gakufu.notes[lbIdx] : gakufu.notes[0]\n        if (lb) {\n          biasedPitch = lb.pitch + curPitchOffset.current\n          let gap =\n            pitch - biasedPitch - Math.floor((pitch - biasedPitch) / 12) * 12\n          if (gap > 6) gap -= 12\n          biasedPitch += gap\n          if (lb.tpos < prev && prev < lb.tpos + lb.duration && gap === 0)\n            correct = true\n        }\n\n        const note = {\n          tpos: prev,\n          duration,\n          pitch: biasedPitch,\n          correct\n        }\n        dispatch({ type: 'APPEND_USER_NOTE', note })\n      }\n      prev = now\n    }\n    stopAudio()\n\n    // Stop timer\n    clearInterval(timerAdjust)\n  }, [gakufu.notes, dispatch])\n\n  curTimeOffset.current = timeOffset\n  curPitchOffset.current = pitchOffset\n\n  return (\n    <>\n      {gakufu.midiBuf && (\n        <MIDIPlayer\n          buffer={gakufu.midiBuf}\n          onReady={e => (video.current = e.target)}\n          onPlay={onPlay}\n          onEnd={() => (playing.current = false)}\n        />\n      )}\n\n      {gakufu.videoId && (\n        <YouTube\n          videoId={gakufu.videoId}\n          onReady={e => (video.current = e.target)}\n          onPlay={onPlay}\n          onPause={() => (playing.current = false)}\n          onEnd={() => (playing.current = false)}\n        />\n      )}\n\n      {gakufu.notes && (\n        <NotesDisplay\n          curtpos={curtpos}\n          gNotes={gakufu.notes}\n          uNotes={uNotes}\n          seconds={30}\n        />\n      )}\n    </>\n  )\n}\nNotesScroller = connect(({ gakufu, user }) => ({\n  gakufu,\n  user\n}))(NotesScroller)\n\nfunction ScoreDisplay ({ gNotes, uNotes }) {\n  if (!gNotes || !uNotes) return <div />\n\n  const percPitchCorrect =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      const secretNonLinearFunc = x => x / (1 + Math.abs(x))\n      return acc + uNote.duration * (1 - secretNonLinearFunc(loss))\n    }, 0) / gNotes.reduce((sum, gNote) => sum + gNote.duration, 0)\n  const geta = 0\n  const scale = 1.2\n  const score = (percPitchCorrect * 100 + geta) * scale\n\n  return <div>Score: {Math.round(score * 100) / 100}</div>\n}\nScoreDisplay = connect(\n  ({ gakufu: { notes: gNotes }, user: { notes: uNotes } }) => ({\n    gNotes,\n    uNotes\n  })\n)(ScoreDisplay)\n\nfunction MIDIEditor () {\n  const [fileBody, setFileBody] = useState(null)\n  const [trackNo, setTrackNo] = useState(0)\n  const [channelNo, setChannelNo] = useState(0)\n  const [introTime, setIntroTime] = useState(0)\n  const [pitchOffset, setPitchOffset] = useState(0)\n  const [youtubeVideoId, setYoutubeVideoId] = useState(null)\n  const [video, setVideo] = useState(null)\n  const errorMsg = useRef(null)\n\n  let gNotesOriginal = []\n  let gNotes = []\n  if (fileBody) {\n    try {\n      gNotesOriginal = midi2notes(fileBody, trackNo, channelNo)\n      gNotes = makeNotesSensible(\n        gNotesOriginal,\n        introTime * 1000000,\n        pitchOffset\n      )\n      errorMsg.current = null\n    } catch (e) {\n      errorMsg.current = e.message\n    }\n  }\n\n  useEffect(() => {\n    if (gNotesOriginal.length === 0) return\n    const estimatedIntroTime = gNotesOriginal[0].tpos / 1000000\n    setIntroTime(estimatedIntroTime)\n  }, [fileBody, trackNo, channelNo])\n\n  useEffect(() => {\n    if (!video) return\n    video.seekTo(introTime, true)\n  }, [video, introTime])\n\n  return (\n    <div>\n      <div>\n        <input\n          type='file'\n          accept='audio/midi, audio/x-midi'\n          onChange={e => {\n            // Reset\n            setFileBody(null)\n            setTrackNo(0)\n            setChannelNo(0)\n            setIntroTime(0)\n            setPitchOffset(0)\n            setYoutubeVideoId(null)\n            setVideo(null)\n            errorMsg.current = null\n\n            // Read the file\n            try {\n              const file = e.target.files[0]\n              if (file.type !== 'audio/midi' && file.type !== 'audio/x-midi')\n                throw new Error('invalid mime type')\n              const reader = new FileReader()\n              reader.onload = e => setFileBody(e.target.result)\n              reader.readAsArrayBuffer(file)\n            } catch (e) {\n              console.log(e)\n            }\n          }}\n        />\n      </div>\n      <div>\n        <label>\n          Track No.:\n          <input\n            type='number'\n            onChange={e => setTrackNo(Number(e.target.value))}\n            value={trackNo}\n          />\n        </label>\n        <label>\n          Channel No.:\n          <input\n            type='number'\n            onChange={e => setChannelNo(Number(e.target.value))}\n            value={channelNo}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          YouTube video id:\n          <input\n            type='text'\n            onChange={e => setYoutubeVideoId(e.target.value)}\n            value={youtubeVideoId || ''}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          intro time (sec):\n          <input\n            type='number'\n            step='any'\n            onChange={e => setIntroTime(Number(e.target.value))}\n            value={introTime}\n          />\n        </label>\n        <label>\n          pitch offset (SMF note #):\n          <input\n            type='number'\n            onChange={e => setPitchOffset(Number(e.target.value))}\n            value={pitchOffset}\n          />\n        </label>\n      </div>\n      <div>\n        <textarea\n          value={\n            fileBody && youtubeVideoId\n              ? gakufu2json(gNotes, youtubeVideoId, 300 * 1000)\n              : ''\n          }\n          readOnly\n        />\n      </div>\n      <p>{errorMsg.current}</p>\n      {fileBody && youtubeVideoId ? (\n        <YouTube\n          videoId={youtubeVideoId}\n          onReady={e => {\n            const video = e.target\n            setVideo(video)\n            video.playVideo()\n            video.pauseVideo()\n          }}\n        />\n      ) : (\n        <div />\n      )}\n      <NotesDisplay curtpos={0} gNotes={gNotes} uNotes={[]} seconds={60} />\n    </div>\n  )\n}\n\nfunction gakufuReducer (\n  state = { notes: null, videoId: null, midiBuf: null },\n  action\n) {\n  switch (action.type) {\n    case 'SET_GAKUFU':\n      return action.gakufu\n\n    case 'RESET_GAKUFU':\n      return { notes: null, videoId: null }\n\n    default:\n      return state\n  }\n}\n\nfunction userReducer (\n  state = {\n    notes: [],\n    timeOffset: 300000,\n    pitchOffset: 0\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SET_USER_TIME_OFFSET':\n      return {\n        ...state,\n        timeOffset: action.value\n      }\n\n    case 'SET_USER_PITCH_OFFSET':\n      return {\n        ...state,\n        pitchOffset: action.value\n      }\n\n    case 'RESET_USER_NOTES':\n      return {\n        ...state,\n        notes: []\n      }\n\n    case 'APPEND_USER_NOTE':\n      return {\n        ...state,\n        notes: state.notes.concat(action.note)\n      }\n\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  gakufu: gakufuReducer,\n  user: persistReducer(\n    {\n      key: 'user',\n      storage,\n      whitelist: ['pitchOffset']\n    },\n    userReducer\n  )\n})\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n  },\n  rootReducer\n)\nconst store = createStore(persistedReducer)\nconst persistor = persistStore(store)\n\nfunction App () {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <InputDamjiroGakufu />\n        <MIDIFilePicker\n          onLoad={buf => {\n            store.dispatch({\n              type: 'SET_GAKUFU',\n              gakufu: {\n                notes: midi2notes(buf, 0, 0),\n                midiBuf: buf,\n                videoId: null\n              }\n            })\n          }}\n        />\n        <TimeOffsetForm />\n        <PitchOffsetForm />\n        <ScoreDisplay />\n        <NotesScroller />\n        <hr />\n        <MIDIEditor />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}