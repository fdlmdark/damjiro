{"version":3,"sources":["MIDIPlayer.js","util/MIDILoader.js","MIDIFilePicker.js","shared/MessageSnackbar.js","MIDIEditor.js","App.js","reducers/SnackbarReducer.js","serviceWorker.js","index.js"],"names":["getFirstEffectiveMIDIEvent","midiBuf","ons","MIDIFile","getMidiEvents","filter","ev","subtype","MIDIEvents","EVENT_MIDI_NOTE_ON","length","Error","PCMPlayer","audioContext","pcm","_audioContext","_pcm","_playing","_currentTime","_offset","_epoch","_onAudioProcess","bind","this","_node","createScriptProcessor","numChannels","connect","destination","addEventListener","emit","disconnect","removeEventListener","e","bufsize","ch","out","outputBuffer","getChannelData","i","si","s","data","currentTime","stop","EventEmitter","MIDIPlayer","buffer","onReady","onPlay","onEnd","useState","setAudioContext","pcmPlayer","setPCMPlayer","isPlaying","setIsPlaying","refOnReady","useRef","refOnPlay","refOnEnd","classes","useCardStyles","useEffect","AudioContext","close","a","synth","JSLibTimidity","window","location","pathname","sampleRate","isReady","Promise","r","setTimeout","midi2wav","Uint8Array","pcmWoRest","restLength","playTime","Int16Array","set","player","current","target","on","oldPlayer","f","Button","size","variant","onClick","play","PlayArrow","className","wrapIcon","Typography","component","MIDILoader","file","onLoad","dispatch","includes","type","reader","FileReader","onload","result","readAsArrayBuffer","message","toString","MIDIFilePicker","TextField","label","accept","onChange","files","InputLabelProps","shrink","variantIcon","success","CheckCircle","warning","Warning","error","info","Info","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MessageSnackbar","snack","openSnack","customTag","handleClose","Object","keys","Icon","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","Close","gakufu2json","gNotes","youtubeVideoId","timeOffset","gakufu","notes","map","n","Math","round","tpos","duration","pitch","JSON","stringify","ColorlibConnector","withStyles","alternativeLabel","top","active","backgroundImage","completed","line","height","border","borderRadius","StepConnector","useColorlibStepIconStyles","root","zIndex","width","justifyContent","boxShadow","font","ColoredStepIcon","props","icons","1","2","Movie","3","GetApp","String","button","videoFrame","MIDIEditor","activeStep","setActiveStep","steps","fileBody","setFileBody","trackNo","setTrackNo","channelNo","setChannelNo","introTime","setIntroTime","pitchOffset","setPitchOffset","setYoutubeVideoId","video","setVideo","errorMsg","gNotesOriginal","midi2notes","epoch","makeNotesSensible","estimatedIntroTime","seekTo","Stepper","connector","Step","StepLabel","StepIconComponent","CardContent","instructions","CardActions","step","Grid","container","direction","justify","item","fullWidth","Divider","orientation","flexItem","Number","value","NotesDisplay","curtpos","uNotes","seconds","wrap","style","maxWidth","xl","lg","Hidden","mdDown","videoId","playVideo","pauseVideo","xs","multiline","rows","readOnly","getStepContent","disabled","prevActiveStep","NavigateBefore","isDisableNextButton","NavigateNext","num","base","floor","lower_bound","ary","cmp","begin","end","len","half","mid","impl","targetTrack","targetChannel","midi","header","getFormat","getTracksCount","getTimeDivision","Header","TICKS_PER_BEAT","notes_begin","notes_end","events","channel","push","param1","EVENT_MIDI_NOTE_OFF","b","createPitchDetector","navigator","mediaDevices","getUserMedia","audio","stream","resolve","pitchHandler","ml5","pitchDetection","getPitch","reject","err","freq","m","log","stopAudio","getTracks","forEach","track","library","add","faFileAudio","NotesSVG","styled","svg","start","cw","tpos2x","tpos2x_view","notes2bars","note","reduce","acc","last","abs","concat","Fragment","x","y","rx","ry","fill","fillOpacity","viewBox","preserveAspectRatio","x1","x2","y1","y2","strokeWidth","stroke","Array","from","_","correct","InputDamjiroGakufu","gakufuText","setGakufuText","setErrorMsg","FormControl","helperText","json","parse","isNaN","TimeOffsetForm","InputLabel","Input","required","endAdornment","InputAdornment","position","PitchOffsetForm","NotesScroller","user","marginClasses","useMarginStyles","playing","curTimeOffset","curPitchOffset","setCurtpos","useCallback","timerAdjust","setInterval","getCurrentTime","prev","getBiasedVideoTime","now","biasedPitch","lbIdx","lb","gap","clearInterval","onPause","mr2","mt1","ScoreDisplay","score","uNote","gNote","loss","sum","accuracy","SingFromGakufuCard","React","expanded","setExpanded","Card","m1","Audiotrack","mt2","mb2","MusicVideo","buf","store","disableSpacing","ml1","Settings","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","collapse","MakeGakufuCard","Edit","rootReducer","combineReducers","state","persistReducer","storage","whitelist","loadSnack","console","persistedReducer","createStore","persistor","persistStore","transform","marginLeft","transition","transitions","create","shortest","verticalAlign","marginTop","mt3","mb1","marginBottom","margin","m3","App","marginStyles","loading","CssBaseline","Container","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b91cbefb.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport JSLibTimidity from 'js-libtimidity'\nimport EventEmitter from 'events'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\nimport Button from '@material-ui/core/Button'\nimport { PlayArrow } from '@material-ui/icons'\nimport { useCardStyles } from './App'\nimport Typography from '@material-ui/core/Typography'\n\nconst TIMIDITY_CFG = `\nsoundfont GeneralUserGSv1.471.sf2\n`\n\nfunction getFirstEffectiveMIDIEvent (midiBuf) {\n  const midi = new MIDIFile(midiBuf)\n  const events = midi.getMidiEvents()\n  const ons = events.filter(ev => ev.subtype === MIDIEvents.EVENT_MIDI_NOTE_ON)\n  if (ons.length === 0) throw new Error('invalid midi file')\n  return ons[0]\n}\n\nclass PCMPlayer extends EventEmitter {\n  constructor (audioContext, pcm) {\n    super()\n    this._audioContext = audioContext\n    this._pcm = pcm\n    this._playing = false\n    this._currentTime = 0\n    this._offset = 0\n    this._epoch = null\n    this._onAudioProcess = this._onAudioProcess.bind(this)\n  }\n\n  play () {\n    if (this._playing) return\n\n    this._node = this._audioContext.createScriptProcessor(\n      0,\n      0,\n      this._pcm.numChannels\n    )\n    this._node.connect(this._audioContext.destination)\n    this._node.addEventListener('audioprocess', this._onAudioProcess)\n\n    this._playing = true\n    this.emit('start')\n  }\n\n  stop () {\n    if (!this._playing) return\n\n    this._node.disconnect()\n    this._node.removeEventListener('audioprocess', this._onAudioProcess)\n\n    this._playing = false\n    this._pcm = null\n    this.emit('end')\n  }\n\n  _onAudioProcess (e) {\n    let bufsize = 0\n    for (let ch = 0; ch < this._pcm.numChannels; ch++) {\n      const out = e.outputBuffer.getChannelData(ch)\n      bufsize = out.length\n      for (let i = 0; i < bufsize; i++) {\n        const si = (this._offset + i) * this._pcm.numChannels + ch\n        const s = si < this._pcm.data.length ? this._pcm.data[si] / 0x7fff : 0\n        out[i] = s\n      }\n    }\n    this._offset += bufsize\n\n    if (!this._epoch) this._epoch = this._audioContext.currentTime\n\n    if (\n      this._playing &&\n      this._offset * this._pcm.numChannels > this._pcm.data.length\n    )\n      this.stop()\n  }\n\n  getCurrentTime () {\n    if (!this._epoch) return 0\n    return this._audioContext.currentTime - this._epoch\n  }\n}\n\nfunction MIDIPlayer ({ buffer, onReady, onPlay, onEnd }) {\n  const [audioContext, setAudioContext] = useState(null)\n  const [pcmPlayer, setPCMPlayer] = useState(null)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const refOnReady = useRef(onReady)\n  const refOnPlay = useRef(onPlay)\n  const refOnEnd = useRef(onEnd)\n  const classes = useCardStyles()\n\n  useEffect(() => {\n    const audioContext = new AudioContext()\n    setAudioContext(audioContext)\n    return () => {\n      audioContext.close()\n    }\n  }, [])\n  useEffect(() => {\n    if (!audioContext || !buffer) return\n    async function f () {\n      const synth = new JSLibTimidity(window.location.pathname, TIMIDITY_CFG, {\n        sampleRate: audioContext.sampleRate,\n        numChannels: 2\n      })\n      while (!synth.isReady()) await new Promise(r => setTimeout(r, 1000))\n      let pcmWoRest = await synth.midi2wav(new Uint8Array(buffer))\n\n      // Prefix 'rest' to pcmWoRest\n      // c.f.: https://superuser.com/questions/737036/timidity-extract-tracks-preserving-initial-silence\n      const restLength =\n        (getFirstEffectiveMIDIEvent(buffer).playTime / 1000) *\n        pcmWoRest.sampleRate *\n        pcmWoRest.numChannels\n      const pcm = {\n        ...pcmWoRest,\n        data: new Int16Array(restLength + pcmWoRest.data.length)\n      }\n      pcm.data.set(pcmWoRest.data, restLength)\n\n      const player = new PCMPlayer(audioContext, pcm)\n      if (refOnReady.current) refOnReady.current({ target: player })\n      player.on('start', () => {\n        if (refOnPlay.current) refOnPlay.current()\n        setIsPlaying(true)\n      })\n      player.on('end', () => {\n        if (refOnEnd.current) refOnEnd.current()\n        setIsPlaying(false)\n      })\n      setPCMPlayer(oldPlayer => {\n        if (oldPlayer) oldPlayer.stop()\n        return player\n      })\n    }\n    f()\n  }, [buffer, audioContext])\n\n  refOnReady.current = onReady\n  refOnPlay.current = onPlay\n  refOnEnd.current = onEnd\n\n  return (\n    <>\n      {pcmPlayer && !isPlaying ? (\n        <Button\n          size='large'\n          variant='outlined'\n          onClick={() => pcmPlayer.play()}\n        >\n          <PlayArrow className={classes.wrapIcon} />\n          Play\n        </Button>\n      ) : (\n        <>\n          {!isPlaying && (\n            <Typography component={'subtitle'}>Loading...</Typography>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default MIDIPlayer\n","const MIDILoader = (file, onLoad, dispatch) => {\n  try {\n    if (!['audio/midi', 'audio/x-midi', 'audio/mid'].includes(file.type)) {\n      dispatch({\n        type: 'SNACK_LOAD',\n        message: 'Invalid mime type',\n        variant: 'error'\n      })\n    } else {\n      const reader = new FileReader()\n      reader.onload = e => onLoad(e.target.result)\n      reader.readAsArrayBuffer(file)\n    }\n  } catch (e) {\n    dispatch({ type: 'SNACK_LOAD', message: e.toString(), variant: 'error' })\n  }\n}\nexport default MIDILoader\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MIDILoader from './util/MIDILoader'\nimport TextField from '@material-ui/core/TextField'\n\nfunction MIDIFilePicker ({ onLoad, dispatch }) {\n  return (\n    <TextField\n      type='file'\n      label='Select a midi file.'\n      accept='audio/midi, audio/x-midi, audio/mid'\n      onChange={e => {\n        // Read the file\n        const file = e.target.files[0]\n        MIDILoader(file, onLoad, dispatch)\n      }}\n      InputLabelProps={{\n        shrink: true\n      }}\n      variant={'outlined'}\n    />\n  )\n}\nMIDIFilePicker = connect()(MIDIFilePicker)\nexport default MIDIFilePicker\n","import {\n  IconButton,\n  makeStyles,\n  Snackbar,\n  SnackbarContent\n} from '@material-ui/core'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { CheckCircle, Close, Error, Info, Warning } from '@material-ui/icons'\nimport { amber, green } from '@material-ui/core/colors'\nimport clsx from 'clsx'\n\n/**\n * Show snackbar with custom message from Redux.\n * How to use:\n * 1. Connect your component with dispatch. For example:\n * ```\n * const _yourComponent = (dispatch) => {\n *\n * }\n * const YourComponent()(_yourComponent);\n * ```\n * 2. Use dispatch() when you want to show messages with snackbar.\n * `dispatch({type: 'SNACK_LOAD', message: 'some Message', variant: 'error'})`\n *\n * @param openSnack\n *  from redux. no need to config.\n * @param variant default 'info'\n *  from redux, need to config. you can choose one of 'error', 'info', 'success', 'warning'.\n * @param message\n *  from redux, need to config.\n * @param dispatch\n *  from redux.\n * @param customTag\n *  you can customize Snackbar from material UI. add some tag implemented Snackbar.\n * @returns <Snackbar />\n */\n\nexport const variantIcon = {\n  success: CheckCircle,\n  warning: Warning,\n  error: Error,\n  info: Info\n}\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nconst _messageSnackbar = ({\n  openSnack,\n  variant,\n  message,\n  dispatch,\n  ...customTag\n}) => {\n  const handleClose = () => dispatch({ type: 'SNACK_UNLOAD' })\n  const classes = useStyles()\n  variant = Object.keys(variantIcon).includes(variant) ? variant : 'info'\n  const Icon = variantIcon[variant]\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      open={openSnack}\n      onClose={handleClose}\n      {...customTag}\n    >\n      <SnackbarContent\n        className={clsx(classes[variant])}\n        aria-describedby='snackbar'\n        message={\n          <span id='snackbar' className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key='close'\n            aria-label='close'\n            color='inherit'\n            onClick={handleClose}\n          >\n            <Close className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  )\n}\nconst MessageSnackbar = connect(\n  ({ snack: { openSnack, variant, message } }) => ({\n    openSnack,\n    variant,\n    message\n  })\n)(_messageSnackbar)\nexport default MessageSnackbar\n","import React, { useEffect, useRef, useState } from 'react'\nimport MIDILoader from './util/MIDILoader'\nimport YouTube from 'react-youtube'\nimport { connect } from 'react-redux'\nimport { midi2notes, NotesDisplay } from './App'\n\n//material-ui\nimport { GetApp, Movie, NavigateBefore, NavigateNext } from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport { makeStyles } from '@material-ui/core/styles'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Step from '@material-ui/core/Step'\nimport Stepper from '@material-ui/core/Stepper'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport clsx from 'clsx'\nimport Divider from '@material-ui/core/Divider'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Grid from '@material-ui/core/Grid'\nimport { Hidden, TextField } from '@material-ui/core'\n\nfunction makeNotesSensible (notes, introTime, pitchOffset) {\n  if (notes.length === 0) return notes\n\n  const epoch = notes[0].tpos\n  return notes.map(n => ({\n    tpos: n.tpos - epoch + introTime,\n    duration: n.duration,\n    pitch: n.pitch + pitchOffset\n  }))\n}\n\nfunction gakufu2json (gNotes, youtubeVideoId, timeOffset) {\n  const gakufu = {\n    notes: gNotes.map(n => [\n      Math.round(n.tpos),\n      Math.round(n.duration),\n      Math.round(n.pitch)\n    ]),\n    youtubeVideoId,\n    timeOffset\n  }\n  return JSON.stringify(gakufu)\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 136deg, #000046 0%, #1CB5E0 80%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 136deg, #000046 0%, #1CB5E0 80%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector)\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#cccccc',\n    zIndex: 1,\n    color: '#ffffff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, #1CB5E0 20%, #000046 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, #1CB5E0 20%, #000046 100%)'\n  },\n  font: {\n    fontSize: '24px'\n  }\n})\n\nfunction ColoredStepIcon (props) {\n  const classes = useColorlibStepIconStyles()\n  const { active, completed } = props\n\n  const icons = {\n    1: <FontAwesomeIcon icon={['far', 'file-audio']} fontSize={500} />,\n    2: <Movie />,\n    3: <GetApp />\n  }\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes.active]: active,\n          [classes.completed]: completed\n        },\n        classes.font\n      )}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  videoFrame: {\n    width: '640px',\n    height: '360px'\n  }\n}))\n\nfunction MIDIEditor ({ dispatch }) {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = useState(0)\n  const steps = ['Select midi file', 'Input youtube Id', 'Check output Gakufu']\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\n  }\n\n  const handleReset = () => {\n    setActiveStep(0)\n  }\n\n  const [fileBody, setFileBody] = useState('')\n  const [trackNo, setTrackNo] = useState(0)\n  const [channelNo, setChannelNo] = useState(0)\n  const [introTime, setIntroTime] = useState(0)\n  const [pitchOffset, setPitchOffset] = useState(0)\n  const [youtubeVideoId, setYoutubeVideoId] = useState('')\n  const [video, setVideo] = useState(null)\n  const errorMsg = useRef('')\n\n  let gNotesOriginal = []\n  let gNotes = []\n  if (fileBody) {\n    try {\n      gNotesOriginal = midi2notes(fileBody, trackNo, channelNo)\n      gNotes = makeNotesSensible(\n        gNotesOriginal,\n        introTime * 1000000,\n        pitchOffset\n      )\n      errorMsg.current = null\n    } catch (e) {\n      errorMsg.current = e.message\n    }\n  }\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return (\n          <Grid\n            container\n            direction='column'\n            justify='center'\n            alignItems='center'\n            spacing={2}\n          >\n            <Grid item container direction='row' justify='center' spacing={2}>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  type='file'\n                  accept='audio/midi, audio/x-midi, audio/mid'\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                  onChange={e => {\n                    // Reset\n                    setFileBody('')\n                    setTrackNo(0)\n                    setChannelNo(0)\n                    setIntroTime(0)\n                    setPitchOffset(0)\n                    setYoutubeVideoId('')\n                    setVideo(null)\n                    errorMsg.current = ''\n\n                    // Read the file\n                    const file = e.target.files[0]\n                    MIDILoader(file, setFileBody, dispatch)\n                  }}\n                  label='Select a midi file.'\n                />\n              </Grid>\n              <Divider orientation='vertical' flexItem />\n              <Grid item>\n                <TextField\n                  label='Track No.'\n                  type='number'\n                  onChange={e => setTrackNo(Number(e.target.value))}\n                  value={trackNo}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label='Channel No.'\n                  type='number'\n                  onChange={e => setChannelNo(Number(e.target.value))}\n                  value={channelNo}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label='pitch offset (SMF note #)'\n                  type='number'\n                  onChange={e => setPitchOffset(Number(e.target.value))}\n                  value={pitchOffset}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n            </Grid>\n            <Grid item>\n              <NotesDisplay\n                curtpos={0}\n                gNotes={gNotes}\n                uNotes={[]}\n                seconds={60}\n              />\n            </Grid>\n          </Grid>\n        )\n      case 1:\n        return (\n          <Grid\n            container\n            direction='row'\n            wrap='wrap'\n            justify='space-around'\n            spacing={2}\n          >\n            <Grid\n              item\n              style={{ maxWidth: '300px' }}\n              xl={3}\n              lg={12}\n              container\n              direction='column'\n              spacing={2}\n            >\n              <Grid item>\n                <TextField\n                  fullWidth\n                  label='YouTube video id'\n                  type='text'\n                  onChange={e => setYoutubeVideoId(String(e.target.value))}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  label='intro time (sec)'\n                  type='number'\n                  step='any'\n                  onChange={e => setIntroTime(Number(e.target.value))}\n                  value={introTime}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n            </Grid>\n            <Hidden mdDown>\n              <Divider orientation='vertical' flexItem />\n            </Hidden>\n            <Grid item style={{ maxWidth: '640px' }} xl={9} lg={12}>\n              {youtubeVideoId ? (\n                <YouTube\n                  videoId={youtubeVideoId}\n                  onReady={e => {\n                    const video = e.target\n                    setVideo(video)\n                    video.playVideo()\n                    video.pauseVideo()\n                  }}\n                />\n              ) : (\n                <div className={classes.videoFrame} />\n              )}\n            </Grid>\n          </Grid>\n        )\n      case 2:\n        return (\n          <Grid item container direction='row' justify='center' spacing={3}>\n            <Grid item xs={10}>\n              <TextField\n                fullWidth\n                multiline\n                rows={8}\n                label='Output Gakufu'\n                value={\n                  fileBody && youtubeVideoId\n                    ? gakufu2json(gNotes, youtubeVideoId, 300 * 1000)\n                    : ''\n                }\n                readOnly\n                InputLabelProps={{\n                  shrink: true\n                }}\n                variant={'outlined'}\n              />\n            </Grid>\n            <Grid item>\n              <Typography>{errorMsg.current}</Typography>\n            </Grid>\n          </Grid>\n        )\n      default:\n        dispatch({\n          type: 'SNACK_LOAD',\n          message: 'Unknown step Error',\n          variant: 'error'\n        })\n        return\n    }\n  }\n\n  const isDisableNextButton = step => {\n    switch (step) {\n      case 0:\n        return !fileBody\n      case 1:\n        return !youtubeVideoId\n      case 2:\n        return false\n      default:\n        return true\n    }\n  }\n\n  useEffect(() => {\n    if (gNotesOriginal.length === 0) return\n    const estimatedIntroTime = gNotesOriginal[0].tpos / 1000000\n    setIntroTime(estimatedIntroTime)\n  }, [fileBody, trackNo, channelNo])\n\n  useEffect(() => {\n    if (!video) return\n    video.seekTo(introTime, true)\n  }, [video, introTime])\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColoredStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <>\n            <CardContent>\n              <Typography className={classes.instructions}>\n                Let's sing with your Gakufu!\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </CardActions>\n          </>\n        ) : (\n          <div>\n            <CardContent>{getStepContent(activeStep)}</CardContent>\n            <CardActions>\n              <Grid container direction='row' justify='space-around'>\n                <Grid item>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    <NavigateBefore />\n                    Back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleNext}\n                    className={classes.button}\n                    disabled={isDisableNextButton(activeStep)}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    <NavigateNext />\n                  </Button>\n                </Grid>\n              </Grid>\n            </CardActions>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\nMIDIEditor = connect()(MIDIEditor)\nexport default MIDIEditor\n","import React, { useRef, useState, useCallback } from 'react'\nimport { combineReducers, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\nimport styled from 'styled-components'\nimport YouTube from 'react-youtube'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport ml5 from 'ml5'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\nimport MIDIPlayer from './MIDIPlayer'\nimport MIDIFilePicker from './MIDIFilePicker'\nimport snackbarReducer from './reducers/SnackbarReducer'\nimport MessageSnackbar from './shared/MessageSnackbar'\nimport MIDIEditor from './MIDIEditor'\n\n// material ui\nimport Container from '@material-ui/core/Container'\nimport Input from '@material-ui/core/Input'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Card from '@material-ui/core/Card'\nimport Typography from '@material-ui/core/Typography'\nimport CardContent from '@material-ui/core/CardContent'\nimport { TextField } from '@material-ui/core'\nimport CardActions from '@material-ui/core/CardActions'\nimport Collapse from '@material-ui/core/Collapse'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport clsx from 'clsx'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Divider from '@material-ui/core/Divider'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { Audiotrack, Edit, MusicVideo, Settings } from '@material-ui/icons'\nimport Grid from '@material-ui/core/Grid'\n\n// font-awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileAudio } from '@fortawesome/free-regular-svg-icons'\nlibrary.add(faFileAudio)\n\n// Thanks to: https://stackoverflow.com/questions/4059147/check-if-a-variable-is-a-string-in-javascript\nfunction isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nfunction isNumber (n) {\n  return !isNaN(n)\n}\n\nfunction sec2us (n) {\n  return n * 1000000\n}\n\nfunction isClose (a, b) {\n  return Math.abs(a - b) < 0.0001\n}\n\nfunction round (num, base) {\n  return Math.floor(num / base) * base\n}\n\nfunction range (start, stop, step) {\n  return Array.from(\n    { length: (stop - start) / step + 1 },\n    (_, i) => start + i * step\n  )\n}\n\n// c.f. C++'s std::lower_bound\n// Thanks to: https://cpprefjp.github.io/reference/algorithm/lower_bound.html\nfunction lower_bound (ary, cmp) {\n  const impl = (begin, end) => {\n    for (let len = end - begin; len !== 0; ) {\n      const half = Math.floor(len / 2)\n      const mid = begin + half\n      if (cmp(ary[mid])) {\n        len -= half + 1\n        begin = mid + 1\n      } else {\n        len = half\n      }\n    }\n    return begin\n  }\n  return impl(0, ary.length)\n}\n\nexport function midi2notes (buffer, targetTrack, targetChannel) {\n  const midi = new MIDIFile(buffer)\n  if (midi.header.getFormat() === 2)\n    throw new Error('Unsupported format of MIDI')\n  if (midi.header.getTracksCount() === 0) throw new Error('Not enough tracks')\n  if (midi.header.getTimeDivision() !== MIDIFile.Header.TICKS_PER_BEAT)\n    throw new Error('Unsupported time division')\n\n  const notes_begin = []\n  const notes_end = []\n  const events = midi.getMidiEvents()\n  for (let ev of events) {\n    if (ev.channel !== targetChannel) continue\n\n    switch (ev.subtype) {\n      case MIDIEvents.EVENT_MIDI_NOTE_ON:\n        if (notes_begin.length !== notes_end.length) break\n        notes_begin.push([ev.playTime * 1000, ev.param1])\n        break\n\n      case MIDIEvents.EVENT_MIDI_NOTE_OFF:\n        if (\n          notes_begin.length - notes_end.length !== 1 ||\n          notes_begin[notes_begin.length - 1][1] !== ev.param1\n        )\n          break\n        notes_end.push([ev.playTime * 1000, ev.param1])\n        break\n\n      default:\n        break\n    }\n  }\n  if (notes_begin.length !== notes_end.length)\n    throw new Error('Invalid # of note offs')\n\n  const notes = []\n  for (let i = 0; i < notes_begin.length; i++) {\n    const b = notes_begin[i]\n    const e = notes_end[i]\n    notes.push({\n      tpos: b[0],\n      duration: e[0] - b[0],\n      pitch: b[1]\n    })\n  }\n\n  return notes\n}\n\nasync function createPitchDetector () {\n  const audioContext = new AudioContext()\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: false\n  })\n\n  const pitchHandler = await new Promise(resolve => {\n    const pitchHandler = ml5.pitchDetection(\n      './model',\n      audioContext,\n      stream,\n      () => {\n        resolve(pitchHandler)\n      }\n    )\n  })\n\n  const getPitch = () =>\n    new Promise((resolve, reject) =>\n      pitchHandler.getPitch((err, freq) => {\n        if (err) reject(err)\n        if (!freq) resolve(null)\n        const m = Math.round(12 * (Math.log(freq / 440) / Math.log(2))) + 69\n        resolve(m)\n      })\n    )\n  const stopAudio = () => {\n    stream.getTracks().forEach(track => track.stop())\n    audioContext.close()\n  }\n\n  return [getPitch, stopAudio]\n}\n\nconst NotesSVG = styled.svg`\n  width: 80vw;\n  height: 80vh;\n`\nexport function NotesDisplay ({ curtpos, gNotes, uNotes, seconds }) {\n  // curtpos, tpos, duration in us\n  // pitch in SMF\n\n  const SIZE_PER_SEC = 100\n  const cw = SIZE_PER_SEC * seconds\n  const ch = 500\n  const tpos2x = tpos => (tpos * SIZE_PER_SEC) / 1000000\n  const r = {\n    from: round(tpos2x(curtpos), cw),\n    to: round(tpos2x(curtpos), cw) + cw\n  }\n  const tpos2x_view = tpos => tpos2x(tpos) - r.from\n\n  const notes2bars = (notes, color) =>\n    notes\n      .filter(\n        note =>\n          r.from < tpos2x(note.tpos + note.duration) && tpos2x(note.tpos) < r.to\n      )\n      .reduce((acc, note) => {\n        // Concat close notes at same pitch\n        if (acc.length === 0) return [note]\n        const last = acc[acc.length - 1]\n        if (\n          last.pitch !== note.pitch ||\n          !isClose(last.tpos + last.duration, note.tpos)\n        )\n          return acc.concat(note)\n        acc[acc.length - 1] = {\n          tpos: last.tpos,\n          duration: note.tpos + note.duration - last.tpos,\n          pitch: last.pitch\n        }\n        return acc\n      }, [])\n      .map(note => (\n        <React.Fragment key={note.tpos}>\n          <rect\n            x={tpos2x_view(note.tpos)}\n            y={500 - note.pitch * 5}\n            width={tpos2x(note.duration)}\n            height={5}\n            rx={1}\n            ry={1}\n            fill={color}\n            fillOpacity={0.7}\n          />\n        </React.Fragment>\n      ))\n\n  return (\n    <>\n      <p>{curtpos}</p>\n      <NotesSVG viewBox={'0,0,' + cw + ',' + ch} preserveAspectRatio='none'>\n        {\n          // horizontal lines\n        }\n        <line x1={0} x2={cw} y1={0} y2={0} strokeWidth={5} stroke='gray' />\n        <line x1={0} x2={cw} y1={ch} y2={ch} strokeWidth={5} stroke='gray' />\n        {// vertical lines\n        range(0, cw, SIZE_PER_SEC).map(x => (\n          <line\n            key={x}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={ch}\n            strokeWidth={1}\n            stroke='gray'\n            fillOpacity={0.7}\n          />\n        ))}\n        <line\n          x1={tpos2x_view(curtpos)}\n          x2={tpos2x_view(curtpos)}\n          y1={0}\n          y2={ch}\n          strokeWidth={1}\n          stroke='red'\n        />\n        {// note bars\n        notes2bars(gNotes, 'gray')}\n        {// user's correct note bars\n        notes2bars(\n          uNotes.filter(n => n.correct),\n          '#FFA500'\n        )}\n        {// user's wrong note bars\n        notes2bars(\n          uNotes.filter(n => !n.correct),\n          'red'\n        )}\n      </NotesSVG>\n    </>\n  )\n}\n\nfunction InputDamjiroGakufu ({ dispatch }) {\n  const [gakufuText, setGakufuText] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  return (\n    <FormControl fullWidth>\n      <TextField\n        value={gakufuText}\n        label='Enter Damjiro Gakuhu.'\n        helperText={errorMsg}\n        error={errorMsg}\n        multiline={true}\n        rows={3}\n        InputLabelProps={{\n          shrink: true\n        }}\n        variant={'outlined'}\n        onChange={e => {\n          dispatch({ type: 'RESET_USER_NOTES' })\n          setGakufuText(e.target.value)\n\n          if (e.target.value === '') {\n            setErrorMsg(null)\n            return\n          }\n\n          try {\n            const json = JSON.parse(e.target.value)\n            const notes = json.notes.map(n => ({\n              tpos: n[0],\n              duration: n[1],\n              pitch: n[2]\n            }))\n            const videoId = json.youtubeVideoId\n            const timeOffset = json.timeOffset\n            if (!isString(videoId) || !isNumber(timeOffset)) {\n              dispatch({\n                type: 'SNACK_LOAD',\n                message: 'invalid JSON',\n                variant: 'error'\n              })\n            } else {\n              dispatch({ type: 'SET_GAKUFU', gakufu: { notes, videoId } })\n              dispatch({ type: 'SET_USER_TIME_OFFSET', value: timeOffset })\n              setErrorMsg(null)\n            }\n          } catch (e) {\n            dispatch({ type: 'RESET_GAKUFU' })\n            setErrorMsg(e.message)\n            dispatch({\n              type: 'SNACK_LOAD',\n              message: e.message,\n              variant: 'error'\n            })\n          }\n        }}\n      />\n    </FormControl>\n  )\n}\nInputDamjiroGakufu = connect()(InputDamjiroGakufu)\n\nfunction TimeOffsetForm ({ timeOffset, dispatch }) {\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Offset</InputLabel>\n      <Input\n        type='number'\n        value={Math.floor(timeOffset / 1000)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_TIME_OFFSET',\n            value: Number(e.target.value) * 1000\n          })\n        }\n        required\n        endAdornment={<InputAdornment position='end'>ms</InputAdornment>}\n      />\n    </FormControl>\n  )\n}\nTimeOffsetForm = connect(({ user: { timeOffset } }) => ({ timeOffset }))(\n  TimeOffsetForm\n)\n\nfunction PitchOffsetForm ({ pitchOffset, dispatch }) {\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Pitch Offset</InputLabel>\n      <Input\n        type='number'\n        value={Math.floor(pitchOffset)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_PITCH_OFFSET',\n            value: Number(e.target.value)\n          })\n        }\n        required\n        endAdornment={<InputAdornment position='end'>note#</InputAdornment>}\n      />\n    </FormControl>\n  )\n}\nPitchOffsetForm = connect(({ user: { pitchOffset } }) => ({ pitchOffset }))(\n  PitchOffsetForm\n)\n\nfunction NotesScroller ({\n  dispatch,\n  gakufu,\n  user: { notes: uNotes, timeOffset, pitchOffset }\n}) {\n  const marginClasses = useMarginStyles()\n  const playing = useRef(false)\n  const curTimeOffset = useRef(timeOffset)\n  const curPitchOffset = useRef(pitchOffset)\n  const [curtpos, setCurtpos] = useState(0)\n  const video = useRef(null)\n  const onPlay = useCallback(async () => {\n    if (playing.current) return\n    playing.current = true\n\n    // Set timer to scroll notes\n    const timerAdjust = setInterval(\n      () => setCurtpos(video.current.getCurrentTime() * 1000 * 1000),\n      25\n    )\n\n    // Create pitch detector\n    const [getPitch, stopAudio] = await createPitchDetector()\n\n    // Clear user's previous notes\n    dispatch({ type: 'RESET_USER_NOTES' })\n\n    // Loop to get pitches from mic\n    const getBiasedVideoTime = () =>\n      sec2us(video.current.getCurrentTime()) - curTimeOffset.current\n    let prev = getBiasedVideoTime()\n    while (playing.current) {\n      const pitch = await getPitch()\n      const now = getBiasedVideoTime()\n      if (pitch && pitch >= 36 && pitch <= 88) {\n        const duration = now - prev\n        let biasedPitch = pitch\n        let correct = false\n\n        const lbIdx = lower_bound(gakufu.notes, n => n.tpos < prev) - 1\n        const lb = lbIdx >= 0 ? gakufu.notes[lbIdx] : gakufu.notes[0]\n        if (lb) {\n          biasedPitch = lb.pitch + curPitchOffset.current\n          let gap =\n            pitch - biasedPitch - Math.floor((pitch - biasedPitch) / 12) * 12\n          if (gap > 6) gap -= 12\n          biasedPitch += gap\n          if (lb.tpos < prev && prev < lb.tpos + lb.duration && gap === 0)\n            correct = true\n        }\n\n        const note = {\n          tpos: prev,\n          duration,\n          pitch: biasedPitch,\n          correct\n        }\n        dispatch({ type: 'APPEND_USER_NOTE', note })\n      }\n      prev = now\n    }\n    stopAudio()\n\n    // Stop timer\n    clearInterval(timerAdjust)\n  }, [gakufu.notes, dispatch])\n\n  curTimeOffset.current = timeOffset\n  curPitchOffset.current = pitchOffset\n\n  return (\n    <>\n      {gakufu.videoId && (\n        <YouTube\n          videoId={gakufu.videoId}\n          onReady={e => (video.current = e.target)}\n          onPlay={onPlay}\n          onPause={() => (playing.current = false)}\n          onEnd={() => (playing.current = false)}\n        />\n      )}\n\n      {gakufu.notes && (\n        <Grid container direction='row' wrap='wrap' alignItems='flex-end'>\n          <Grid item className={marginClasses.mr2}>\n            <NotesDisplay\n              curtpos={curtpos}\n              gNotes={gakufu.notes}\n              uNotes={uNotes}\n              seconds={30}\n            />\n          </Grid>\n          <Grid\n            item\n            className={[marginClasses.mr2, marginClasses.mt1]}\n            style={{ maxWidth: '140px' }}\n            container\n            direction='column'\n            spacing={2}\n          >\n            <Grid item>\n              {gakufu.midiBuf && (\n                <MIDIPlayer\n                  buffer={gakufu.midiBuf}\n                  onReady={e => (video.current = e.target)}\n                  onPlay={onPlay}\n                  onEnd={() => (playing.current = false)}\n                />\n              )}\n            </Grid>\n            <Grid item>\n              <ScoreDisplay />\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\nNotesScroller = connect(({ gakufu, user }) => ({\n  gakufu,\n  user\n}))(NotesScroller)\n\nfunction ScoreDisplay ({ gNotes, uNotes }) {\n  if (!gNotes || !uNotes) return <div />\n\n  const percPitchCorrect =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      const secretNonLinearFunc = x => x / (1 + Math.abs(x))\n      return acc + uNote.duration * (1 - secretNonLinearFunc(loss))\n    }, 0) / gNotes.reduce((sum, gNote) => sum + gNote.duration, 0)\n  const percPitchAccuracy =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      return uNote.pitch === gNote.pitch ? acc + uNote.duration : acc\n    }, 0) / uNotes.reduce((sum, uNote) => sum + uNote.duration, 0)\n  const geta = 0\n  const scale = 1.2\n  const score = (percPitchCorrect * 100 + geta) * scale\n\n  const accuracy = percPitchAccuracy * 100\n\n  return (\n    <div>\n      <Typography variant='h6'>\n        Score: {Math.round(score * 100) / 100} Accuracy:{' '}\n        {Math.round(accuracy * 100) / 100}\n      </Typography>\n    </div>\n  )\n}\nScoreDisplay = connect(\n  ({ gakufu: { notes: gNotes }, user: { notes: uNotes } }) => ({\n    gNotes,\n    uNotes\n  })\n)(ScoreDisplay)\n\nfunction SingFromGakufuCard () {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n  const [expanded, setExpanded] = React.useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Card className={marginClasses.m1}>\n      <CardContent>\n        <Typography variant='h5'>\n          <Audiotrack className={classes.wrapIcon} />\n          Sing a song\n        </Typography>\n        <Grid\n          className={marginClasses.mt2}\n          container\n          direction='row'\n          justify='space-around'\n        >\n          <Grid item xs={5}>\n            <Typography\n              variant='h6'\n              className={marginClasses.mb2}\n              color='textSecondary'\n            >\n              <MusicVideo className={classes.wrapIcon} />\n              From Damjiro Gakufu file.\n            </Typography>\n            <InputDamjiroGakufu />\n          </Grid>\n          <Divider orientation='vertical' flexItem />\n          <Grid\n            item\n            xs={5}\n            container\n            direction='column'\n            justify='space-between'\n          >\n            <Typography variant='h6' color='textSecondary'>\n              <FontAwesomeIcon\n                icon={['far', 'file-audio']}\n                className={classes.wrapIcon}\n              />\n              From midi file.\n            </Typography>\n            <MIDIFilePicker\n              onLoad={buf => {\n                store.dispatch({\n                  type: 'SET_GAKUFU',\n                  gakufu: {\n                    notes: midi2notes(buf, 0, 0),\n                    midiBuf: buf,\n                    videoId: null\n                  }\n                })\n              }}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardContent>\n        <NotesScroller />\n      </CardContent>\n      <CardActions disableSpacing>\n        <Typography color='textSecondary' className={marginClasses.ml1}>\n          <Settings className={classes.wrapIcon} />\n          Adjustment\n        </Typography>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label='show more'\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout='auto' unmountOnExit>\n        <Grid\n          container\n          spacing={5}\n          direction='row'\n          className={marginClasses.collapse}\n        >\n          <Grid item xs={3}>\n            <TimeOffsetForm />\n          </Grid>\n          <Grid item xs={3}>\n            <PitchOffsetForm />\n          </Grid>\n        </Grid>\n      </Collapse>\n    </Card>\n  )\n}\n\nconst MakeGakufuCard = () => {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n\n  return (\n    <Card className={marginClasses.m1}>\n      <CardContent>\n        <Typography variant='h5'>\n          <Edit className={classes.wrapIcon} />\n          Make Damjiro Gakuhu.\n        </Typography>\n      </CardContent>\n      <MIDIEditor />\n    </Card>\n  )\n}\n\nfunction gakufuReducer (\n  state = { notes: null, videoId: null, midiBuf: null },\n  action\n) {\n  switch (action.type) {\n    case 'SET_GAKUFU':\n      return action.gakufu\n\n    case 'RESET_GAKUFU':\n      return { notes: null, videoId: null }\n\n    default:\n      return state\n  }\n}\n\nfunction userReducer (\n  state = {\n    notes: [],\n    timeOffset: 300000,\n    pitchOffset: 0\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SET_USER_TIME_OFFSET':\n      return {\n        ...state,\n        timeOffset: action.value\n      }\n\n    case 'SET_USER_PITCH_OFFSET':\n      return {\n        ...state,\n        pitchOffset: action.value\n      }\n\n    case 'RESET_USER_NOTES':\n      return {\n        ...state,\n        notes: []\n      }\n\n    case 'APPEND_USER_NOTE':\n      return {\n        ...state,\n        notes: state.notes.concat(action.note)\n      }\n\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  gakufu: gakufuReducer,\n  user: persistReducer(\n    {\n      key: 'user',\n      storage,\n      whitelist: ['pitchOffset']\n    },\n    userReducer\n  ),\n  snack: snackbarReducer\n})\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n  },\n  rootReducer\n)\n\nconst store = createStore(persistedReducer)\nconst persistor = persistStore(store)\n\nexport const useCardStyles = makeStyles(theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  wrapIcon: {\n    verticalAlign: 'middle',\n    display: 'inline-flex',\n    marginRight: theme.spacing(1)\n  }\n}))\n\nexport const useMarginStyles = makeStyles(theme => ({\n  mt1: {\n    marginTop: theme.spacing(1)\n  },\n  mt2: {\n    marginTop: theme.spacing(2)\n  },\n  mt3: {\n    marginTop: theme.spacing(3)\n  },\n  mb1: {\n    marginBottom: theme.spacing(1)\n  },\n  mb2: {\n    marginBottom: theme.spacing(2)\n  },\n  m1: {\n    margin: theme.spacing(1)\n  },\n  m3: {\n    margin: theme.spacing(3)\n  },\n  ml1: {\n    marginLeft: theme.spacing(1)\n  },\n  collapse: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  mr2: {\n    marginRight: theme.spacing(2)\n  }\n}))\n\nfunction App () {\n  const marginStyles = useMarginStyles()\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <CssBaseline />\n        <Container maxWidth={false}>\n          <Typography variant='h4' className={marginStyles.m1}>\n            Damjiro\n          </Typography>\n          <SingFromGakufuCard />\n          <MakeGakufuCard />\n        </Container>\n        <MessageSnackbar />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","export default function snackbarReducer (\n  state = {\n    loadSnack: false,\n    message: '',\n    variant: ''\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SNACK_LOAD':\n      console.log('loaded', action)\n      return {\n        ...state,\n        openSnack: true,\n        message: action.message,\n        variant: action.variant\n      }\n\n    case 'SNACK_UNLOAD':\n      console.log('unloaded', action)\n      return {\n        ...state,\n        openSnack: false\n      }\n\n    default:\n      return state\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}