{"version":3,"sources":["MIDIPlayer.js","shared/MessageSnackbar.js","pages/AboutPage.js","util/MIDILoader.js","MIDIEditor.js","pages/MakeGakufuPage.js","pages/ErrorPage.js","pages/SingGakufuPage.js","MIDIFilePicker.js","pages/SingMIDIPage.js","container/Header.js","container/Footer.js","WebGLSupportAlert.js","util/PitchDetector.js","MicLatencyEstimationDialog.js","App.js","reducers/SnackbarReducer.js","serviceWorker.js","index.js"],"names":["getFirstEffectiveMIDIEvent","midiBuf","ons","MIDIFile","getMidiEvents","filter","ev","subtype","MIDIEvents","EVENT_MIDI_NOTE_ON","length","Error","PCMPlayer","audioContext","pcm","stop","_playing","_source","_pcm","emit","_audioContext","_currentTime","_offset","_epoch","this","buffer","createBuffer","numChannels","data","sampleRate","ch","out","getChannelData","i","si","s","createBufferSource","connect","destination","onended","currentTime","start","EventEmitter","MIDIPlayer","onReady","onPlay","onEnd","useState","setAudioContext","pcmPlayer","setPCMPlayer","isPlaying","setIsPlaying","refOnReady","useRef","refOnPlay","refOnEnd","classes","useCardStyles","useEffect","AudioContext","close","a","synth","JSLibTimidity","process","isReady","Promise","r","setTimeout","midi2wav","Uint8Array","pcmWoRest","restLength","playTime","Int16Array","set","player","current","target","on","oldPlayer","f","Button","size","variant","onClick","play","PlayArrow","className","wrapIcon","Typography","component","variantIcon","success","CheckCircle","warning","Warning","error","info","Info","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MessageSnackbar","snack","openSnack","dispatch","customTag","handleClose","type","Object","keys","includes","Icon","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","Close","useListStyles","nested","paddingLeft","root","background","paper","AboutPage","push","listClasses","Container","List","ListItem","ListItemIcon","Audiotrack","ListItemText","button","MusicVideo","NavigateNext","wrapAwesomeIcon","Divider","Edit","MIDILoader","file","onLoad","reader","FileReader","onload","e","result","readAsArrayBuffer","toString","gakufu2json","gNotes","youtubeVideoId","gakufu","notes","map","n","Math","round","tpos","duration","pitch","JSON","stringify","ColorlibConnector","withStyles","alternativeLabel","top","active","backgroundImage","completed","line","height","border","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","width","justifyContent","boxShadow","font","ColoredStepIcon","props","icons","1","2","Movie","3","GetApp","String","videoFrame","MIDIEditor","activeStep","setActiveStep","steps","fileBody","setFileBody","trackNo","setTrackNo","channelNo","setChannelNo","introTime","setIntroTime","pitchOffset","setPitchOffset","setYoutubeVideoId","video","setVideo","errorMsg","gNotesOriginal","midi2notes","epoch","makeNotesSensible","estimatedIntroTime","seekTo","Stepper","connector","label","Step","StepLabel","StepIconComponent","CardContent","instructions","CardActions","Grid","container","direction","justify","item","NavigateBefore","step","TextField","accept","InputLabelProps","shrink","onChange","files","orientation","flexItem","Number","value","NotesDisplay","curtpos","uNotes","seconds","wrap","style","maxWidth","xl","lg","fullWidth","Hidden","mdDown","videoId","playVideo","pauseVideo","xs","multiline","rows","readOnly","getStepContent","disabled","prevActiveStep","isDisableNextButton","MakeGakufuPage","marginClasses","useMarginStyles","Card","m3","CardHeader","title","ErrorPage","state","search","router","location","params","querystring","parse","slice","statusCodeNum","status","Alert","severity","AlertTitle","code","codeNum2Message","SingGakufuPage","expanded","setExpanded","mt2","mb2","InputDamjiroGakufu","NotesScroller","disableSpacing","ml1","Settings","expand","expandOpen","aria-expanded","ExpandMore","Collapse","in","timeout","unmountOnExit","collapse","TimeOffsetForm","PitchOffsetForm","MIDIFilePicker","SingMIDIPage","checkedMute","setCheckedMute","console","log","buf","muteMIDIChannel","FormControlLabel","control","Checkbox","checked","name","Header","ButtonBase","Footer","Link","href","rel","WebGLSupportAlert","doesSupport","setDoesSupport","setOpen","canvas","document","createElement","webGLContext","getContext","window","WebGLRenderingContext","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","createPitchDetector","stream","resolve","pitchHandler","ml5","pitchDetection","getPitch","freq","inputBuffer","m","stopAudio","estimateLatency","context","NTESTS","navigator","mediaDevices","getUserMedia","audio","echoCancellation","baseTime","osc","createOscillator","frequency","prevInputTime","prevIndex","lats","inputTime","val","index","floor","lat","getTracks","forEach","track","mean","reduce","b","std","sqrt","x","pow","onDone","onCancel","estimating","setEstimating","handleStart","dividers","gutterBottom","CircularProgress","sec2us","isClose","abs","num","base","lower_bound","ary","cmp","begin","end","len","half","mid","impl","targetTrack","targetChannel","midi","header","getFormat","getTracksCount","getTimeDivision","TICKS_PER_BEAT","notes_begin","notes_end","events","channel","param1","EVENT_MIDI_NOTE_OFF","lyrics","getLyrics","text","Encoding","convert","to","stateTbl","stateTblDefault","st","lyr","idx","lhs","rhs","note","getTrackEvents","param2","setTrackEvents","getContent","library","add","faFileAudio","NotesSVG","styled","svg","minmax","min","max","MAX_VALUE","MIN_VALUE","NOTE_NUM_MIN","NOTE_NUM_MAX","cw","tpos2x","tpos2x_view","filterNotes","notes2bars","shouldConcat","acc","last","concat","Fragment","y","rx","ry","fill","fillOpacity","viewBox","x1","x2","y1","y2","strokeWidth","stroke","Array","from","_","correct","gakufuText","setGakufuText","setErrorMsg","FormControl","helperText","json","timeOffset","dialogOpen","setDialogOpen","InputLabel","Input","required","endAdornment","InputAdornment","position","offset","user","micStream","playing","curTimeOffset","curPitchOffset","setCurtpos","useCallback","timerAdjust","setInterval","getCurrentTime","getBiasedVideoTime","prev","videoCurrentTime","micCurrentTime","biasedPitch","lbIdx","lb","gap","clearInterval","onPause","mr2","flexGrow","mt1","ScoreDisplay","percPitchCorrect","uNote","gNote","loss","sum","percPitchAccuracy","score","accuracy","isNaN","history","createBrowserHistory","basename","rootReducer","combineReducers","persistReducer","storage","whitelist","loadSnack","connectRouter","persistedReducer","store","createStore","compose","applyMiddleware","routerMiddleware","persistor","persistStore","transform","marginLeft","transition","transitions","create","shortest","verticalAlign","marginTop","mt3","mb1","marginBottom","m1","margin","mauto","App","loading","CssBaseline","exact","path","render","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3cb46735.chunk.js","sourcesContent":["import { useCardStyles } from './App'\nimport React, { useEffect, useState, useRef } from 'react'\nimport JSLibTimidity from 'js-libtimidity'\nimport EventEmitter from 'events'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\nimport Button from '@material-ui/core/Button'\nimport { PlayArrow } from '@material-ui/icons'\nimport Typography from '@material-ui/core/Typography'\n\nconst TIMIDITY_CFG = `\nsoundfont GeneralUserGSv1.471.sf2\n`\n\nfunction getFirstEffectiveMIDIEvent (midiBuf) {\n  const midi = new MIDIFile(midiBuf)\n  const events = midi.getMidiEvents()\n  const ons = events.filter(ev => ev.subtype === MIDIEvents.EVENT_MIDI_NOTE_ON)\n  if (ons.length === 0) throw new Error('invalid midi file')\n  return ons[0]\n}\n\nclass PCMPlayer extends EventEmitter {\n  constructor (audioContext, pcm) {\n    super()\n    this._audioContext = audioContext\n    this._pcm = pcm\n    this._playing = false\n    this._currentTime = 0\n    this._offset = 0\n    this._epoch = null\n  }\n\n  play () {\n    if (this._playing) return\n\n    const buffer = this._audioContext.createBuffer(\n      this._pcm.numChannels,\n      this._pcm.data.length / this._pcm.numChannels,\n      this._pcm.sampleRate\n    )\n    for (let ch = 0; ch < this._pcm.numChannels; ch++) {\n      const out = buffer.getChannelData(ch)\n      for (let i = 0; i < out.length; i++) {\n        const si = (this._offset + i) * this._pcm.numChannels + ch\n        const s = si < this._pcm.data.length ? this._pcm.data[si] / 0x7fff : 0\n        out[i] = s\n      }\n    }\n\n    this._source = this._audioContext.createBufferSource()\n    this._source.buffer = buffer\n    this._source.connect(this._audioContext.destination)\n    this._source.onended = this.stop\n\n    this._epoch = this._audioContext.currentTime + 0.1\n    this._source.start(this._epoch)\n\n    this._playing = true\n    this.emit('start')\n  }\n\n  stop = () => {\n    if (!this._playing) return\n\n    this._source.stop()\n\n    this._playing = false\n    this._pcm = null\n    this.emit('end')\n  }\n\n  getCurrentTime () {\n    if (!this._epoch) return 0\n    return this._audioContext.currentTime - this._epoch\n  }\n}\n\nfunction MIDIPlayer ({ buffer, onReady, onPlay, onEnd }) {\n  const [audioContext, setAudioContext] = useState(null)\n  const [pcmPlayer, setPCMPlayer] = useState(null)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const refOnReady = useRef(onReady)\n  const refOnPlay = useRef(onPlay)\n  const refOnEnd = useRef(onEnd)\n  const classes = useCardStyles()\n\n  useEffect(() => {\n    const audioContext = new AudioContext()\n    setAudioContext(audioContext)\n    return () => {\n      audioContext.close()\n    }\n  }, [])\n  useEffect(() => {\n    if (!audioContext || !buffer) return\n    async function f () {\n      const synth = new JSLibTimidity(process.env.PUBLIC_URL, TIMIDITY_CFG, {\n        sampleRate: audioContext.sampleRate,\n        numChannels: 2\n      })\n      while (!synth.isReady()) await new Promise(r => setTimeout(r, 1000))\n      let pcmWoRest = await synth.midi2wav(new Uint8Array(buffer))\n\n      // Prefix 'rest' to pcmWoRest\n      // c.f.: https://superuser.com/questions/737036/timidity-extract-tracks-preserving-initial-silence\n      const restLength =\n        (getFirstEffectiveMIDIEvent(buffer).playTime / 1000) *\n        pcmWoRest.sampleRate *\n        pcmWoRest.numChannels\n      const pcm = {\n        ...pcmWoRest,\n        data: new Int16Array(restLength + pcmWoRest.data.length)\n      }\n      pcm.data.set(pcmWoRest.data, restLength)\n\n      const player = new PCMPlayer(audioContext, pcm)\n      if (refOnReady.current) refOnReady.current({ target: player })\n      player.on('start', () => {\n        if (refOnPlay.current) refOnPlay.current()\n        setIsPlaying(true)\n      })\n      player.on('end', () => {\n        if (refOnEnd.current) refOnEnd.current()\n        setIsPlaying(false)\n      })\n      setPCMPlayer(oldPlayer => {\n        if (oldPlayer) oldPlayer.stop()\n        return player\n      })\n    }\n    f()\n  }, [buffer, audioContext])\n\n  refOnReady.current = onReady\n  refOnPlay.current = onPlay\n  refOnEnd.current = onEnd\n\n  return (\n    <>\n      {pcmPlayer && !isPlaying ? (\n        <Button\n          size='large'\n          variant='outlined'\n          onClick={() => pcmPlayer.play()}\n        >\n          <PlayArrow className={classes.wrapIcon} />\n          Play\n        </Button>\n      ) : (\n        <>\n          {!isPlaying && <Typography component={'sub'}>Loading...</Typography>}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default MIDIPlayer\n","import {\n  IconButton,\n  makeStyles,\n  Snackbar,\n  SnackbarContent\n} from '@material-ui/core'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { CheckCircle, Close, Error, Info, Warning } from '@material-ui/icons'\nimport { amber, green } from '@material-ui/core/colors'\nimport clsx from 'clsx'\n\n/**\n * Show snackbar with custom message from Redux.\n * How to use:\n * 1. Connect your component with dispatch. For example:\n * ```\n * const _yourComponent = (dispatch) => {\n *\n * }\n * const YourComponent()(_yourComponent);\n * ```\n * 2. Use dispatch() when you want to show messages with snackbar.\n * `dispatch({type: 'SNACK_LOAD', message: 'some Message', variant: 'error'})`\n *\n * @param openSnack\n *  from redux. no need to config.\n * @param variant default 'info'\n *  from redux, need to config. you can choose one of 'error', 'info', 'success', 'warning'.\n * @param message\n *  from redux, need to config.\n * @param dispatch\n *  from redux.\n * @param customTag\n *  you can customize Snackbar from material UI. add some tag implemented Snackbar.\n * @returns <Snackbar />\n */\n\nexport const variantIcon = {\n  success: CheckCircle,\n  warning: Warning,\n  error: Error,\n  info: Info\n}\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nconst _messageSnackbar = ({\n  openSnack,\n  variant,\n  message,\n  dispatch,\n  ...customTag\n}) => {\n  const handleClose = () => dispatch({ type: 'SNACK_UNLOAD' })\n  const classes = useStyles()\n  variant = Object.keys(variantIcon).includes(variant) ? variant : 'info'\n  const Icon = variantIcon[variant]\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      open={openSnack}\n      onClose={handleClose}\n      {...customTag}\n    >\n      <SnackbarContent\n        className={clsx(classes[variant])}\n        aria-describedby='snackbar'\n        message={\n          <span id='snackbar' className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key='close'\n            aria-label='close'\n            color='inherit'\n            onClick={handleClose}\n          >\n            <Close className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  )\n}\nconst MessageSnackbar = connect(\n  ({ snack: { openSnack, variant, message } }) => ({\n    openSnack,\n    variant,\n    message\n  })\n)(_messageSnackbar)\nexport default MessageSnackbar\n","import { useCardStyles } from '../App'\nimport React from 'react'\nimport {\n  Container,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { Audiotrack, Edit, MusicVideo, NavigateNext } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst useListStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(8)\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  }\n}))\n\nconst _aboutPage = ({ push }) => {\n  const classes = useCardStyles()\n  const listClasses = useListStyles()\n\n  const handleSingGakufu = () => push('/gakufu/sing')\n  const handleSingMIDI = () => push('/midi/sing')\n  const handleMakeGakufu = () => push('/gakufu/make')\n\n  return (\n    <Container>\n      <Typography>あばうとぺーじ☆彡</Typography>\n      <List component='nav' className={listClasses.root}>\n        <ListItem>\n          <ListItemIcon>\n            <Audiotrack className={classes.wrapIcon} />\n          </ListItemIcon>\n          <ListItemText primary='Sing a song' />\n        </ListItem>\n        <ListItem\n          button\n          onClick={handleSingGakufu}\n          className={listClasses.nested}\n        >\n          <ListItemIcon>\n            <MusicVideo className={classes.wrapIcon} />\n          </ListItemIcon>\n          <ListItemText primary='from damjiro Gakufu' />\n          <NavigateNext />\n        </ListItem>\n        <ListItem\n          button\n          onClick={handleSingMIDI}\n          className={listClasses.nested}\n        >\n          <ListItemIcon>\n            <FontAwesomeIcon\n              icon={['far', 'file-audio']}\n              className={classes.wrapAwesomeIcon}\n            />\n          </ListItemIcon>\n          <ListItemText primary='from MIDI file' />\n          <NavigateNext />\n        </ListItem>\n        <Divider />\n        <ListItem button onClick={handleMakeGakufu}>\n          <ListItemIcon>\n            <Edit className={classes.wrapIcon} />\n          </ListItemIcon>\n          <ListItemText primary='Make damjiro Gakufu' />\n          <NavigateNext />\n        </ListItem>\n      </List>\n    </Container>\n  )\n}\nconst AboutPage = connect(null, { push })(_aboutPage)\nexport default AboutPage\n","const MIDILoader = (file, onLoad, dispatch) => {\n  try {\n    if (!['audio/midi', 'audio/x-midi', 'audio/mid'].includes(file.type)) {\n      dispatch({\n        type: 'SNACK_LOAD',\n        message: 'Invalid mime type',\n        variant: 'error'\n      })\n    } else {\n      const reader = new FileReader()\n      reader.onload = e => onLoad(e.target.result)\n      reader.readAsArrayBuffer(file)\n    }\n  } catch (e) {\n    dispatch({ type: 'SNACK_LOAD', message: e.toString(), variant: 'error' })\n  }\n}\nexport default MIDILoader\n","import React, { useEffect, useRef, useState } from 'react'\nimport MIDILoader from './util/MIDILoader'\nimport YouTube from 'react-youtube'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { midi2notes, NotesDisplay } from './App'\n\n//material-ui\nimport { GetApp, Movie, NavigateBefore, NavigateNext } from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport { makeStyles } from '@material-ui/core/styles'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Step from '@material-ui/core/Step'\nimport Stepper from '@material-ui/core/Stepper'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport clsx from 'clsx'\nimport Divider from '@material-ui/core/Divider'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Grid from '@material-ui/core/Grid'\nimport { Hidden, TextField } from '@material-ui/core'\n\nfunction makeNotesSensible (notes, introTime, pitchOffset) {\n  if (notes.length === 0) return notes\n\n  const epoch = notes[0].tpos\n  return notes.map(n => ({\n    tpos: n.tpos - epoch + introTime,\n    duration: n.duration,\n    pitch: n.pitch + pitchOffset\n  }))\n}\n\nfunction gakufu2json (gNotes, youtubeVideoId) {\n  const gakufu = {\n    notes: gNotes.map(n => [\n      Math.round(n.tpos),\n      Math.round(n.duration),\n      Math.round(n.pitch)\n    ]),\n    youtubeVideoId\n  }\n  return JSON.stringify(gakufu)\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 136deg, #000046 0%, #1CB5E0 80%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 136deg, #000046 0%, #1CB5E0 80%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector)\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#cccccc',\n    zIndex: 1,\n    color: '#ffffff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, #1CB5E0 20%, #000046 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, #1CB5E0 20%, #000046 100%)'\n  },\n  font: {\n    fontSize: '24px'\n  }\n})\n\nfunction ColoredStepIcon (props) {\n  const classes = useColorlibStepIconStyles()\n  const { active, completed } = props\n\n  const icons = {\n    1: <FontAwesomeIcon icon={['far', 'file-audio']} fontSize={500} />,\n    2: <Movie />,\n    3: <GetApp />\n  }\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes.active]: active,\n          [classes.completed]: completed\n        },\n        classes.font\n      )}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  videoFrame: {\n    width: '640px',\n    height: '360px'\n  }\n}))\n\nfunction MIDIEditor ({ dispatch, push }) {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = useState(0)\n  const steps = ['Select midi file', 'Input youtube Id', 'Check output Gakufu']\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\n  }\n\n  const handleTop = () => {\n    push('/')\n  }\n\n  const [fileBody, setFileBody] = useState('')\n  const [trackNo, setTrackNo] = useState(0)\n  const [channelNo, setChannelNo] = useState(0)\n  const [introTime, setIntroTime] = useState(0)\n  const [pitchOffset, setPitchOffset] = useState(0)\n  const [youtubeVideoId, setYoutubeVideoId] = useState('')\n  const [video, setVideo] = useState(null)\n  const errorMsg = useRef('')\n\n  let gNotesOriginal = []\n  let gNotes = []\n  if (fileBody) {\n    try {\n      gNotesOriginal = midi2notes(fileBody, trackNo, channelNo)\n      gNotes = makeNotesSensible(\n        gNotesOriginal,\n        introTime * 1000000,\n        pitchOffset\n      )\n      errorMsg.current = null\n    } catch (e) {\n      errorMsg.current = e.message\n    }\n  }\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return (\n          <>\n            <Grid container direction='column' justify='center' spacing={2}>\n              <Grid item container direction='row' justify='center' spacing={2}>\n                <Grid item>\n                  <TextField\n                    type='file'\n                    accept='audio/midi, audio/x-midi, audio/mid'\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    variant={'outlined'}\n                    onChange={e => {\n                      // Reset\n                      setFileBody('')\n                      setTrackNo(0)\n                      setChannelNo(0)\n                      setIntroTime(0)\n                      setPitchOffset(0)\n                      setYoutubeVideoId('')\n                      setVideo(null)\n                      errorMsg.current = ''\n\n                      // Read the file\n                      const file = e.target.files[0]\n                      MIDILoader(file, setFileBody, dispatch)\n                    }}\n                    label='Select a midi file.'\n                  />\n                </Grid>\n                <Divider orientation='vertical' flexItem />\n                <Grid item>\n                  <TextField\n                    label='Track No.'\n                    type='number'\n                    onChange={e => setTrackNo(Number(e.target.value))}\n                    value={trackNo}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    variant={'outlined'}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label='Channel No.'\n                    type='number'\n                    onChange={e => setChannelNo(Number(e.target.value))}\n                    value={channelNo}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    variant={'outlined'}\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label='pitch offset (SMF note #)'\n                    type='number'\n                    onChange={e => setPitchOffset(Number(e.target.value))}\n                    value={pitchOffset}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    variant={'outlined'}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <NotesDisplay\n              curtpos={0}\n              gNotes={gNotes}\n              uNotes={[]}\n              seconds={30}\n            />\n          </>\n        )\n      case 1:\n        return (\n          <Grid\n            container\n            direction='row'\n            wrap='wrap'\n            justify='space-around'\n            spacing={2}\n          >\n            <Grid\n              item\n              style={{ maxWidth: '300px' }}\n              xl={3}\n              lg={12}\n              container\n              direction='column'\n              spacing={2}\n            >\n              <Grid item>\n                <TextField\n                  fullWidth\n                  label='YouTube video id'\n                  type='text'\n                  onChange={e => setYoutubeVideoId(String(e.target.value))}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  label='intro time (sec)'\n                  type='number'\n                  step='any'\n                  onChange={e => setIntroTime(Number(e.target.value))}\n                  value={introTime}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n            </Grid>\n            <Hidden mdDown>\n              <Divider orientation='vertical' flexItem />\n            </Hidden>\n            <Grid item style={{ maxWidth: '640px' }} xl={9} lg={12}>\n              {youtubeVideoId ? (\n                <YouTube\n                  videoId={youtubeVideoId}\n                  onReady={e => {\n                    const video = e.target\n                    setVideo(video)\n                    video.playVideo()\n                    video.pauseVideo()\n                  }}\n                />\n              ) : (\n                <div className={classes.videoFrame} />\n              )}\n            </Grid>\n          </Grid>\n        )\n      case 2:\n        return (\n          <Grid item container direction='row' justify='center' spacing={3}>\n            <Grid item xs={10}>\n              <TextField\n                fullWidth\n                multiline\n                rows={8}\n                label='Output Gakufu'\n                value={\n                  fileBody && youtubeVideoId\n                    ? gakufu2json(gNotes, youtubeVideoId)\n                    : ''\n                }\n                readOnly\n                InputLabelProps={{\n                  shrink: true\n                }}\n                variant={'outlined'}\n              />\n            </Grid>\n            <Grid item>\n              <Typography>{errorMsg.current}</Typography>\n            </Grid>\n          </Grid>\n        )\n      default:\n        dispatch({\n          type: 'SNACK_LOAD',\n          message: 'Unknown step Error',\n          variant: 'error'\n        })\n        return\n    }\n  }\n\n  const isDisableNextButton = step => {\n    switch (step) {\n      case 0:\n        return !fileBody\n      case 1:\n        return !youtubeVideoId\n      case 2:\n        return false\n      default:\n        return true\n    }\n  }\n\n  useEffect(() => {\n    if (gNotesOriginal.length === 0) return\n    const estimatedIntroTime = gNotesOriginal[0].tpos / 1000000\n    setIntroTime(estimatedIntroTime)\n  }, [fileBody, trackNo, channelNo])\n\n  useEffect(() => {\n    if (!video) return\n    video.seekTo(introTime, true)\n  }, [video, introTime])\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColoredStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <>\n            <CardContent>\n              <Typography className={classes.instructions}>\n                Let's sing with your Gakufu!\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Grid container direction='row' justify='space-around'>\n                <Grid item>\n                  <Button onClick={handleTop} className={classes.button}>\n                    <NavigateBefore />\n                    Back to Top\n                  </Button>\n                </Grid>\n              </Grid>\n            </CardActions>\n          </>\n        ) : (\n          <div>\n            <CardContent>{getStepContent(activeStep)}</CardContent>\n            <CardActions>\n              <Grid container direction='row' justify='space-around'>\n                <Grid item>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    <NavigateBefore />\n                    Back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleNext}\n                    className={classes.button}\n                    disabled={isDisableNextButton(activeStep)}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    <NavigateNext />\n                  </Button>\n                </Grid>\n              </Grid>\n            </CardActions>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\nMIDIEditor = connect(null, { push })(MIDIEditor)\nexport default MIDIEditor\n","import { useCardStyles, useMarginStyles } from '../App'\nimport { Typography, Card, CardHeader, Container } from '@material-ui/core'\nimport { Edit } from '@material-ui/icons'\nimport MIDIEditor from '../MIDIEditor'\nimport React from 'react'\n\nconst MakeGakufuPage = () => {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n\n  return (\n    <Container>\n      <Card className={marginClasses.m3}>\n        <CardHeader\n          title={\n            <Typography variant='h5'>\n              <Edit className={classes.wrapIcon} />\n              Make Damjiro Gakuhu.\n            </Typography>\n          }\n        />\n        <MIDIEditor />\n      </Card>\n    </Container>\n  )\n}\nexport default MakeGakufuPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport querystring from 'querystring'\n\nconst _errorPage = ({ search }) => {\n  const codeNum2Message = code => {\n    switch (code) {\n      case 404:\n        return 'Not Found'\n      default:\n        return 'Unexpected Error'\n    }\n  }\n\n  const params = querystring.parse(search.slice(1))\n  const statusCodeNum = Number(params.status)\n\n  return (\n    <Grid container direction='row' justify='center'>\n      <Grid item xs={8}>\n        <Alert severity='error'>\n          <AlertTitle>{statusCodeNum}</AlertTitle>\n          {codeNum2Message(statusCodeNum)}\n        </Alert>\n      </Grid>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => ({\n  search: state.router.location.search\n})\n\nconst ErrorPage = connect(mapStateToProps)(_errorPage)\nexport default ErrorPage\n","import React, { useState } from 'react'\nimport {\n  InputDamjiroGakufu,\n  NotesScroller,\n  PitchOffsetForm,\n  TimeOffsetForm,\n  useCardStyles,\n  useMarginStyles\n} from '../App'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Collapse,\n  Grid,\n  IconButton,\n  Typography,\n  Container,\n  CardHeader\n} from '@material-ui/core'\nimport {\n  Audiotrack,\n  ExpandMore,\n  MusicVideo,\n  Settings\n} from '@material-ui/icons'\nimport clsx from 'clsx'\n\nconst SingGakufuPage = () => {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n  const [expanded, setExpanded] = useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Container>\n      <Card className={marginClasses.m3}>\n        <CardHeader\n          title={\n            <Typography variant='h5'>\n              <Audiotrack className={classes.wrapIcon} />\n              Sing a song\n            </Typography>\n          }\n        />\n        <CardContent>\n          <Grid\n            className={marginClasses.mt2}\n            container\n            direction='row'\n            justify='space-around'\n          >\n            <Grid item xs={5}>\n              <Typography\n                variant='h6'\n                className={marginClasses.mb2}\n                color='textSecondary'\n              >\n                <MusicVideo className={classes.wrapIcon} />\n                From Damjiro Gakufu file.\n              </Typography>\n              <InputDamjiroGakufu />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardContent>\n          <NotesScroller />\n        </CardContent>\n        <CardActions disableSpacing>\n          <Typography color='textSecondary' className={marginClasses.ml1}>\n            <Settings className={classes.wrapIcon} />\n            Adjustment\n          </Typography>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label='show more'\n          >\n            <ExpandMore />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout='auto' unmountOnExit>\n          <Grid\n            container\n            spacing={5}\n            direction='row'\n            className={marginClasses.collapse}\n          >\n            <Grid item xs={3}>\n              <TimeOffsetForm />\n            </Grid>\n            <Grid item xs={3}>\n              <PitchOffsetForm />\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </Container>\n  )\n}\nexport default SingGakufuPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MIDILoader from './util/MIDILoader'\nimport TextField from '@material-ui/core/TextField'\n\nfunction MIDIFilePicker ({ onLoad, dispatch }) {\n  return (\n    <TextField\n      type='file'\n      label='Select a midi file.'\n      accept='audio/midi, audio/x-midi, audio/mid'\n      onChange={e => {\n        // Read the file\n        const file = e.target.files[0]\n        MIDILoader(file, onLoad, dispatch)\n      }}\n      InputLabelProps={{\n        shrink: true\n      }}\n      variant={'outlined'}\n    />\n  )\n}\nMIDIFilePicker = connect()(MIDIFilePicker)\nexport default MIDIFilePicker\n","import React, { useState } from 'react'\nimport {\n  useCardStyles,\n  useMarginStyles,\n  midi2notes,\n  muteMIDIChannel,\n  NotesScroller,\n  PitchOffsetForm,\n  TimeOffsetForm\n} from '../App'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Checkbox,\n  Collapse,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  Typography,\n  Container,\n  CardHeader\n} from '@material-ui/core'\nimport { Audiotrack, ExpandMore, Settings } from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport MIDIFilePicker from '../MIDIFilePicker'\nimport clsx from 'clsx'\nimport { connect } from 'react-redux'\n\nconst _singMIDIPage = ({ dispatch }) => {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n  const [expanded, setExpanded] = useState(false)\n  const [checkedMute, setCheckedMute] = useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  console.log(checkedMute)\n\n  return (\n    <Container>\n      <Card className={marginClasses.m3}>\n        <CardHeader\n          title={\n            <Typography variant='h5'>\n              <Audiotrack className={classes.wrapIcon} />\n              Sing a song\n            </Typography>\n          }\n        />\n        <CardContent>\n          <Grid\n            className={marginClasses.mt2}\n            container\n            direction='row'\n            justify='space-around'\n          >\n            <Grid\n              item\n              xs={5}\n              container\n              direction='column'\n              justify='space-between'\n            >\n              <Typography\n                variant='h6'\n                color='textSecondary'\n                className={marginClasses.mb2}\n              >\n                <FontAwesomeIcon\n                  icon={['far', 'file-audio']}\n                  className={classes.wrapIcon}\n                />\n                From midi file.\n              </Typography>\n              <MIDIFilePicker\n                onLoad={buf => {\n                  dispatch({\n                    type: 'SET_GAKUFU',\n                    gakufu: {\n                      notes: midi2notes(buf, 0, 0),\n                      midiBuf: checkedMute ? muteMIDIChannel(buf, 0, 0) : buf,\n                      videoId: null\n                    }\n                  })\n                }}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={checkedMute}\n                    onChange={e => setCheckedMute(e.target.checked)}\n                    name='checkedMute'\n                  />\n                }\n                label='Mute melody'\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardContent>\n          <NotesScroller />\n        </CardContent>\n        <CardActions disableSpacing>\n          <Typography color='textSecondary' className={marginClasses.ml1}>\n            <Settings className={classes.wrapIcon} />\n            Adjustment\n          </Typography>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label='show more'\n          >\n            <ExpandMore />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout='auto' unmountOnExit>\n          <Grid\n            container\n            spacing={5}\n            direction='row'\n            className={marginClasses.collapse}\n          >\n            <Grid item xs={3}>\n              <TimeOffsetForm />\n            </Grid>\n            <Grid item xs={3}>\n              <PitchOffsetForm />\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </Container>\n  )\n}\nconst SingMIDIPage = connect()(_singMIDIPage)\nexport default SingMIDIPage\n","import React from 'react'\nimport { Container, Grid, Typography, ButtonBase } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nconst _header = ({ push }) => {\n  const handleTop = () => push('/')\n\n  return (\n    <Container>\n      <Grid container direction='row' justify='center'>\n        <Grid item>\n          <ButtonBase onClick={handleTop}>\n            <Typography variant='h3'>Damjiro</Typography>\n          </ButtonBase>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\nconst Header = connect(null, { push })(_header)\nexport default Header\n","import React from 'react'\nimport { Container, Grid, Typography, Link } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nconst _footer = ({ push }) => {\n  return (\n    <Container>\n      <Grid container direction='row' justify='center'>\n        <Grid item>\n          <Typography color='textSecondary'>\n            Damjiro is under MIT License. You can contribute on GitHub at{' '}\n            <Link\n              href='https://github.com/ushitora-anqou/damjiro'\n              target='_blank'\n              rel='noreferrer'\n            >\n              ushitora-anqou/damjiro\n            </Link>\n            .\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\nconst Footer = connect(null, { push })(_footer)\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function WebGLSupportAlert () {\n  const [doesSupport, setDoesSupport] = useState(false)\n  const [open, setOpen] = useState(true)\n\n  useEffect(() => {\n    try {\n      const canvas = document.createElement('canvas')\n      const webGLContext =\n        canvas.getContext('webgl') || canvas.getContext('experimental-webgl')\n      setDoesSupport(!!(window.WebGLRenderingContext && webGLContext))\n    } catch (e) {\n      setDoesSupport(false)\n    }\n  }, [])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  if (doesSupport) return <div />\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby='alert-dialog-title'\n      aria-describedby='alert-dialog-description'\n    >\n      <DialogTitle id='alert-dialog-title'>\n        WebGL is not enabled in your browser.\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id='alert-dialog-description'>\n          Damjiro uses WebGL.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color='primary' autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import ml5 from 'ml5'\n\nasync function createPitchDetector (audioContext, stream) {\n  const pitchHandler = await new Promise(resolve => {\n    const pitchHandler = ml5.pitchDetection(\n      process.env.PUBLIC_URL + '/model',\n      audioContext,\n      stream,\n      () => {\n        resolve(pitchHandler)\n      }\n    )\n  })\n\n  const getPitch = async () => {\n    const [freq, inputBuffer, currentTime] = await pitchHandler.getPitch()\n    if (!freq) return [null, inputBuffer, currentTime]\n    const m = Math.round(12 * (Math.log(freq / 440) / Math.log(2))) + 69\n    return [m, inputBuffer, currentTime]\n  }\n  const stopAudio = () => {\n    // Nothing to do!\n  }\n\n  return [getPitch, stopAudio]\n}\n\nexport { createPitchDetector }\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { createPitchDetector } from './util/PitchDetector'\n\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nasync function estimateLatency () {\n  const context = new AudioContext()\n  const NTESTS = 10\n\n  // Prepare mic\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: {\n      echoCancellation: false\n    },\n    video: false\n  })\n  const [getPitch] = await createPitchDetector(context, stream)\n\n  // Prepare speaker\n  const baseTime = context.currentTime + 2\n  for (let i = 0; i < NTESTS; i++) {\n    const osc = context.createOscillator()\n    osc.connect(context.destination)\n    osc.frequency.value = 440.0\n    osc.start(baseTime + 1 * i)\n    osc.stop(baseTime + 1 * i + 0.1)\n  }\n\n  // Take samples\n  let prevInputTime = null\n  let prevIndex = -1\n  let lats = []\n  while (context.currentTime < baseTime + NTESTS + 1) {\n    const [pitch, inputBuffer, inputTime] = await getPitch()\n    if (pitch === 69 && (!prevInputTime || prevInputTime !== inputTime)) {\n      const val = inputTime - inputBuffer.duration - baseTime\n      const index = Math.floor(val)\n      if (prevIndex !== index) {\n        const lat = val - index\n        lats.push(lat)\n        if (index === NTESTS) break\n      }\n      prevIndex = index\n      prevInputTime = inputTime\n    }\n  }\n\n  // Clean up\n  stream.getTracks().forEach(track => track.stop())\n  context.close()\n\n  // Estimate latency\n  if (lats.length === 0) throw new Error('No audio detected')\n\n  const mean = lats.reduce((a, b) => a + b) / lats.length\n  const std = Math.sqrt(\n    lats.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / lats.length\n  )\n\n  return [mean, std]\n}\n\nfunction MicLatencyEstimationDialog ({ dispatch, open, onDone, onCancel }) {\n  const [estimating, setEstimating] = useState(false)\n\n  const handleStart = async () => {\n    setEstimating(true)\n    try {\n      const [mean, std] = await estimateLatency()\n      if (std < 1) {\n        onDone(mean)\n      } else {\n        dispatch({\n          type: 'SNACK_LOAD',\n          message: \"Couldn't estimate\",\n          variant: 'error'\n        })\n      }\n    } catch (e) {\n      dispatch({\n        type: 'SNACK_LOAD',\n        message: e.message,\n        variant: 'error'\n      })\n    }\n    setEstimating(false)\n  }\n\n  const handleCancel = () => {\n    onCancel()\n  }\n\n  return (\n    <Dialog aria-labelledby='mic-latency-dialog-title' open={open}>\n      <DialogTitle id='mic-latency-dialog-title'>\n        Estimate mic's latency\n      </DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom>\n          Put your mic in front of your speaker/headphone.\n        </Typography>\n        <Typography gutterBottom>\n          Maximize the volume of your speaker. Also make sure your mic is\n          working.\n        </Typography>\n        <Typography gutterBottom>Let's start estimation!</Typography>\n      </DialogContent>\n      <DialogActions>\n        {estimating ? (\n          <CircularProgress />\n        ) : (\n          <>\n            <Button onClick={handleCancel} color='primary'>\n              Cancel\n            </Button>\n            <Button autoFocus onClick={handleStart} color='primary'>\n              Start\n            </Button>\n          </>\n        )}\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default connect()(MicLatencyEstimationDialog)\n","import React, { useRef, useState, useCallback } from 'react'\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\nimport styled from 'styled-components'\nimport YouTube from 'react-youtube'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\nimport MIDIPlayer from './MIDIPlayer'\nimport snackbarReducer from './reducers/SnackbarReducer'\nimport MessageSnackbar from './shared/MessageSnackbar'\nimport {\n  ConnectedRouter,\n  connectRouter,\n  routerMiddleware\n} from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport AboutPage from './pages/AboutPage'\nimport MakeGakufuPage from './pages/MakeGakufuPage'\nimport { Redirect, Route, Switch } from 'react-router'\nimport ErrorPage from './pages/ErrorPage'\nimport SingGakufuPage from './pages/SingGakufuPage'\nimport SingMIDIPage from './pages/SingMIDIPage'\nimport Header from './container/Header'\nimport Footer from './container/Footer'\nimport Encoding from 'encoding-japanese'\nimport WebGLSupportAlert from './WebGLSupportAlert'\nimport MicLatencyEstimationDialog from './MicLatencyEstimationDialog'\nimport { createPitchDetector } from './util/PitchDetector'\n\n// material ui\nimport {\n  Button,\n  Input,\n  TextField,\n  InputLabel,\n  InputAdornment,\n  FormControl,\n  Typography,\n  makeStyles,\n  CssBaseline,\n  Grid\n} from '@material-ui/core'\n\n// font-awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileAudio } from '@fortawesome/free-regular-svg-icons'\nlibrary.add(faFileAudio)\n\n// Thanks to: https://stackoverflow.com/questions/4059147/check-if-a-variable-is-a-string-in-javascript\nfunction isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nfunction isNumber (n) {\n  return !isNaN(n)\n}\n\nfunction sec2us (n) {\n  return n * 1000000\n}\n\nfunction isClose (a, b) {\n  return Math.abs(a - b) < 0.0001\n}\n\nfunction round (num, base) {\n  return Math.floor(num / base) * base\n}\n\nfunction range (start, stop, step) {\n  return Array.from(\n    { length: (stop - start) / step + 1 },\n    (_, i) => start + i * step\n  )\n}\n\n// c.f. C++'s std::lower_bound\n// Thanks to: https://cpprefjp.github.io/reference/algorithm/lower_bound.html\nfunction lower_bound (ary, cmp) {\n  const impl = (begin, end) => {\n    for (let len = end - begin; len !== 0; ) {\n      const half = Math.floor(len / 2)\n      const mid = begin + half\n      if (cmp(ary[mid])) {\n        len -= half + 1\n        begin = mid + 1\n      } else {\n        len = half\n      }\n    }\n    return begin\n  }\n  return impl(0, ary.length)\n}\n\nexport function midi2notes (buffer, targetTrack, targetChannel) {\n  const midi = new MIDIFile(buffer)\n  if (midi.header.getFormat() === 2)\n    throw new Error('Unsupported format of MIDI')\n  if (midi.header.getTracksCount() === 0) throw new Error('Not enough tracks')\n  if (midi.header.getTimeDivision() !== MIDIFile.Header.TICKS_PER_BEAT)\n    throw new Error('Unsupported time division')\n\n  const notes_begin = []\n  const notes_end = []\n  const events = midi.getMidiEvents()\n  for (let ev of events) {\n    if (ev.channel !== targetChannel) continue\n\n    switch (ev.subtype) {\n      case MIDIEvents.EVENT_MIDI_NOTE_ON:\n        if (notes_begin.length !== notes_end.length) break\n        notes_begin.push([ev.playTime * 1000, ev.param1])\n        break\n\n      case MIDIEvents.EVENT_MIDI_NOTE_OFF:\n        if (\n          notes_begin.length - notes_end.length !== 1 ||\n          notes_begin[notes_begin.length - 1][1] !== ev.param1\n        )\n          break\n        notes_end.push([ev.playTime * 1000, ev.param1])\n        break\n\n      default:\n        break\n    }\n  }\n  if (notes_begin.length !== notes_end.length)\n    throw new Error('Invalid # of note offs')\n\n  const notes = []\n  for (let i = 0; i < notes_begin.length; i++) {\n    const b = notes_begin[i]\n    const e = notes_end[i]\n    notes.push({\n      tpos: b[0],\n      duration: e[0] - b[0],\n      pitch: b[1],\n      lyrics: ''\n    })\n  }\n\n  if (notes.length === 0) return notes\n\n  // Extract lyrics\n  let lyrics = midi.getLyrics().map(n => ({\n    ...n,\n    text: Encoding.convert(n.text, { to: 'UNICODE' })\n  }))\n\n  // Format lyrics\n  const stateTbl = [\n    {\n      '\\\\': [1, false],\n      '^': [0, false],\n      '/': [0, false],\n      '%': [0, false],\n      '<': [0, false],\n      '>': [0, false],\n      '[': [2, false],\n      '(': [2, false]\n    },\n    {},\n    { ']': [0, false], ')': [0, false] }\n  ]\n  const stateTblDefault = [\n    [0, true],\n    [0, true],\n    [2, false]\n  ]\n  let st = 0\n  lyrics = lyrics.map(lyr => {\n    let text = ''\n    for (let ch of lyr.text) {\n      const s = stateTbl[st][ch] || stateTblDefault[st]\n      if (s[1]) text += ch\n      st = s[0]\n    }\n    return { ...lyr, text }\n  })\n\n  // Assign lyrics to note\n  for (let lyr of lyrics) {\n    const tpos = lyr.playTime * 1000\n\n    // Find nearest note\n    const idx = lower_bound(notes, n => n.tpos <= tpos)\n    const lhs = idx === 0 ? null : notes[idx - 1]\n    const rhs = idx === notes.length ? null : notes[idx]\n    let note = null\n    if (lhs && isClose(lhs.tpos, tpos)) {\n      note = lhs\n    } else if (rhs && isClose(tpos, rhs.tpos)) {\n      note = rhs\n    } else if (lhs && lhs.tpos < tpos && tpos < lhs.tpos + lhs.duration) {\n      note = lhs\n    }\n\n    if (!note) continue\n\n    note.lyrics += lyr.text\n  }\n\n  return notes\n}\n\nexport function muteMIDIChannel (midiBuf, targetTrack, targetChannel) {\n  const midi = new MIDIFile(midiBuf)\n  if (midi.header.getTracksCount() <= targetTrack)\n    throw new Error('Invalid track number')\n  const events = midi.getTrackEvents(targetTrack)\n  for (let ev of events) {\n    if (ev.channel !== targetChannel) continue\n    switch (ev.subtype) {\n      case MIDIEvents.EVENT_MIDI_NOTE_ON:\n        ev.param2 = 0 // Mute it\n        break\n      default:\n        break\n    }\n  }\n  midi.setTrackEvents(targetTrack, events)\n  return midi.getContent()\n}\n\nconst NotesSVG = styled.svg`\n  max-width: 80vw;\n  width: inherit;\n`\nexport function NotesDisplay ({ curtpos, gNotes, uNotes, seconds }) {\n  // curtpos, tpos, duration in us\n  // pitch in SMF\n\n  const SIZE_PER_SEC = 100\n  const NOTE_HEIGHT = 5\n  const FONT_SIZE = 20\n  const [NOTE_NUM_MIN, NOTE_NUM_MAX] = gNotes.reduce(\n    (minmax, n) => [\n      Math.min(minmax[0], n.pitch - 12),\n      Math.max(minmax[1], n.pitch + 12)\n    ],\n    [Number.MAX_VALUE, Number.MIN_VALUE]\n  )\n  const cw = SIZE_PER_SEC * seconds\n  const ch = (NOTE_NUM_MAX - NOTE_NUM_MIN + 1) * NOTE_HEIGHT\n  const tpos2x = tpos => (tpos * SIZE_PER_SEC) / 1000000\n  const r = {\n    from: round(tpos2x(curtpos), cw),\n    to: round(tpos2x(curtpos), cw) + cw\n  }\n  const tpos2x_view = tpos => tpos2x(tpos) - r.from\n  const pitch2y = pitch => ch - (pitch - NOTE_NUM_MIN) * NOTE_HEIGHT\n\n  const filterNotes = notes =>\n    notes.filter(\n      note =>\n        r.from < tpos2x(note.tpos + note.duration) &&\n        tpos2x(note.tpos) < r.to &&\n        NOTE_NUM_MIN <= note.pitch &&\n        note.pitch <= NOTE_NUM_MAX\n    )\n\n  const notes2bars = (notes, color, shouldConcat) =>\n    notes\n      .reduce((acc, note) => {\n        // Concat close notes at same pitch\n        if (acc.length === 0) return [note]\n        const last = acc[acc.length - 1]\n        if (\n          !shouldConcat ||\n          last.pitch !== note.pitch ||\n          !isClose(last.tpos + last.duration, note.tpos)\n        )\n          return acc.concat(note)\n        acc[acc.length - 1] = {\n          tpos: last.tpos,\n          duration: note.tpos + note.duration - last.tpos,\n          pitch: last.pitch\n        }\n        return acc\n      }, [])\n      .map(note => {\n        const width = shouldConcat\n          ? tpos2x(note.duration)\n          : tpos2x(note.duration) - 1\n        return (\n          <React.Fragment key={note.tpos}>\n            {note.lyrics && (\n              <text\n                x={tpos2x_view(note.tpos)}\n                y={FONT_SIZE}\n                fontSize={FONT_SIZE}\n              >\n                {note.lyrics}\n              </text>\n            )}\n            <rect\n              x={tpos2x_view(note.tpos)}\n              y={pitch2y(note.pitch)}\n              width={width}\n              height={NOTE_HEIGHT}\n              rx={1}\n              ry={1}\n              fill={color}\n              fillOpacity={0.7}\n            />\n          </React.Fragment>\n        )\n      })\n\n  return (\n    <>\n      <p>{curtpos}</p>\n      <NotesSVG viewBox={'0,0,' + cw + ',' + ch}>\n        {\n          // horizontal lines\n        }\n        <line x1={0} x2={cw} y1={0} y2={0} strokeWidth={5} stroke='gray' />\n        <line x1={0} x2={cw} y1={ch} y2={ch} strokeWidth={5} stroke='gray' />\n        {// vertical lines\n        range(0, cw, SIZE_PER_SEC).map(x => (\n          <line\n            key={x}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={ch}\n            strokeWidth={1}\n            stroke='gray'\n            fillOpacity={0.7}\n          />\n        ))}\n        <line\n          x1={tpos2x_view(curtpos)}\n          x2={tpos2x_view(curtpos)}\n          y1={0}\n          y2={ch}\n          strokeWidth={1}\n          stroke='red'\n        />\n        {// note bars\n        notes2bars(filterNotes(gNotes), 'gray', false)}\n        {// user's correct note bars\n        notes2bars(filterNotes(uNotes.filter(n => n.correct)), '#FFA500', true)}\n        {// user's wrong note bars\n        notes2bars(filterNotes(uNotes.filter(n => !n.correct)), 'red', true)}\n      </NotesSVG>\n    </>\n  )\n}\n\nexport function InputDamjiroGakufu ({ dispatch }) {\n  const [gakufuText, setGakufuText] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  return (\n    <FormControl fullWidth>\n      <TextField\n        value={gakufuText}\n        label='Enter Damjiro Gakuhu.'\n        helperText={errorMsg}\n        error={errorMsg}\n        multiline={true}\n        rows={3}\n        InputLabelProps={{\n          shrink: true\n        }}\n        variant={'outlined'}\n        onChange={e => {\n          dispatch({ type: 'RESET_USER_NOTES' })\n          setGakufuText(e.target.value)\n\n          if (e.target.value === '') {\n            setErrorMsg(null)\n            return\n          }\n\n          try {\n            const json = JSON.parse(e.target.value)\n            const notes = json.notes.map(n => ({\n              tpos: n[0],\n              duration: n[1],\n              pitch: n[2]\n            }))\n            const videoId = json.youtubeVideoId\n            if (!isString(videoId)) {\n              dispatch({\n                type: 'SNACK_LOAD',\n                message: 'invalid JSON',\n                variant: 'error'\n              })\n            } else {\n              dispatch({ type: 'SET_GAKUFU', gakufu: { notes, videoId } })\n              setErrorMsg(null)\n            }\n          } catch (e) {\n            dispatch({ type: 'RESET_GAKUFU' })\n            setErrorMsg(e.message)\n            dispatch({\n              type: 'SNACK_LOAD',\n              message: e.message,\n              variant: 'error'\n            })\n          }\n        }}\n      />\n    </FormControl>\n  )\n}\nInputDamjiroGakufu = connect()(InputDamjiroGakufu)\n\nexport function TimeOffsetForm ({ timeOffset, dispatch }) {\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  return (\n    <>\n      <FormControl fullWidth>\n        <InputLabel>Offset</InputLabel>\n        <Input\n          type='number'\n          value={Math.floor(timeOffset / 1000)}\n          onChange={e =>\n            dispatch({\n              type: 'SET_USER_TIME_OFFSET',\n              value: Number(e.target.value) * 1000\n            })\n          }\n          required\n          endAdornment={<InputAdornment position='end'>ms</InputAdornment>}\n        />\n        <Button variant='contained' onClick={() => setDialogOpen(true)}>\n          Estimate offset\n        </Button>\n      </FormControl>\n      <MicLatencyEstimationDialog\n        open={dialogOpen}\n        onDone={offset => {\n          dispatch({\n            type: 'SET_USER_TIME_OFFSET',\n            value: sec2us(offset)\n          })\n          setDialogOpen(false)\n        }}\n        onCancel={() => setDialogOpen(false)}\n      />\n    </>\n  )\n}\nTimeOffsetForm = connect(({ user: { timeOffset } }) => ({ timeOffset }))(\n  TimeOffsetForm\n)\n\nexport function PitchOffsetForm ({ pitchOffset, dispatch }) {\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Pitch Offset</InputLabel>\n      <Input\n        type='number'\n        value={Math.floor(pitchOffset)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_PITCH_OFFSET',\n            value: Number(e.target.value)\n          })\n        }\n        required\n        endAdornment={<InputAdornment position='end'>note#</InputAdornment>}\n      />\n    </FormControl>\n  )\n}\nPitchOffsetForm = connect(({ user: { pitchOffset } }) => ({ pitchOffset }))(\n  PitchOffsetForm\n)\n\nexport function NotesScroller ({\n  dispatch,\n  gakufu,\n  user: { notes: uNotes, timeOffset, pitchOffset }\n}) {\n  const marginClasses = useMarginStyles()\n  const micStream = useRef(null)\n  const playing = useRef(false)\n  const curTimeOffset = useRef(timeOffset)\n  const curPitchOffset = useRef(pitchOffset)\n  const [curtpos, setCurtpos] = useState(0)\n  const video = useRef(null)\n  const onPlay = useCallback(async () => {\n    if (playing.current) return\n    playing.current = true\n\n    // Clear user's previous notes\n    dispatch({ type: 'RESET_USER_NOTES' })\n\n    // Set timer to scroll notes\n    const timerAdjust = setInterval(\n      () => setCurtpos(video.current.getCurrentTime() * 1000 * 1000),\n      25\n    )\n\n    // Create pitch detector\n    if (!micStream.current) {\n      micStream.current = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false\n      })\n    }\n    const audioContext = new AudioContext()\n    const [getPitch, stopAudio] = await createPitchDetector(\n      audioContext,\n      micStream.current\n    )\n\n    // Loop to get pitches from mic\n    const getBiasedVideoTime = () =>\n      sec2us(video.current.getCurrentTime()) - curTimeOffset.current\n    let prev = null\n    while (playing.current) {\n      let [pitch, inputBuffer, inputTime] = await getPitch()\n      if (pitch && prev !== inputTime && pitch >= 36 && pitch <= 88) {\n        const videoCurrentTime = getBiasedVideoTime()\n        const micCurrentTime = sec2us(audioContext.currentTime)\n        const duration = sec2us(inputBuffer.duration)\n        const tpos =\n          videoCurrentTime - (micCurrentTime - sec2us(inputTime) + duration)\n        let biasedPitch = pitch\n        let correct = false\n\n        const lbIdx = lower_bound(gakufu.notes, n => n.tpos < tpos) - 1\n        const lb = lbIdx >= 0 ? gakufu.notes[lbIdx] : gakufu.notes[0]\n        if (lb) {\n          biasedPitch = lb.pitch + curPitchOffset.current\n          let gap =\n            pitch - biasedPitch - Math.floor((pitch - biasedPitch) / 12) * 12\n          if (gap > 6) gap -= 12\n          biasedPitch += gap\n          if (lb.tpos < tpos && tpos < lb.tpos + lb.duration && gap === 0)\n            correct = true\n        }\n\n        const note = {\n          tpos,\n          duration,\n          pitch: biasedPitch,\n          correct\n        }\n        dispatch({ type: 'APPEND_USER_NOTE', note })\n      }\n      inputBuffer = null\n      prev = inputTime\n    }\n\n    stopAudio()\n    audioContext.close()\n\n    // Stop timer\n    clearInterval(timerAdjust)\n  }, [gakufu.notes, dispatch])\n  const onEnd = useCallback(async () => {\n    playing.current = false\n    micStream.current.getTracks().forEach(track => track.stop())\n    micStream.current = null\n  }, [playing, micStream])\n\n  curTimeOffset.current = timeOffset\n  curPitchOffset.current = pitchOffset\n\n  return (\n    <>\n      {gakufu.videoId && (\n        <YouTube\n          videoId={gakufu.videoId}\n          onReady={e => (video.current = e.target)}\n          onPlay={onPlay}\n          onPause={() => (playing.current = false)}\n          onEnd={onEnd}\n        />\n      )}\n\n      {gakufu.notes && (\n        <Grid container direction='row' wrap='nowrap' alignItems='flex-end'>\n          <Grid item className={marginClasses.mr2} style={{ flexGrow: 1 }}>\n            <NotesDisplay\n              curtpos={curtpos}\n              gNotes={gakufu.notes}\n              uNotes={uNotes}\n              seconds={10}\n            />\n          </Grid>\n          <Grid\n            item\n            className={marginClasses.mr2 + ' ' + marginClasses.mt1}\n            style={{ maxWidth: '140px' }}\n            container\n            direction='column'\n            spacing={2}\n          >\n            <Grid item>\n              {gakufu.midiBuf && (\n                <MIDIPlayer\n                  buffer={gakufu.midiBuf}\n                  onReady={e => {\n                    dispatch({ type: 'RESET_USER_NOTES' })\n                    video.current = e.target\n                    setCurtpos(0)\n                  }}\n                  onPlay={onPlay}\n                  onEnd={onEnd}\n                />\n              )}\n            </Grid>\n            <Grid item>\n              <ScoreDisplay />\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\nNotesScroller = connect(({ gakufu, user }) => ({\n  gakufu,\n  user\n}))(NotesScroller)\n\nfunction ScoreDisplay ({ gNotes, uNotes }) {\n  if (!gNotes || !uNotes) return <div />\n\n  const percPitchCorrect =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      const secretNonLinearFunc = x => x / (1 + Math.abs(x))\n      return acc + uNote.duration * (1 - secretNonLinearFunc(loss))\n    }, 0) / gNotes.reduce((sum, gNote) => sum + gNote.duration, 0)\n  const percPitchAccuracy =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      return uNote.pitch === gNote.pitch ? acc + uNote.duration : acc\n    }, 0) / uNotes.reduce((sum, uNote) => sum + uNote.duration, 0)\n  const geta = 0\n  const scale = 1.2\n  const score = (percPitchCorrect * 100 + geta) * scale\n\n  const accuracy = isNaN(percPitchAccuracy) ? 0 : percPitchAccuracy * 100\n\n  return (\n    <Grid container direction='column' spacing={1}>\n      <Grid item>\n        <Typography variant='h6'>\n          Score: {Math.round(score * 100) / 100}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant='h6'>\n          Accuracy: {Math.round(accuracy * 100) / 100}\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\nScoreDisplay = connect(\n  ({ gakufu: { notes: gNotes }, user: { notes: uNotes } }) => ({\n    gNotes,\n    uNotes\n  })\n)(ScoreDisplay)\n\nfunction gakufuReducer (\n  state = { notes: null, videoId: null, midiBuf: null },\n  action\n) {\n  switch (action.type) {\n    case 'SET_GAKUFU':\n      return action.gakufu\n\n    case 'RESET_GAKUFU':\n      return { notes: null, videoId: null }\n\n    default:\n      return state\n  }\n}\n\nfunction userReducer (\n  state = {\n    notes: [],\n    timeOffset: 300000,\n    pitchOffset: 0\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SET_USER_TIME_OFFSET':\n      return {\n        ...state,\n        timeOffset: action.value\n      }\n\n    case 'SET_USER_PITCH_OFFSET':\n      return {\n        ...state,\n        pitchOffset: action.value\n      }\n\n    case 'RESET_USER_NOTES':\n      return {\n        ...state,\n        notes: []\n      }\n\n    case 'APPEND_USER_NOTE':\n      return {\n        ...state,\n        notes: state.notes.concat(action.note)\n      }\n\n    default:\n      return state\n  }\n}\n\nconst history = createBrowserHistory({\n  basename: '/damjiro/'\n})\n\nconst rootReducer = combineReducers({\n  gakufu: gakufuReducer,\n  user: persistReducer(\n    {\n      key: 'user',\n      storage,\n      whitelist: ['pitchOffset']\n    },\n    userReducer\n  ),\n  snack: snackbarReducer,\n  router: connectRouter(history)\n})\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n  },\n  rootReducer\n)\n\nconst store = createStore(\n  persistedReducer,\n  compose(applyMiddleware(routerMiddleware(history)))\n)\nconst persistor = persistStore(store)\n\nexport const useCardStyles = makeStyles(theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  wrapIcon: {\n    verticalAlign: 'middle',\n    display: 'inline-flex',\n    marginRight: theme.spacing(1)\n  },\n  wrapAwesomeIcon: {\n    verticalAlign: 'middle',\n    display: 'inline-flex',\n    marginRight: theme.spacing(1),\n    fontSize: '24px'\n  }\n}))\n\nexport const useMarginStyles = makeStyles(theme => ({\n  mt1: {\n    marginTop: theme.spacing(1)\n  },\n  mt2: {\n    marginTop: theme.spacing(2)\n  },\n  mt3: {\n    marginTop: theme.spacing(3)\n  },\n  mb1: {\n    marginBottom: theme.spacing(1)\n  },\n  mb2: {\n    marginBottom: theme.spacing(2)\n  },\n  m1: {\n    margin: theme.spacing(1)\n  },\n  m3: {\n    margin: theme.spacing(3)\n  },\n  ml1: {\n    marginLeft: theme.spacing(1)\n  },\n  collapse: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  mr2: {\n    marginRight: theme.spacing(2)\n  },\n  mauto: {\n    margin: 'auto'\n  }\n}))\n\nfunction App () {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <CssBaseline />\n        <Header />\n        <WebGLSupportAlert />\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route exact path='/' component={AboutPage} />\n            <Route exact path='/gakufu/make' component={MakeGakufuPage} />\n            <Route exact path='/gakufu/sing' component={SingGakufuPage} />\n            <Route exact path='/midi/sing' component={SingMIDIPage} />\n            <Route exact path='/error' component={ErrorPage} />\n            <Route render={() => <Redirect to='/error?status=404' />} />\n          </Switch>\n        </ConnectedRouter>\n        <Footer />\n        <MessageSnackbar />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","export default function snackbarReducer (\n  state = {\n    loadSnack: false,\n    message: '',\n    variant: ''\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SNACK_LOAD':\n      console.log('loaded', action)\n      return {\n        ...state,\n        openSnack: true,\n        message: action.message,\n        variant: action.variant\n      }\n\n    case 'SNACK_UNLOAD':\n      console.log('unloaded', action)\n      return {\n        ...state,\n        openSnack: false\n      }\n\n    default:\n      return state\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}