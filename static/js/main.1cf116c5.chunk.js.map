{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["round","num","base","Math","floor","lower_bound","ary","cmp","begin","end","len","half","mid","impl","length","gakufu2json","gNotes","youtubeVideoId","timeOffset","gakufu","notes","map","n","tpos","duration","pitch","JSON","stringify","createPitchDetector","a","audioContext","AudioContext","navigator","mediaDevices","getUserMedia","audio","video","stream","Promise","resolve","pitchHandler","ml5","pitchDetection","getPitch","reject","err","freq","m","log","stopAudio","getTracks","forEach","track","stop","close","NotesSVG","styled","svg","NotesDisplay","start","step","curtpos","uNotes","seconds","cw","tpos2x","r","tpos2x_view","notes2bars","color","filter","note","reduce","acc","b","last","abs","concat","Fragment","key","x","y","width","height","rx","ry","fill","fillOpacity","viewBox","preserveAspectRatio","x1","x2","y1","y2","strokeWidth","stroke","Array","from","_","i","correct","InputDamjiroGakufu","dispatch","useState","gakufuText","setGakufuText","errorMsg","setErrorMsg","value","onChange","e","target","json","parse","videoId","s","String","isNaN","Error","type","message","TimeOffsetForm","Number","required","PitchOffsetForm","pitchOffset","NotesScroller","user","playing","useRef","curTimeOffset","curPitchOffset","setCurtpos","onPlay","useCallback","current","timerAdjust","setInterval","getCurrentTime","prev","getBiasedVideoTime","now","biasedPitch","lbIdx","lb","gap","clearInterval","onReady","onPause","onEnd","ScoreDisplay","score","uNote","gNote","loss","sum","MIDIEditor","fileBody","setFileBody","trackNo","setTrackNo","channelNo","setChannelNo","introTime","setIntroTime","setPitchOffset","setYoutubeVideoId","setVideo","gNotesOriginal","epoch","makeNotesSensible","buffer","targetTrack","targetChannel","midi","MIDIFile","header","getFormat","getTracksCount","getTimeDivision","Header","TICKS_PER_BEAT","metrical","getTicksPerBeat","tempo","notes_begin","notes_end","events","getTrackEvents","elapsed_time","ev","delta","subtype","MIDIEvents","EVENT_META_SET_TEMPO","EVENT_MIDI_NOTE_ON","channel","push","param1","EVENT_MIDI_NOTE_OFF","midi2notes","useEffect","estimatedIntroTime","seekTo","accept","file","files","reader","FileReader","onload","result","readAsArrayBuffer","console","readOnly","playVideo","pauseVideo","connect","rootReducer","combineReducers","state","action","persistReducer","storage","whitelist","persistedReducer","store","createStore","persistor","persistStore","App","loading","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1cf116c5.chunk.js","sourcesContent":["import React, { useRef, useState, useCallback, useEffect } from 'react'\nimport { combineReducers, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\nimport styled from 'styled-components'\nimport YouTube from 'react-youtube'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport ml5 from 'ml5'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\n\n// Thanks to: https://stackoverflow.com/questions/4059147/check-if-a-variable-is-a-string-in-javascript\nfunction isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nfunction isNumber (n) {\n  return !isNaN(n)\n}\n\nfunction sec2us (n) {\n  return n * 1000000\n}\n\nfunction isClose (a, b) {\n  return Math.abs(a - b) < 0.0001\n}\n\nfunction round (num, base) {\n  return Math.floor(num / base) * base\n}\n\nfunction range (start, stop, step) {\n  return Array.from(\n    { length: (stop - start) / step + 1 },\n    (_, i) => start + i * step\n  )\n}\n\n// c.f. C++'s std::lower_bound\n// Thanks to: https://cpprefjp.github.io/reference/algorithm/lower_bound.html\nfunction lower_bound (ary, cmp) {\n  const impl = (begin, end) => {\n    for (let len = end - begin; len !== 0; ) {\n      const half = Math.floor(len / 2)\n      const mid = begin + half\n      if (cmp(ary[mid])) {\n        len -= half + 1\n        begin = mid + 1\n      } else {\n        len = half\n      }\n    }\n    return begin\n  }\n  return impl(0, ary.length)\n}\n\nfunction midi2notes (buffer, targetTrack, targetChannel) {\n  const midi = new MIDIFile(buffer)\n  if (midi.header.getFormat() === 2)\n    throw new Error('Unsupported format of MIDI')\n  if (midi.header.getTracksCount() === 0) throw new Error('Not enough tracks')\n  if (midi.header.getTimeDivision() !== MIDIFile.Header.TICKS_PER_BEAT)\n    throw new Error('Unsupported time division')\n\n  const metrical = midi.header.getTicksPerBeat()\n\n  let tempo = null\n  const notes_begin = []\n  const notes_end = []\n  const events = midi.getTrackEvents(targetTrack)\n  let elapsed_time = 0\n  for (let ev of events) {\n    elapsed_time += ev.delta\n\n    switch (ev.subtype) {\n      case MIDIEvents.EVENT_META_SET_TEMPO:\n        tempo = ev.tempo\n        break\n\n      case MIDIEvents.EVENT_MIDI_NOTE_ON:\n        if (ev.channel !== targetChannel) break\n        notes_begin.push([elapsed_time, ev.param1])\n        break\n\n      case MIDIEvents.EVENT_MIDI_NOTE_OFF:\n        if (ev.channel !== targetChannel) break\n        if (\n          notes_begin.length === 0 ||\n          notes_begin[notes_begin.length - 1][1] !== ev.param1\n        )\n          throw new Error('Invalid note off')\n        notes_end.push([elapsed_time, ev.param1])\n        break\n\n      default:\n        break\n    }\n  }\n  if (!tempo) throw new Error('Tempo Not found')\n  if (notes_begin.length !== notes_end.length)\n    throw new Error('Invalid # of note offs')\n\n  const notes = []\n  for (let i = 0; i < notes_begin.length; i++) {\n    const b = notes_begin[i]\n    const e = notes_end[i]\n    notes.push({\n      tpos: (b[0] * tempo) / metrical,\n      duration: ((e[0] - b[0]) * tempo) / metrical,\n      pitch: b[1]\n    })\n  }\n\n  return notes\n}\n\nfunction makeNotesSensible (notes, introTime, pitchOffset) {\n  if (notes.length === 0) return notes\n\n  const epoch = notes[0].tpos\n  return notes.map(n => ({\n    tpos: n.tpos - epoch + introTime,\n    duration: n.duration,\n    pitch: n.pitch + pitchOffset\n  }))\n}\n\nfunction gakufu2json (gNotes, youtubeVideoId, timeOffset) {\n  const gakufu = {\n    notes: gNotes.map(n => [\n      Math.round(n.tpos),\n      Math.round(n.duration),\n      Math.round(n.pitch)\n    ]),\n    youtubeVideoId,\n    timeOffset\n  }\n  return JSON.stringify(gakufu)\n}\n\nasync function createPitchDetector () {\n  const audioContext = new AudioContext()\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: false\n  })\n\n  const pitchHandler = await new Promise(resolve => {\n    const pitchHandler = ml5.pitchDetection(\n      './model',\n      audioContext,\n      stream,\n      () => {\n        resolve(pitchHandler)\n      }\n    )\n  })\n\n  const getPitch = () =>\n    new Promise((resolve, reject) =>\n      pitchHandler.getPitch((err, freq) => {\n        if (err) reject(err)\n        if (!freq) resolve(null)\n        const m = Math.round(12 * (Math.log(freq / 440) / Math.log(2))) + 69\n        resolve(m)\n      })\n    )\n  const stopAudio = () => {\n    stream.getTracks().forEach(track => track.stop())\n    audioContext.close()\n  }\n\n  return [getPitch, stopAudio]\n}\n\nconst NotesSVG = styled.svg`\n  width: 80vw;\n  height: 80vh;\n`\nfunction NotesDisplay ({ curtpos, gNotes, uNotes, seconds }) {\n  // curtpos, tpos, duration in us\n  // pitch in SMF\n\n  const SIZE_PER_SEC = 100\n  const cw = SIZE_PER_SEC * seconds\n  const ch = 500\n  const tpos2x = tpos => (tpos * SIZE_PER_SEC) / 1000000\n  const r = {\n    from: round(tpos2x(curtpos), cw),\n    to: round(tpos2x(curtpos), cw) + cw\n  }\n  const tpos2x_view = tpos => tpos2x(tpos) - r.from\n\n  const notes2bars = (notes, color) =>\n    notes\n      .filter(\n        note =>\n          r.from < tpos2x(note.tpos + note.duration) && tpos2x(note.tpos) < r.to\n      )\n      .reduce((acc, note) => {\n        // Concat close notes at same pitch\n        if (acc.length === 0) return [note]\n        const last = acc[acc.length - 1]\n        if (\n          last.pitch !== note.pitch ||\n          !isClose(last.tpos + last.duration, note.tpos)\n        )\n          return acc.concat(note)\n        acc[acc.length - 1] = {\n          tpos: last.tpos,\n          duration: note.tpos + note.duration - last.tpos,\n          pitch: last.pitch\n        }\n        return acc\n      }, [])\n      .map(note => (\n        <React.Fragment key={note.tpos}>\n          <rect\n            x={tpos2x_view(note.tpos)}\n            y={500 - note.pitch * 5}\n            width={tpos2x(note.duration)}\n            height={5}\n            rx={1}\n            ry={1}\n            fill={color}\n            fillOpacity={0.7}\n          />\n        </React.Fragment>\n      ))\n\n  return (\n    <>\n      <p>{curtpos}</p>\n      <NotesSVG viewBox={'0,0,' + cw + ',' + ch} preserveAspectRatio='none'>\n        {\n          // horizontal lines\n        }\n        <line x1={0} x2={cw} y1={0} y2={0} strokeWidth={5} stroke='gray' />\n        <line x1={0} x2={cw} y1={ch} y2={ch} strokeWidth={5} stroke='gray' />\n        {// vertical lines\n        range(0, cw, SIZE_PER_SEC).map(x => (\n          <line\n            key={x}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={ch}\n            strokeWidth={1}\n            stroke='gray'\n            fillOpacity={0.7}\n          />\n        ))}\n        <line\n          x1={tpos2x_view(curtpos)}\n          x2={tpos2x_view(curtpos)}\n          y1={0}\n          y2={ch}\n          strokeWidth={1}\n          stroke='red'\n        />\n        {// note bars\n        notes2bars(gNotes, 'gray')}\n        {// user's correct note bars\n        notes2bars(\n          uNotes.filter(n => n.correct),\n          '#FFA500'\n        )}\n        {// user's wrong note bars\n        notes2bars(\n          uNotes.filter(n => !n.correct),\n          'red'\n        )}\n      </NotesSVG>\n    </>\n  )\n}\n\nfunction InputDamjiroGakufu ({ dispatch }) {\n  const [gakufuText, setGakufuText] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  return (\n    <div>\n      <textarea\n        value={gakufuText}\n        onChange={e => {\n          setGakufuText(e.target.value)\n          try {\n            const json = JSON.parse(e.target.value)\n            const notes = json.notes.map(n => ({\n              tpos: n[0],\n              duration: n[1],\n              pitch: n[2]\n            }))\n            const videoId = json.youtubeVideoId\n            const timeOffset = json.timeOffset\n            if (!isString(videoId) || !isNumber(timeOffset))\n              throw new Error('Invalid JSON')\n            dispatch({ type: 'SET_GAKUFU', gakufu: { notes, videoId } })\n            dispatch({ type: 'SET_USER_TIME_OFFSET', value: timeOffset })\n            setErrorMsg(null)\n          } catch (e) {\n            dispatch({ type: 'RESET_GAKUFU' })\n            setErrorMsg(e.message)\n          }\n          dispatch({ type: 'RESET_USER_NOTES' })\n        }}\n      />\n      {errorMsg}\n    </div>\n  )\n}\nInputDamjiroGakufu = connect()(InputDamjiroGakufu)\n\nfunction TimeOffsetForm ({ timeOffset, dispatch }) {\n  return (\n    <div>\n      <input\n        type='number'\n        value={Math.floor(timeOffset / 1000)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_TIME_OFFSET',\n            value: Number(e.target.value) * 1000\n          })\n        }\n        required\n      />\n      ms\n    </div>\n  )\n}\nTimeOffsetForm = connect(({ user: { timeOffset } }) => ({ timeOffset }))(\n  TimeOffsetForm\n)\n\nfunction PitchOffsetForm ({ pitchOffset, dispatch }) {\n  return (\n    <div>\n      <input\n        type='number'\n        value={Math.floor(pitchOffset)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_PITCH_OFFSET',\n            value: Number(e.target.value)\n          })\n        }\n        required\n      />\n      note#\n    </div>\n  )\n}\nPitchOffsetForm = connect(({ user: { pitchOffset } }) => ({ pitchOffset }))(\n  PitchOffsetForm\n)\n\nfunction NotesScroller ({\n  dispatch,\n  gakufu,\n  user: { notes: uNotes, timeOffset, pitchOffset }\n}) {\n  const playing = useRef(false)\n  const curTimeOffset = useRef(timeOffset)\n  const curPitchOffset = useRef(pitchOffset)\n  const [curtpos, setCurtpos] = useState(0)\n  const video = useRef(null)\n  const onPlay = useCallback(async () => {\n    if (playing.current) return\n    playing.current = true\n\n    // Set timer to scroll notes\n    const timerAdjust = setInterval(\n      () => setCurtpos(video.current.getCurrentTime() * 1000 * 1000),\n      25\n    )\n\n    // Create pitch detector\n    const [getPitch, stopAudio] = await createPitchDetector()\n\n    // Clear user's previous notes\n    dispatch({ type: 'RESET_USER_NOTES' })\n\n    // Loop to get pitches from mic\n    const getBiasedVideoTime = () =>\n      sec2us(video.current.getCurrentTime()) - curTimeOffset.current\n    let prev = getBiasedVideoTime()\n    while (playing.current) {\n      const pitch = await getPitch()\n      const now = getBiasedVideoTime()\n      if (pitch) {\n        const duration = now - prev\n        let biasedPitch = pitch\n        let correct = false\n\n        const lbIdx = lower_bound(gakufu.notes, n => n.tpos < prev) - 1\n        const lb = lbIdx >= 0 ? gakufu.notes[lbIdx] : gakufu.notes[0]\n        if (lb) {\n          biasedPitch = lb.pitch + curPitchOffset.current\n          let gap =\n            pitch - biasedPitch - Math.floor((pitch - biasedPitch) / 12) * 12\n          if (gap > 6) gap -= 12\n          biasedPitch += gap\n          if (lb.tpos < prev && prev < lb.tpos + lb.duration && gap == 0)\n            correct = true\n        }\n\n        const note = {\n          tpos: prev,\n          duration,\n          pitch: biasedPitch,\n          correct\n        }\n        dispatch({ type: 'APPEND_USER_NOTE', note })\n      }\n      prev = now\n    }\n    stopAudio()\n\n    // Stop timer\n    clearInterval(timerAdjust)\n  }, [gakufu.notes, dispatch])\n\n  curTimeOffset.current = timeOffset\n  curPitchOffset.current = pitchOffset\n\n  if (!gakufu.notes) return <div />\n\n  return (\n    <>\n      <YouTube\n        videoId={gakufu.videoId}\n        onReady={e => (video.current = e.target)}\n        onPlay={onPlay}\n        onPause={() => (playing.current = false)}\n        onEnd={() => (playing.current = false)}\n      />\n\n      {gakufu.notes && (\n        <NotesDisplay\n          curtpos={curtpos}\n          gNotes={gakufu.notes}\n          uNotes={uNotes}\n          seconds={30}\n        />\n      )}\n    </>\n  )\n}\nNotesScroller = connect(({ gakufu, user }) => ({\n  gakufu,\n  user\n}))(NotesScroller)\n\nfunction ScoreDisplay ({ gNotes, uNotes }) {\n  if (!gNotes || !uNotes) return <div />\n\n  const percPitchCorrect =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      const secretNonLinearFunc = x => x / (1 + Math.abs(x))\n      return acc + uNote.duration * (1 - secretNonLinearFunc(loss))\n    }, 0) / gNotes.reduce((sum, gNote) => sum + gNote.duration, 0)\n  const geta = 0\n  const scale = 1.2\n  const score = (percPitchCorrect * 100 + geta) * scale\n\n  return <div>Score: {Math.round(score * 100) / 100}</div>\n}\nScoreDisplay = connect(\n  ({ gakufu: { notes: gNotes }, user: { notes: uNotes } }) => ({\n    gNotes,\n    uNotes\n  })\n)(ScoreDisplay)\n\nfunction MIDIEditor () {\n  const [fileBody, setFileBody] = useState(null)\n  const [trackNo, setTrackNo] = useState(0)\n  const [channelNo, setChannelNo] = useState(0)\n  const [introTime, setIntroTime] = useState(0)\n  const [pitchOffset, setPitchOffset] = useState(0)\n  const [youtubeVideoId, setYoutubeVideoId] = useState(null)\n  const [video, setVideo] = useState(null)\n  const errorMsg = useRef(null)\n\n  let gNotesOriginal = []\n  let gNotes = []\n  if (fileBody) {\n    try {\n      gNotesOriginal = midi2notes(fileBody, trackNo, channelNo)\n      gNotes = makeNotesSensible(\n        gNotesOriginal,\n        introTime * 1000000,\n        pitchOffset\n      )\n      errorMsg.current = null\n    } catch (e) {\n      errorMsg.current = e.message\n    }\n  }\n\n  useEffect(() => {\n    if (gNotesOriginal.length === 0) return\n    const estimatedIntroTime = gNotesOriginal[0].tpos / 1000000\n    setIntroTime(estimatedIntroTime)\n  }, [fileBody, trackNo, channelNo])\n\n  useEffect(() => {\n    if (!video) return\n    video.seekTo(introTime, true)\n  }, [video, introTime])\n\n  return (\n    <div>\n      <div>\n        <input\n          type='file'\n          accept='audio/midi, audio/x-midi'\n          onChange={e => {\n            // Reset\n            setFileBody(null)\n            setTrackNo(0)\n            setChannelNo(0)\n            setIntroTime(0)\n            setPitchOffset(0)\n            setYoutubeVideoId(null)\n            setVideo(null)\n            errorMsg.current = null\n\n            // Read the file\n            try {\n              const file = e.target.files[0]\n              if (file.type !== 'audio/midi' && file.type !== 'audio/x-midi')\n                throw 'invalid mime type'\n              const reader = new FileReader()\n              reader.onload = e => setFileBody(e.target.result)\n              reader.readAsArrayBuffer(file)\n            } catch (e) {\n              console.log(e)\n            }\n          }}\n        />\n      </div>\n      <div>\n        <label>\n          Track No.:\n          <input\n            type='number'\n            onChange={e => setTrackNo(Number(e.target.value))}\n            value={trackNo}\n          />\n        </label>\n        <label>\n          Channel No.:\n          <input\n            type='number'\n            onChange={e => setChannelNo(Number(e.target.value))}\n            value={channelNo}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          YouTube video id:\n          <input\n            type='text'\n            onChange={e => setYoutubeVideoId(e.target.value)}\n            value={youtubeVideoId || ''}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          intro time (sec):\n          <input\n            type='number'\n            step='any'\n            onChange={e => setIntroTime(Number(e.target.value))}\n            value={introTime}\n          />\n        </label>\n        <label>\n          pitch offset (SMF note #):\n          <input\n            type='number'\n            onChange={e => setPitchOffset(Number(e.target.value))}\n            value={pitchOffset}\n          />\n        </label>\n      </div>\n      <div>\n        <textarea\n          value={\n            fileBody && youtubeVideoId\n              ? gakufu2json(gNotes, youtubeVideoId, 300 * 1000)\n              : ''\n          }\n          readOnly\n        />\n      </div>\n      <p>{errorMsg.current}</p>\n      {fileBody && youtubeVideoId ? (\n        <YouTube\n          videoId={youtubeVideoId}\n          onReady={e => {\n            const video = e.target\n            setVideo(video)\n            video.playVideo()\n            video.pauseVideo()\n          }}\n        />\n      ) : (\n        <div />\n      )}\n      <NotesDisplay curtpos={0} gNotes={gNotes} uNotes={[]} seconds={60} />\n    </div>\n  )\n}\n\nfunction gakufuReducer (state = { notes: null, videoId: null }, action) {\n  switch (action.type) {\n    case 'SET_GAKUFU':\n      return action.gakufu\n\n    case 'RESET_GAKUFU':\n      return { notes: null, videoId: null }\n\n    default:\n      return state\n  }\n}\n\nfunction userReducer (\n  state = {\n    notes: [],\n    timeOffset: 300000,\n    pitchOffset: 0\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SET_USER_TIME_OFFSET':\n      return {\n        ...state,\n        timeOffset: action.value\n      }\n\n    case 'SET_USER_PITCH_OFFSET':\n      return {\n        ...state,\n        pitchOffset: action.value\n      }\n\n    case 'RESET_USER_NOTES':\n      return {\n        ...state,\n        notes: []\n      }\n\n    case 'APPEND_USER_NOTE':\n      return {\n        ...state,\n        notes: state.notes.concat(action.note)\n      }\n\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  gakufu: gakufuReducer,\n  user: persistReducer(\n    {\n      key: 'user',\n      storage,\n      whitelist: ['pitchOffset']\n    },\n    userReducer\n  )\n})\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n  },\n  rootReducer\n)\nconst store = createStore(persistedReducer)\nconst persistor = persistStore(store)\n\nfunction App () {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <InputDamjiroGakufu />\n        <TimeOffsetForm />\n        <PitchOffsetForm />\n        <ScoreDisplay />\n        <NotesScroller />\n        <hr />\n        <MIDIEditor />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}