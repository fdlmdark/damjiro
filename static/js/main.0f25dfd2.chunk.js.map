{"version":3,"sources":["MIDIPlayer.js","shared/MessageSnackbar.js","pages/AboutPage.js","util/MIDILoader.js","MIDIEditor.js","pages/MakeGakufuPage.js","pages/ErrorPage.js","pages/SingGakufuPage.js","MIDIFilePicker.js","pages/SingMIDIPage.js","container/Header.js","App.js","reducers/SnackbarReducer.js","serviceWorker.js","index.js"],"names":["getFirstEffectiveMIDIEvent","midiBuf","ons","MIDIFile","getMidiEvents","filter","ev","subtype","MIDIEvents","EVENT_MIDI_NOTE_ON","length","Error","PCMPlayer","audioContext","pcm","_audioContext","_pcm","_playing","_currentTime","_offset","_epoch","_onAudioProcess","bind","this","_node","createScriptProcessor","numChannels","connect","destination","addEventListener","emit","disconnect","removeEventListener","e","bufsize","ch","out","outputBuffer","getChannelData","i","si","s","data","currentTime","stop","EventEmitter","MIDIPlayer","buffer","onReady","onPlay","onEnd","useState","setAudioContext","pcmPlayer","setPCMPlayer","isPlaying","setIsPlaying","refOnReady","useRef","refOnPlay","refOnEnd","classes","useCardStyles","useEffect","AudioContext","close","a","synth","JSLibTimidity","process","sampleRate","isReady","Promise","r","setTimeout","midi2wav","Uint8Array","pcmWoRest","restLength","playTime","Int16Array","set","player","current","target","on","oldPlayer","f","Button","size","variant","onClick","play","PlayArrow","className","wrapIcon","Typography","component","variantIcon","success","CheckCircle","warning","Warning","error","info","Info","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MessageSnackbar","snack","openSnack","dispatch","customTag","handleClose","type","Object","keys","includes","Icon","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","Close","useListStyles","nested","paddingLeft","root","background","paper","AboutPage","push","listClasses","Container","List","ListItem","ListItemIcon","Audiotrack","ListItemText","button","MusicVideo","NavigateNext","wrapAwesomeIcon","Divider","Edit","MIDILoader","file","onLoad","reader","FileReader","onload","result","readAsArrayBuffer","toString","gakufu2json","gNotes","youtubeVideoId","timeOffset","gakufu","notes","map","n","Math","round","tpos","duration","pitch","JSON","stringify","ColorlibConnector","withStyles","alternativeLabel","top","active","backgroundImage","completed","line","height","border","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","width","justifyContent","boxShadow","font","ColoredStepIcon","props","icons","1","2","Movie","3","GetApp","String","videoFrame","MIDIEditor","activeStep","setActiveStep","steps","fileBody","setFileBody","trackNo","setTrackNo","channelNo","setChannelNo","introTime","setIntroTime","pitchOffset","setPitchOffset","setYoutubeVideoId","video","setVideo","errorMsg","gNotesOriginal","midi2notes","epoch","makeNotesSensible","estimatedIntroTime","seekTo","Stepper","connector","label","Step","StepLabel","StepIconComponent","CardContent","instructions","CardActions","Grid","container","direction","justify","item","NavigateBefore","step","TextField","accept","InputLabelProps","shrink","onChange","files","orientation","flexItem","Number","value","NotesDisplay","curtpos","uNotes","seconds","wrap","style","maxWidth","xl","lg","fullWidth","Hidden","mdDown","videoId","playVideo","pauseVideo","xs","multiline","rows","readOnly","getStepContent","disabled","prevActiveStep","isDisableNextButton","MakeGakufuPage","marginClasses","useMarginStyles","Card","m3","ErrorPage","state","search","router","location","params","querystring","parse","slice","statusCodeNum","status","Alert","severity","AlertTitle","code","codeNum2Message","SingGakufuPage","expanded","setExpanded","mt2","mb2","InputDamjiroGakufu","NotesScroller","disableSpacing","ml1","Settings","expand","expandOpen","aria-expanded","ExpandMore","Collapse","in","timeout","unmountOnExit","collapse","TimeOffsetForm","PitchOffsetForm","MIDIFilePicker","SingMIDIPage","checkedMute","setCheckedMute","console","log","buf","muteMIDIChannel","FormControlLabel","control","Checkbox","checked","name","Header","ButtonBase","sec2us","isClose","b","abs","num","base","floor","lower_bound","ary","cmp","begin","end","len","half","mid","impl","targetTrack","targetChannel","midi","header","getFormat","getTracksCount","getTimeDivision","TICKS_PER_BEAT","notes_begin","notes_end","events","channel","param1","EVENT_MIDI_NOTE_OFF","lyrics","getLyrics","text","Encoding","convert","to","stateTbl","stateTblDefault","st","lyr","idx","lhs","rhs","note","getTrackEvents","param2","setTrackEvents","getContent","createPitchDetector","stream","resolve","pitchHandler","ml5","pitchDetection","getPitch","freq","inputBuffer","m","stopAudio","library","add","faFileAudio","NotesSVG","styled","svg","start","reduce","minmax","min","max","MAX_VALUE","MIN_VALUE","NOTE_NUM_MIN","NOTE_NUM_MAX","cw","tpos2x","tpos2x_view","filterNotes","notes2bars","acc","last","concat","Fragment","x","y","rx","ry","fill","fillOpacity","viewBox","x1","x2","y1","y2","strokeWidth","stroke","Array","from","_","correct","gakufuText","setGakufuText","setErrorMsg","FormControl","helperText","json","isNaN","InputLabel","Input","required","endAdornment","InputAdornment","position","user","micStream","playing","curTimeOffset","curPitchOffset","setCurtpos","useCallback","navigator","mediaDevices","getUserMedia","audio","timerAdjust","setInterval","getCurrentTime","getBiasedVideoTime","prev","inputTime","videoCurrentTime","micCurrentTime","biasedPitch","lbIdx","lb","gap","clearInterval","getTracks","forEach","track","onPause","mr2","mt1","ScoreDisplay","percPitchCorrect","uNote","gNote","loss","sum","percPitchAccuracy","score","accuracy","history","createBrowserHistory","basename","rootReducer","combineReducers","persistReducer","storage","whitelist","loadSnack","connectRouter","persistedReducer","store","createStore","compose","applyMiddleware","routerMiddleware","persistor","persistStore","transform","marginLeft","transition","transitions","create","shortest","verticalAlign","marginTop","mt3","mb1","marginBottom","m1","margin","mauto","App","loading","CssBaseline","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0f25dfd2.chunk.js","sourcesContent":["import { useCardStyles } from './App'\nimport React, { useEffect, useState, useRef } from 'react'\nimport JSLibTimidity from 'js-libtimidity'\nimport EventEmitter from 'events'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\nimport Button from '@material-ui/core/Button'\nimport { PlayArrow } from '@material-ui/icons'\nimport Typography from '@material-ui/core/Typography'\n\nconst TIMIDITY_CFG = `\nsoundfont GeneralUserGSv1.471.sf2\n`\n\nfunction getFirstEffectiveMIDIEvent (midiBuf) {\n  const midi = new MIDIFile(midiBuf)\n  const events = midi.getMidiEvents()\n  const ons = events.filter(ev => ev.subtype === MIDIEvents.EVENT_MIDI_NOTE_ON)\n  if (ons.length === 0) throw new Error('invalid midi file')\n  return ons[0]\n}\n\nclass PCMPlayer extends EventEmitter {\n  constructor (audioContext, pcm) {\n    super()\n    this._audioContext = audioContext\n    this._pcm = pcm\n    this._playing = false\n    this._currentTime = 0\n    this._offset = 0\n    this._epoch = null\n    this._onAudioProcess = this._onAudioProcess.bind(this)\n  }\n\n  play () {\n    if (this._playing) return\n\n    this._node = this._audioContext.createScriptProcessor(\n      0,\n      0,\n      this._pcm.numChannels\n    )\n    this._node.connect(this._audioContext.destination)\n    this._node.addEventListener('audioprocess', this._onAudioProcess)\n\n    this._playing = true\n    this.emit('start')\n  }\n\n  stop () {\n    if (!this._playing) return\n\n    this._node.disconnect()\n    this._node.removeEventListener('audioprocess', this._onAudioProcess)\n\n    this._playing = false\n    this._pcm = null\n    this.emit('end')\n  }\n\n  _onAudioProcess (e) {\n    let bufsize = 0\n    for (let ch = 0; ch < this._pcm.numChannels; ch++) {\n      const out = e.outputBuffer.getChannelData(ch)\n      bufsize = out.length\n      for (let i = 0; i < bufsize; i++) {\n        const si = (this._offset + i) * this._pcm.numChannels + ch\n        const s = si < this._pcm.data.length ? this._pcm.data[si] / 0x7fff : 0\n        out[i] = s\n      }\n    }\n    this._offset += bufsize\n\n    if (!this._epoch) this._epoch = this._audioContext.currentTime\n\n    if (\n      this._playing &&\n      this._offset * this._pcm.numChannels > this._pcm.data.length\n    )\n      this.stop()\n  }\n\n  getCurrentTime () {\n    if (!this._epoch) return 0\n    return this._audioContext.currentTime - this._epoch\n  }\n}\n\nfunction MIDIPlayer ({ buffer, onReady, onPlay, onEnd }) {\n  const [audioContext, setAudioContext] = useState(null)\n  const [pcmPlayer, setPCMPlayer] = useState(null)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const refOnReady = useRef(onReady)\n  const refOnPlay = useRef(onPlay)\n  const refOnEnd = useRef(onEnd)\n  const classes = useCardStyles()\n\n  useEffect(() => {\n    const audioContext = new AudioContext()\n    setAudioContext(audioContext)\n    return () => {\n      audioContext.close()\n    }\n  }, [])\n  useEffect(() => {\n    if (!audioContext || !buffer) return\n    async function f () {\n      const synth = new JSLibTimidity(process.env.PUBLIC_URL, TIMIDITY_CFG, {\n        sampleRate: audioContext.sampleRate,\n        numChannels: 2\n      })\n      while (!synth.isReady()) await new Promise(r => setTimeout(r, 1000))\n      let pcmWoRest = await synth.midi2wav(new Uint8Array(buffer))\n\n      // Prefix 'rest' to pcmWoRest\n      // c.f.: https://superuser.com/questions/737036/timidity-extract-tracks-preserving-initial-silence\n      const restLength =\n        (getFirstEffectiveMIDIEvent(buffer).playTime / 1000) *\n        pcmWoRest.sampleRate *\n        pcmWoRest.numChannels\n      const pcm = {\n        ...pcmWoRest,\n        data: new Int16Array(restLength + pcmWoRest.data.length)\n      }\n      pcm.data.set(pcmWoRest.data, restLength)\n\n      const player = new PCMPlayer(audioContext, pcm)\n      if (refOnReady.current) refOnReady.current({ target: player })\n      player.on('start', () => {\n        if (refOnPlay.current) refOnPlay.current()\n        setIsPlaying(true)\n      })\n      player.on('end', () => {\n        if (refOnEnd.current) refOnEnd.current()\n        setIsPlaying(false)\n      })\n      setPCMPlayer(oldPlayer => {\n        if (oldPlayer) oldPlayer.stop()\n        return player\n      })\n    }\n    f()\n  }, [buffer, audioContext])\n\n  refOnReady.current = onReady\n  refOnPlay.current = onPlay\n  refOnEnd.current = onEnd\n\n  return (\n    <>\n      {pcmPlayer && !isPlaying ? (\n        <Button\n          size='large'\n          variant='outlined'\n          onClick={() => pcmPlayer.play()}\n        >\n          <PlayArrow className={classes.wrapIcon} />\n          Play\n        </Button>\n      ) : (\n        <>\n          {!isPlaying && <Typography component={'sub'}>Loading...</Typography>}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default MIDIPlayer\n","import {\n  IconButton,\n  makeStyles,\n  Snackbar,\n  SnackbarContent\n} from '@material-ui/core'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { CheckCircle, Close, Error, Info, Warning } from '@material-ui/icons'\nimport { amber, green } from '@material-ui/core/colors'\nimport clsx from 'clsx'\n\n/**\n * Show snackbar with custom message from Redux.\n * How to use:\n * 1. Connect your component with dispatch. For example:\n * ```\n * const _yourComponent = (dispatch) => {\n *\n * }\n * const YourComponent()(_yourComponent);\n * ```\n * 2. Use dispatch() when you want to show messages with snackbar.\n * `dispatch({type: 'SNACK_LOAD', message: 'some Message', variant: 'error'})`\n *\n * @param openSnack\n *  from redux. no need to config.\n * @param variant default 'info'\n *  from redux, need to config. you can choose one of 'error', 'info', 'success', 'warning'.\n * @param message\n *  from redux, need to config.\n * @param dispatch\n *  from redux.\n * @param customTag\n *  you can customize Snackbar from material UI. add some tag implemented Snackbar.\n * @returns <Snackbar />\n */\n\nexport const variantIcon = {\n  success: CheckCircle,\n  warning: Warning,\n  error: Error,\n  info: Info\n}\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nconst _messageSnackbar = ({\n  openSnack,\n  variant,\n  message,\n  dispatch,\n  ...customTag\n}) => {\n  const handleClose = () => dispatch({ type: 'SNACK_UNLOAD' })\n  const classes = useStyles()\n  variant = Object.keys(variantIcon).includes(variant) ? variant : 'info'\n  const Icon = variantIcon[variant]\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      open={openSnack}\n      onClose={handleClose}\n      {...customTag}\n    >\n      <SnackbarContent\n        className={clsx(classes[variant])}\n        aria-describedby='snackbar'\n        message={\n          <span id='snackbar' className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key='close'\n            aria-label='close'\n            color='inherit'\n            onClick={handleClose}\n          >\n            <Close className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  )\n}\nconst MessageSnackbar = connect(\n  ({ snack: { openSnack, variant, message } }) => ({\n    openSnack,\n    variant,\n    message\n  })\n)(_messageSnackbar)\nexport default MessageSnackbar\n","import { useCardStyles } from '../App'\nimport React from 'react'\nimport {\n  Container,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { Audiotrack, Edit, MusicVideo, NavigateNext } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst useListStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(8)\n  },\n  root: {\n    backgroundColor: theme.palette.background.paper\n  }\n}))\n\nconst _aboutPage = ({ push }) => {\n  const classes = useCardStyles()\n  const listClasses = useListStyles()\n\n  const handleSingGakufu = () => push('/gakufu/sing')\n  const handleSingMIDI = () => push('/midi/sing')\n  const handleMakeGakufu = () => push('/gakufu/make')\n\n  return (\n    <Container>\n      <Typography>あばうとぺーじ☆彡</Typography>\n      <List component='nav' className={listClasses.root}>\n        <ListItem>\n          <ListItemIcon>\n            <Audiotrack className={classes.wrapIcon} />\n          </ListItemIcon>\n          <ListItemText primary='Sing a song' />\n        </ListItem>\n        <ListItem\n          button\n          onClick={handleSingGakufu}\n          className={listClasses.nested}\n        >\n          <ListItemIcon>\n            <MusicVideo className={classes.wrapIcon} />\n          </ListItemIcon>\n          <ListItemText primary='from damjiro Gakufu' />\n          <NavigateNext />\n        </ListItem>\n        <ListItem\n          button\n          onClick={handleSingMIDI}\n          className={listClasses.nested}\n        >\n          <ListItemIcon>\n            <FontAwesomeIcon\n              icon={['far', 'file-audio']}\n              className={classes.wrapAwesomeIcon}\n            />\n          </ListItemIcon>\n          <ListItemText primary='from MIDI file' />\n          <NavigateNext />\n        </ListItem>\n        <Divider />\n        <ListItem button onClick={handleMakeGakufu}>\n          <ListItemIcon>\n            <Edit className={classes.wrapIcon} />\n          </ListItemIcon>\n          <ListItemText primary='Make damjiro Gakufu' />\n          <NavigateNext />\n        </ListItem>\n      </List>\n    </Container>\n  )\n}\nconst AboutPage = connect(null, { push })(_aboutPage)\nexport default AboutPage\n","const MIDILoader = (file, onLoad, dispatch) => {\n  try {\n    if (!['audio/midi', 'audio/x-midi', 'audio/mid'].includes(file.type)) {\n      dispatch({\n        type: 'SNACK_LOAD',\n        message: 'Invalid mime type',\n        variant: 'error'\n      })\n    } else {\n      const reader = new FileReader()\n      reader.onload = e => onLoad(e.target.result)\n      reader.readAsArrayBuffer(file)\n    }\n  } catch (e) {\n    dispatch({ type: 'SNACK_LOAD', message: e.toString(), variant: 'error' })\n  }\n}\nexport default MIDILoader\n","import React, { useEffect, useRef, useState } from 'react'\nimport MIDILoader from './util/MIDILoader'\nimport YouTube from 'react-youtube'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { midi2notes, NotesDisplay } from './App'\n\n//material-ui\nimport { GetApp, Movie, NavigateBefore, NavigateNext } from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport { makeStyles } from '@material-ui/core/styles'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Step from '@material-ui/core/Step'\nimport Stepper from '@material-ui/core/Stepper'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport clsx from 'clsx'\nimport Divider from '@material-ui/core/Divider'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Grid from '@material-ui/core/Grid'\nimport { Hidden, TextField } from '@material-ui/core'\n\nfunction makeNotesSensible (notes, introTime, pitchOffset) {\n  if (notes.length === 0) return notes\n\n  const epoch = notes[0].tpos\n  return notes.map(n => ({\n    tpos: n.tpos - epoch + introTime,\n    duration: n.duration,\n    pitch: n.pitch + pitchOffset\n  }))\n}\n\nfunction gakufu2json (gNotes, youtubeVideoId, timeOffset) {\n  const gakufu = {\n    notes: gNotes.map(n => [\n      Math.round(n.tpos),\n      Math.round(n.duration),\n      Math.round(n.pitch)\n    ]),\n    youtubeVideoId,\n    timeOffset\n  }\n  return JSON.stringify(gakufu)\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 136deg, #000046 0%, #1CB5E0 80%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 136deg, #000046 0%, #1CB5E0 80%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector)\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#cccccc',\n    zIndex: 1,\n    color: '#ffffff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, #1CB5E0 20%, #000046 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, #1CB5E0 20%, #000046 100%)'\n  },\n  font: {\n    fontSize: '24px'\n  }\n})\n\nfunction ColoredStepIcon (props) {\n  const classes = useColorlibStepIconStyles()\n  const { active, completed } = props\n\n  const icons = {\n    1: <FontAwesomeIcon icon={['far', 'file-audio']} fontSize={500} />,\n    2: <Movie />,\n    3: <GetApp />\n  }\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes.active]: active,\n          [classes.completed]: completed\n        },\n        classes.font\n      )}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  videoFrame: {\n    width: '640px',\n    height: '360px'\n  }\n}))\n\nfunction MIDIEditor ({ dispatch, push }) {\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = useState(0)\n  const steps = ['Select midi file', 'Input youtube Id', 'Check output Gakufu']\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n  }\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1)\n  }\n\n  const handleTop = () => {\n    push('/')\n  }\n\n  const [fileBody, setFileBody] = useState('')\n  const [trackNo, setTrackNo] = useState(0)\n  const [channelNo, setChannelNo] = useState(0)\n  const [introTime, setIntroTime] = useState(0)\n  const [pitchOffset, setPitchOffset] = useState(0)\n  const [youtubeVideoId, setYoutubeVideoId] = useState('')\n  const [video, setVideo] = useState(null)\n  const errorMsg = useRef('')\n\n  let gNotesOriginal = []\n  let gNotes = []\n  if (fileBody) {\n    try {\n      gNotesOriginal = midi2notes(fileBody, trackNo, channelNo)\n      gNotes = makeNotesSensible(\n        gNotesOriginal,\n        introTime * 1000000,\n        pitchOffset\n      )\n      errorMsg.current = null\n    } catch (e) {\n      errorMsg.current = e.message\n    }\n  }\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return (\n          <Grid container direction='column' justify='center' spacing={2}>\n            <Grid item container direction='row' justify='center' spacing={2}>\n              <Grid item>\n                <TextField\n                  type='file'\n                  accept='audio/midi, audio/x-midi, audio/mid'\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                  onChange={e => {\n                    // Reset\n                    setFileBody('')\n                    setTrackNo(0)\n                    setChannelNo(0)\n                    setIntroTime(0)\n                    setPitchOffset(0)\n                    setYoutubeVideoId('')\n                    setVideo(null)\n                    errorMsg.current = ''\n\n                    // Read the file\n                    const file = e.target.files[0]\n                    MIDILoader(file, setFileBody, dispatch)\n                  }}\n                  label='Select a midi file.'\n                />\n              </Grid>\n              <Divider orientation='vertical' flexItem />\n              <Grid item>\n                <TextField\n                  label='Track No.'\n                  type='number'\n                  onChange={e => setTrackNo(Number(e.target.value))}\n                  value={trackNo}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label='Channel No.'\n                  type='number'\n                  onChange={e => setChannelNo(Number(e.target.value))}\n                  value={channelNo}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label='pitch offset (SMF note #)'\n                  type='number'\n                  onChange={e => setPitchOffset(Number(e.target.value))}\n                  value={pitchOffset}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n            </Grid>\n            <Grid item>\n              <NotesDisplay\n                curtpos={0}\n                gNotes={gNotes}\n                uNotes={[]}\n                seconds={30}\n              />\n            </Grid>\n          </Grid>\n        )\n      case 1:\n        return (\n          <Grid\n            container\n            direction='row'\n            wrap='wrap'\n            justify='space-around'\n            spacing={2}\n          >\n            <Grid\n              item\n              style={{ maxWidth: '300px' }}\n              xl={3}\n              lg={12}\n              container\n              direction='column'\n              spacing={2}\n            >\n              <Grid item>\n                <TextField\n                  fullWidth\n                  label='YouTube video id'\n                  type='text'\n                  onChange={e => setYoutubeVideoId(String(e.target.value))}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  label='intro time (sec)'\n                  type='number'\n                  step='any'\n                  onChange={e => setIntroTime(Number(e.target.value))}\n                  value={introTime}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  variant={'outlined'}\n                />\n              </Grid>\n            </Grid>\n            <Hidden mdDown>\n              <Divider orientation='vertical' flexItem />\n            </Hidden>\n            <Grid item style={{ maxWidth: '640px' }} xl={9} lg={12}>\n              {youtubeVideoId ? (\n                <YouTube\n                  videoId={youtubeVideoId}\n                  onReady={e => {\n                    const video = e.target\n                    setVideo(video)\n                    video.playVideo()\n                    video.pauseVideo()\n                  }}\n                />\n              ) : (\n                <div className={classes.videoFrame} />\n              )}\n            </Grid>\n          </Grid>\n        )\n      case 2:\n        return (\n          <Grid item container direction='row' justify='center' spacing={3}>\n            <Grid item xs={10}>\n              <TextField\n                fullWidth\n                multiline\n                rows={8}\n                label='Output Gakufu'\n                value={\n                  fileBody && youtubeVideoId\n                    ? gakufu2json(gNotes, youtubeVideoId, 300 * 1000)\n                    : ''\n                }\n                readOnly\n                InputLabelProps={{\n                  shrink: true\n                }}\n                variant={'outlined'}\n              />\n            </Grid>\n            <Grid item>\n              <Typography>{errorMsg.current}</Typography>\n            </Grid>\n          </Grid>\n        )\n      default:\n        dispatch({\n          type: 'SNACK_LOAD',\n          message: 'Unknown step Error',\n          variant: 'error'\n        })\n        return\n    }\n  }\n\n  const isDisableNextButton = step => {\n    switch (step) {\n      case 0:\n        return !fileBody\n      case 1:\n        return !youtubeVideoId\n      case 2:\n        return false\n      default:\n        return true\n    }\n  }\n\n  useEffect(() => {\n    if (gNotesOriginal.length === 0) return\n    const estimatedIntroTime = gNotesOriginal[0].tpos / 1000000\n    setIntroTime(estimatedIntroTime)\n  }, [fileBody, trackNo, channelNo])\n\n  useEffect(() => {\n    if (!video) return\n    video.seekTo(introTime, true)\n  }, [video, introTime])\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColoredStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <>\n            <CardContent>\n              <Typography className={classes.instructions}>\n                Let's sing with your Gakufu!\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Grid container direction='row' justify='space-around'>\n                <Grid item>\n                  <Button onClick={handleTop} className={classes.button}>\n                    <NavigateBefore />\n                    Back to Top\n                  </Button>\n                </Grid>\n              </Grid>\n            </CardActions>\n          </>\n        ) : (\n          <div>\n            <CardContent>{getStepContent(activeStep)}</CardContent>\n            <CardActions>\n              <Grid container direction='row' justify='space-around'>\n                <Grid item>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    <NavigateBefore />\n                    Back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleNext}\n                    className={classes.button}\n                    disabled={isDisableNextButton(activeStep)}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                    <NavigateNext />\n                  </Button>\n                </Grid>\n              </Grid>\n            </CardActions>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\nMIDIEditor = connect(null, { push })(MIDIEditor)\nexport default MIDIEditor\n","import { useCardStyles, useMarginStyles } from '../App'\nimport { Typography, Card, CardContent, Container } from '@material-ui/core'\nimport { Edit } from '@material-ui/icons'\nimport MIDIEditor from '../MIDIEditor'\nimport React from 'react'\n\nconst MakeGakufuPage = () => {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n\n  return (\n    <Container>\n      <Card className={marginClasses.m3}>\n        <CardContent>\n          <Typography variant='h5'>\n            <Edit className={classes.wrapIcon} />\n            Make Damjiro Gakuhu.\n          </Typography>\n        </CardContent>\n        <MIDIEditor />\n      </Card>\n    </Container>\n  )\n}\nexport default MakeGakufuPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport querystring from 'querystring'\n\nconst _errorPage = ({ search }) => {\n  const codeNum2Message = code => {\n    switch (code) {\n      case 404:\n        return 'Not Found'\n      default:\n        return 'Unexpected Error'\n    }\n  }\n\n  const params = querystring.parse(search.slice(1))\n  const statusCodeNum = Number(params.status)\n\n  return (\n    <Grid container direction='row' justify='center'>\n      <Grid item xs={8}>\n        <Alert severity='error'>\n          <AlertTitle>{statusCodeNum}</AlertTitle>\n          {codeNum2Message(statusCodeNum)}\n        </Alert>\n      </Grid>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state => ({\n  search: state.router.location.search\n})\n\nconst ErrorPage = connect(mapStateToProps)(_errorPage)\nexport default ErrorPage\n","import React, { useState } from 'react'\nimport {\n  InputDamjiroGakufu,\n  NotesScroller,\n  PitchOffsetForm,\n  TimeOffsetForm,\n  useCardStyles,\n  useMarginStyles\n} from '../App'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Collapse,\n  Grid,\n  IconButton,\n  Typography,\n  Container\n} from '@material-ui/core'\nimport {\n  Audiotrack,\n  ExpandMore,\n  MusicVideo,\n  Settings\n} from '@material-ui/icons'\nimport clsx from 'clsx'\n\nconst SingGakufuPage = () => {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n  const [expanded, setExpanded] = useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  return (\n    <Container>\n      <Card className={marginClasses.m3}>\n        <CardContent>\n          <Typography variant='h5'>\n            <Audiotrack className={classes.wrapIcon} />\n            Sing a song\n          </Typography>\n          <Grid\n            className={marginClasses.mt2}\n            container\n            direction='row'\n            justify='space-around'\n          >\n            <Grid item xs={5}>\n              <Typography\n                variant='h6'\n                className={marginClasses.mb2}\n                color='textSecondary'\n              >\n                <MusicVideo className={classes.wrapIcon} />\n                From Damjiro Gakufu file.\n              </Typography>\n              <InputDamjiroGakufu />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardContent>\n          <NotesScroller />\n        </CardContent>\n        <CardActions disableSpacing>\n          <Typography color='textSecondary' className={marginClasses.ml1}>\n            <Settings className={classes.wrapIcon} />\n            Adjustment\n          </Typography>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label='show more'\n          >\n            <ExpandMore />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout='auto' unmountOnExit>\n          <Grid\n            container\n            spacing={5}\n            direction='row'\n            className={marginClasses.collapse}\n          >\n            <Grid item xs={3}>\n              <TimeOffsetForm />\n            </Grid>\n            <Grid item xs={3}>\n              <PitchOffsetForm />\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </Container>\n  )\n}\nexport default SingGakufuPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MIDILoader from './util/MIDILoader'\nimport TextField from '@material-ui/core/TextField'\n\nfunction MIDIFilePicker ({ onLoad, dispatch }) {\n  return (\n    <TextField\n      type='file'\n      label='Select a midi file.'\n      accept='audio/midi, audio/x-midi, audio/mid'\n      onChange={e => {\n        // Read the file\n        const file = e.target.files[0]\n        MIDILoader(file, onLoad, dispatch)\n      }}\n      InputLabelProps={{\n        shrink: true\n      }}\n      variant={'outlined'}\n    />\n  )\n}\nMIDIFilePicker = connect()(MIDIFilePicker)\nexport default MIDIFilePicker\n","import React, { useState } from 'react'\nimport {\n  useCardStyles,\n  useMarginStyles,\n  midi2notes,\n  muteMIDIChannel,\n  NotesScroller,\n  PitchOffsetForm,\n  TimeOffsetForm\n} from '../App'\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Checkbox,\n  Collapse,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  Typography,\n  Container\n} from '@material-ui/core'\nimport { Audiotrack, ExpandMore, Settings } from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport MIDIFilePicker from '../MIDIFilePicker'\nimport clsx from 'clsx'\nimport { connect } from 'react-redux'\n\nconst _singMIDIPage = ({ dispatch }) => {\n  const classes = useCardStyles()\n  const marginClasses = useMarginStyles()\n  const [expanded, setExpanded] = useState(false)\n  const [checkedMute, setCheckedMute] = useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  console.log(checkedMute)\n\n  return (\n    <Container>\n      <Card className={marginClasses.m3}>\n        <CardContent>\n          <Typography variant='h5'>\n            <Audiotrack className={classes.wrapIcon} />\n            Sing a song\n          </Typography>\n          <Grid\n            className={marginClasses.mt2}\n            container\n            direction='row'\n            justify='space-around'\n          >\n            <Grid\n              item\n              xs={5}\n              container\n              direction='column'\n              justify='space-between'\n            >\n              <Typography\n                variant='h6'\n                color='textSecondary'\n                className={marginClasses.mb2}\n              >\n                <FontAwesomeIcon\n                  icon={['far', 'file-audio']}\n                  className={classes.wrapIcon}\n                />\n                From midi file.\n              </Typography>\n              <MIDIFilePicker\n                onLoad={buf => {\n                  dispatch({\n                    type: 'SET_GAKUFU',\n                    gakufu: {\n                      notes: midi2notes(buf, 0, 0),\n                      midiBuf: checkedMute ? muteMIDIChannel(buf, 0, 0) : buf,\n                      videoId: null\n                    }\n                  })\n                }}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={checkedMute}\n                    onChange={e => setCheckedMute(e.target.checked)}\n                    name='checkedMute'\n                  />\n                }\n                label='Mute melody'\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardContent>\n          <NotesScroller />\n        </CardContent>\n        <CardActions disableSpacing>\n          <Typography color='textSecondary' className={marginClasses.ml1}>\n            <Settings className={classes.wrapIcon} />\n            Adjustment\n          </Typography>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label='show more'\n          >\n            <ExpandMore />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout='auto' unmountOnExit>\n          <Grid\n            container\n            spacing={5}\n            direction='row'\n            className={marginClasses.collapse}\n          >\n            <Grid item xs={3}>\n              <TimeOffsetForm />\n            </Grid>\n            <Grid item xs={3}>\n              <PitchOffsetForm />\n            </Grid>\n          </Grid>\n        </Collapse>\n      </Card>\n    </Container>\n  )\n}\nconst SingMIDIPage = connect()(_singMIDIPage)\nexport default SingMIDIPage\n","import React from 'react'\nimport { Container, Grid, Typography, ButtonBase } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { push } from 'connected-react-router'\n\nconst _header = ({ push }) => {\n  const handleTop = () => push('/')\n\n  return (\n    <Container>\n      <Grid container direction='row' justify='center'>\n        <Grid item>\n          <ButtonBase onClick={handleTop}>\n            <Typography variant='h3'>Damjiro</Typography>\n          </ButtonBase>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\nconst Header = connect(null, { push })(_header)\nexport default Header\n","import React, { useRef, useState, useCallback, useEffect } from 'react'\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\nimport styled from 'styled-components'\nimport YouTube from 'react-youtube'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport ml5 from 'ml5'\nimport MIDIFile from 'midifile'\nimport MIDIEvents from 'midievents'\nimport MIDIPlayer from './MIDIPlayer'\nimport snackbarReducer from './reducers/SnackbarReducer'\nimport MessageSnackbar from './shared/MessageSnackbar'\nimport {\n  ConnectedRouter,\n  connectRouter,\n  routerMiddleware\n} from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport AboutPage from './pages/AboutPage'\nimport MakeGakufuPage from './pages/MakeGakufuPage'\nimport { Redirect, Route, Switch } from 'react-router'\nimport ErrorPage from './pages/ErrorPage'\nimport SingGakufuPage from './pages/SingGakufuPage'\nimport SingMIDIPage from './pages/SingMIDIPage'\nimport Header from './container/Header'\nimport Encoding from 'encoding-japanese'\n\n// material ui\nimport {\n  Input,\n  TextField,\n  InputLabel,\n  InputAdornment,\n  FormControl,\n  Typography,\n  makeStyles,\n  CssBaseline,\n  Grid\n} from '@material-ui/core'\n\n// font-awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFileAudio } from '@fortawesome/free-regular-svg-icons'\nlibrary.add(faFileAudio)\n\n// Thanks to: https://stackoverflow.com/questions/4059147/check-if-a-variable-is-a-string-in-javascript\nfunction isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nfunction isNumber (n) {\n  return !isNaN(n)\n}\n\nfunction sec2us (n) {\n  return n * 1000000\n}\n\nfunction isClose (a, b) {\n  return Math.abs(a - b) < 0.0001\n}\n\nfunction round (num, base) {\n  return Math.floor(num / base) * base\n}\n\nfunction range (start, stop, step) {\n  return Array.from(\n    { length: (stop - start) / step + 1 },\n    (_, i) => start + i * step\n  )\n}\n\n// c.f. C++'s std::lower_bound\n// Thanks to: https://cpprefjp.github.io/reference/algorithm/lower_bound.html\nfunction lower_bound (ary, cmp) {\n  const impl = (begin, end) => {\n    for (let len = end - begin; len !== 0; ) {\n      const half = Math.floor(len / 2)\n      const mid = begin + half\n      if (cmp(ary[mid])) {\n        len -= half + 1\n        begin = mid + 1\n      } else {\n        len = half\n      }\n    }\n    return begin\n  }\n  return impl(0, ary.length)\n}\n\nexport function midi2notes (buffer, targetTrack, targetChannel) {\n  const midi = new MIDIFile(buffer)\n  if (midi.header.getFormat() === 2)\n    throw new Error('Unsupported format of MIDI')\n  if (midi.header.getTracksCount() === 0) throw new Error('Not enough tracks')\n  if (midi.header.getTimeDivision() !== MIDIFile.Header.TICKS_PER_BEAT)\n    throw new Error('Unsupported time division')\n\n  const notes_begin = []\n  const notes_end = []\n  const events = midi.getMidiEvents()\n  for (let ev of events) {\n    if (ev.channel !== targetChannel) continue\n\n    switch (ev.subtype) {\n      case MIDIEvents.EVENT_MIDI_NOTE_ON:\n        if (notes_begin.length !== notes_end.length) break\n        notes_begin.push([ev.playTime * 1000, ev.param1])\n        break\n\n      case MIDIEvents.EVENT_MIDI_NOTE_OFF:\n        if (\n          notes_begin.length - notes_end.length !== 1 ||\n          notes_begin[notes_begin.length - 1][1] !== ev.param1\n        )\n          break\n        notes_end.push([ev.playTime * 1000, ev.param1])\n        break\n\n      default:\n        break\n    }\n  }\n  if (notes_begin.length !== notes_end.length)\n    throw new Error('Invalid # of note offs')\n\n  const notes = []\n  for (let i = 0; i < notes_begin.length; i++) {\n    const b = notes_begin[i]\n    const e = notes_end[i]\n    notes.push({\n      tpos: b[0],\n      duration: e[0] - b[0],\n      pitch: b[1],\n      lyrics: ''\n    })\n  }\n\n  if (notes.length === 0) return notes\n\n  // Extract lyrics\n  let lyrics = midi.getLyrics().map(n => ({\n    ...n,\n    text: Encoding.convert(n.text, { to: 'UNICODE' })\n  }))\n\n  // Format lyrics\n  const stateTbl = [\n    {\n      '\\\\': [1, false],\n      '^': [0, false],\n      '/': [0, false],\n      '%': [0, false],\n      '<': [0, false],\n      '>': [0, false],\n      '[': [2, false],\n      '(': [2, false]\n    },\n    {},\n    { ']': [0, false], ')': [0, false] }\n  ]\n  const stateTblDefault = [\n    [0, true],\n    [0, true],\n    [2, false]\n  ]\n  let st = 0\n  lyrics = lyrics.map(lyr => {\n    let text = ''\n    for (let ch of lyr.text) {\n      const s = stateTbl[st][ch] || stateTblDefault[st]\n      if (s[1]) text += ch\n      st = s[0]\n    }\n    return { ...lyr, text }\n  })\n\n  // Assign lyrics to note\n  for (let lyr of lyrics) {\n    const tpos = lyr.playTime * 1000\n\n    // Find nearest note\n    const idx = lower_bound(notes, n => n.tpos <= tpos)\n    const lhs = idx === 0 ? null : notes[idx - 1]\n    const rhs = idx === notes.length ? null : notes[idx]\n    let note = null\n    if (lhs && isClose(lhs.tpos, tpos)) {\n      note = lhs\n    } else if (rhs && isClose(tpos, rhs.tpos)) {\n      note = rhs\n    } else if (lhs && lhs.tpos < tpos && tpos < lhs.tpos + lhs.duration) {\n      note = lhs\n    }\n\n    if (!note) continue\n\n    note.lyrics += lyr.text\n  }\n\n  return notes\n}\n\nexport function muteMIDIChannel (midiBuf, targetTrack, targetChannel) {\n  const midi = new MIDIFile(midiBuf)\n  if (midi.header.getTracksCount() <= targetTrack)\n    throw new Error('Invalid track number')\n  const events = midi.getTrackEvents(targetTrack)\n  for (let ev of events) {\n    if (ev.channel !== targetChannel) continue\n    switch (ev.subtype) {\n      case MIDIEvents.EVENT_MIDI_NOTE_ON:\n        ev.param2 = 0 // Mute it\n        break\n      default:\n        break\n    }\n  }\n  midi.setTrackEvents(targetTrack, events)\n  return midi.getContent()\n}\n\nasync function createPitchDetector (audioContext, stream) {\n  const pitchHandler = await new Promise(resolve => {\n    const pitchHandler = ml5.pitchDetection(\n      process.env.PUBLIC_URL + '/model',\n      audioContext,\n      stream,\n      () => {\n        resolve(pitchHandler)\n      }\n    )\n  })\n\n  const getPitch = async () => {\n    const [freq, inputBuffer, currentTime] = await pitchHandler.getPitch()\n    if (!freq) return [null, inputBuffer, currentTime]\n    const m = Math.round(12 * (Math.log(freq / 440) / Math.log(2))) + 69\n    return [m, inputBuffer, currentTime]\n  }\n  const stopAudio = () => {\n    // Nothing to do!\n  }\n\n  return [getPitch, stopAudio]\n}\n\nconst NotesSVG = styled.svg`\n  maxwidth: 80vw;\n  width: inherit;\n`\nexport function NotesDisplay ({ curtpos, gNotes, uNotes, seconds }) {\n  // curtpos, tpos, duration in us\n  // pitch in SMF\n\n  const SIZE_PER_SEC = 100\n  const NOTE_HEIGHT = 5\n  const FONT_SIZE = 20\n  const [NOTE_NUM_MIN, NOTE_NUM_MAX] = gNotes.reduce(\n    (minmax, n) => [\n      Math.min(minmax[0], n.pitch - 12),\n      Math.max(minmax[1], n.pitch + 12)\n    ],\n    [Number.MAX_VALUE, Number.MIN_VALUE]\n  )\n  const cw = SIZE_PER_SEC * seconds\n  const ch = (NOTE_NUM_MAX - NOTE_NUM_MIN + 1) * NOTE_HEIGHT\n  const tpos2x = tpos => (tpos * SIZE_PER_SEC) / 1000000\n  const r = {\n    from: round(tpos2x(curtpos), cw),\n    to: round(tpos2x(curtpos), cw) + cw\n  }\n  const tpos2x_view = tpos => tpos2x(tpos) - r.from\n  const pitch2y = pitch => ch - (pitch - NOTE_NUM_MIN) * NOTE_HEIGHT\n\n  const filterNotes = notes =>\n    notes.filter(\n      note =>\n        r.from < tpos2x(note.tpos + note.duration) &&\n        tpos2x(note.tpos) < r.to &&\n        NOTE_NUM_MIN <= note.pitch &&\n        note.pitch <= NOTE_NUM_MAX\n    )\n\n  const notes2bars = (notes, color) =>\n    notes\n      .reduce((acc, note) => {\n        // Concat close notes at same pitch\n        if (acc.length === 0) return [note]\n        const last = acc[acc.length - 1]\n        if (\n          last.pitch !== note.pitch ||\n          !isClose(last.tpos + last.duration, note.tpos)\n        )\n          return acc.concat(note)\n        acc[acc.length - 1] = {\n          tpos: last.tpos,\n          duration: note.tpos + note.duration - last.tpos,\n          pitch: last.pitch\n        }\n        return acc\n      }, [])\n      .map(note => (\n        <React.Fragment key={note.tpos}>\n          {note.lyrics && (\n            <text x={tpos2x_view(note.tpos)} y={FONT_SIZE} fontSize={FONT_SIZE}>\n              {note.lyrics}\n            </text>\n          )}\n          <rect\n            x={tpos2x_view(note.tpos)}\n            y={pitch2y(note.pitch)}\n            width={tpos2x(note.duration)}\n            height={NOTE_HEIGHT}\n            rx={1}\n            ry={1}\n            fill={color}\n            fillOpacity={0.7}\n          />\n        </React.Fragment>\n      ))\n\n  return (\n    <>\n      <p>{curtpos}</p>\n      <NotesSVG viewBox={'0,0,' + cw + ',' + ch}>\n        {\n          // horizontal lines\n        }\n        <line x1={0} x2={cw} y1={0} y2={0} strokeWidth={5} stroke='gray' />\n        <line x1={0} x2={cw} y1={ch} y2={ch} strokeWidth={5} stroke='gray' />\n        {// vertical lines\n        range(0, cw, SIZE_PER_SEC).map(x => (\n          <line\n            key={x}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={ch}\n            strokeWidth={1}\n            stroke='gray'\n            fillOpacity={0.7}\n          />\n        ))}\n        <line\n          x1={tpos2x_view(curtpos)}\n          x2={tpos2x_view(curtpos)}\n          y1={0}\n          y2={ch}\n          strokeWidth={1}\n          stroke='red'\n        />\n        {// note bars\n        notes2bars(filterNotes(gNotes), 'gray')}\n        {// user's correct note bars\n        notes2bars(filterNotes(uNotes.filter(n => n.correct)), '#FFA500')}\n        {// user's wrong note bars\n        notes2bars(filterNotes(uNotes.filter(n => !n.correct)), 'red')}\n      </NotesSVG>\n    </>\n  )\n}\n\nexport function InputDamjiroGakufu ({ dispatch }) {\n  const [gakufuText, setGakufuText] = useState('')\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  return (\n    <FormControl fullWidth>\n      <TextField\n        value={gakufuText}\n        label='Enter Damjiro Gakuhu.'\n        helperText={errorMsg}\n        error={errorMsg}\n        multiline={true}\n        rows={3}\n        InputLabelProps={{\n          shrink: true\n        }}\n        variant={'outlined'}\n        onChange={e => {\n          dispatch({ type: 'RESET_USER_NOTES' })\n          setGakufuText(e.target.value)\n\n          if (e.target.value === '') {\n            setErrorMsg(null)\n            return\n          }\n\n          try {\n            const json = JSON.parse(e.target.value)\n            const notes = json.notes.map(n => ({\n              tpos: n[0],\n              duration: n[1],\n              pitch: n[2]\n            }))\n            const videoId = json.youtubeVideoId\n            const timeOffset = json.timeOffset\n            if (!isString(videoId) || !isNumber(timeOffset)) {\n              dispatch({\n                type: 'SNACK_LOAD',\n                message: 'invalid JSON',\n                variant: 'error'\n              })\n            } else {\n              dispatch({ type: 'SET_GAKUFU', gakufu: { notes, videoId } })\n              dispatch({ type: 'SET_USER_TIME_OFFSET', value: timeOffset })\n              setErrorMsg(null)\n            }\n          } catch (e) {\n            dispatch({ type: 'RESET_GAKUFU' })\n            setErrorMsg(e.message)\n            dispatch({\n              type: 'SNACK_LOAD',\n              message: e.message,\n              variant: 'error'\n            })\n          }\n        }}\n      />\n    </FormControl>\n  )\n}\nInputDamjiroGakufu = connect()(InputDamjiroGakufu)\n\nexport function TimeOffsetForm ({ timeOffset, dispatch }) {\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Offset</InputLabel>\n      <Input\n        type='number'\n        value={Math.floor(timeOffset / 1000)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_TIME_OFFSET',\n            value: Number(e.target.value) * 1000\n          })\n        }\n        required\n        endAdornment={<InputAdornment position='end'>ms</InputAdornment>}\n      />\n    </FormControl>\n  )\n}\nTimeOffsetForm = connect(({ user: { timeOffset } }) => ({ timeOffset }))(\n  TimeOffsetForm\n)\n\nexport function PitchOffsetForm ({ pitchOffset, dispatch }) {\n  return (\n    <FormControl fullWidth>\n      <InputLabel>Pitch Offset</InputLabel>\n      <Input\n        type='number'\n        value={Math.floor(pitchOffset)}\n        onChange={e =>\n          dispatch({\n            type: 'SET_USER_PITCH_OFFSET',\n            value: Number(e.target.value)\n          })\n        }\n        required\n        endAdornment={<InputAdornment position='end'>note#</InputAdornment>}\n      />\n    </FormControl>\n  )\n}\nPitchOffsetForm = connect(({ user: { pitchOffset } }) => ({ pitchOffset }))(\n  PitchOffsetForm\n)\n\nexport function NotesScroller ({\n  dispatch,\n  gakufu,\n  user: { notes: uNotes, timeOffset, pitchOffset }\n}) {\n  const marginClasses = useMarginStyles()\n  const micStream = useRef(null)\n  const playing = useRef(false)\n  const curTimeOffset = useRef(timeOffset)\n  const curPitchOffset = useRef(pitchOffset)\n  const [curtpos, setCurtpos] = useState(0)\n  const video = useRef(null)\n  const onPlay = useCallback(async () => {\n    if (playing.current) return\n    playing.current = true\n\n    if (!micStream.current) {\n      micStream.current = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: false\n      })\n    }\n\n    const audioContext = new AudioContext()\n\n    // Set timer to scroll notes\n    const timerAdjust = setInterval(\n      () => setCurtpos(video.current.getCurrentTime() * 1000 * 1000),\n      25\n    )\n\n    // Create pitch detector\n    const [getPitch, stopAudio] = await createPitchDetector(\n      audioContext,\n      micStream.current\n    )\n\n    // Clear user's previous notes\n    dispatch({ type: 'RESET_USER_NOTES' })\n\n    // Loop to get pitches from mic\n    const getBiasedVideoTime = () =>\n      sec2us(video.current.getCurrentTime()) - curTimeOffset.current\n    let prev = null\n    while (playing.current) {\n      let [pitch, inputBuffer, inputTime] = await getPitch()\n      if (pitch && prev !== inputTime && pitch >= 36 && pitch <= 88) {\n        const videoCurrentTime = getBiasedVideoTime()\n        const micCurrentTime = sec2us(audioContext.currentTime)\n        const duration = sec2us(inputBuffer.duration)\n        const tpos =\n          videoCurrentTime - (micCurrentTime - sec2us(inputTime) + duration)\n        let biasedPitch = pitch\n        let correct = false\n\n        const lbIdx = lower_bound(gakufu.notes, n => n.tpos < tpos) - 1\n        const lb = lbIdx >= 0 ? gakufu.notes[lbIdx] : gakufu.notes[0]\n        if (lb) {\n          biasedPitch = lb.pitch + curPitchOffset.current\n          let gap =\n            pitch - biasedPitch - Math.floor((pitch - biasedPitch) / 12) * 12\n          if (gap > 6) gap -= 12\n          biasedPitch += gap\n          if (lb.tpos < tpos && tpos < lb.tpos + lb.duration && gap === 0)\n            correct = true\n        }\n\n        const note = {\n          tpos,\n          duration,\n          pitch: biasedPitch,\n          correct\n        }\n        dispatch({ type: 'APPEND_USER_NOTE', note })\n      }\n      inputBuffer = null\n      prev = inputTime\n    }\n\n    stopAudio()\n    audioContext.close()\n\n    // Stop timer\n    clearInterval(timerAdjust)\n  }, [gakufu.notes, dispatch])\n  const onEnd = useCallback(async () => {\n    playing.current = false\n    micStream.current.getTracks().forEach(track => track.stop())\n    micStream.current = null\n  })\n\n  curTimeOffset.current = timeOffset\n  curPitchOffset.current = pitchOffset\n\n  return (\n    <>\n      {gakufu.videoId && (\n        <YouTube\n          videoId={gakufu.videoId}\n          onReady={e => (video.current = e.target)}\n          onPlay={onPlay}\n          onPause={() => (playing.current = false)}\n          onEnd={onEnd}\n        />\n      )}\n\n      {gakufu.notes && (\n        <Grid container direction='row' wrap='nowrap' alignItems='flex-end'>\n          <Grid item className={marginClasses.mr2}>\n            <NotesDisplay\n              curtpos={curtpos}\n              gNotes={gakufu.notes}\n              uNotes={uNotes}\n              seconds={10}\n            />\n          </Grid>\n          <Grid\n            item\n            className={marginClasses.mr2 + ' ' + marginClasses.mt1}\n            style={{ maxWidth: '140px' }}\n            container\n            direction='column'\n            spacing={2}\n          >\n            <Grid item>\n              {gakufu.midiBuf && (\n                <MIDIPlayer\n                  buffer={gakufu.midiBuf}\n                  onReady={e => (video.current = e.target)}\n                  onPlay={onPlay}\n                  onEnd={onEnd}\n                />\n              )}\n            </Grid>\n            <Grid item>\n              <ScoreDisplay />\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  )\n}\nNotesScroller = connect(({ gakufu, user }) => ({\n  gakufu,\n  user\n}))(NotesScroller)\n\nfunction ScoreDisplay ({ gNotes, uNotes }) {\n  if (!gNotes || !uNotes) return <div />\n\n  const percPitchCorrect =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      const secretNonLinearFunc = x => x / (1 + Math.abs(x))\n      return acc + uNote.duration * (1 - secretNonLinearFunc(loss))\n    }, 0) / gNotes.reduce((sum, gNote) => sum + gNote.duration, 0)\n  const percPitchAccuracy =\n    uNotes.reduce((acc, uNote) => {\n      const gNote = gNotes[lower_bound(gNotes, n => n.tpos < uNote.tpos) - 1]\n      if (!gNote || gNote.tpos + gNote.duration < uNote.tpos) return acc\n      const loss = Math.abs(uNote.pitch - gNote.pitch)\n      return uNote.pitch === gNote.pitch ? acc + uNote.duration : acc\n    }, 0) / uNotes.reduce((sum, uNote) => sum + uNote.duration, 0)\n  const geta = 0\n  const scale = 1.2\n  const score = (percPitchCorrect * 100 + geta) * scale\n\n  const accuracy = isNaN(percPitchAccuracy) ? 0 : percPitchAccuracy * 100\n\n  return (\n    <Grid container direction='column' spacing={1}>\n      <Grid item>\n        <Typography variant='h6'>\n          Score: {Math.round(score * 100) / 100}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant='h6'>\n          Accuracy: {Math.round(accuracy * 100) / 100}\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\nScoreDisplay = connect(\n  ({ gakufu: { notes: gNotes }, user: { notes: uNotes } }) => ({\n    gNotes,\n    uNotes\n  })\n)(ScoreDisplay)\n\nfunction gakufuReducer (\n  state = { notes: null, videoId: null, midiBuf: null },\n  action\n) {\n  switch (action.type) {\n    case 'SET_GAKUFU':\n      return action.gakufu\n\n    case 'RESET_GAKUFU':\n      return { notes: null, videoId: null }\n\n    default:\n      return state\n  }\n}\n\nfunction userReducer (\n  state = {\n    notes: [],\n    timeOffset: 300000,\n    pitchOffset: 0\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SET_USER_TIME_OFFSET':\n      return {\n        ...state,\n        timeOffset: action.value\n      }\n\n    case 'SET_USER_PITCH_OFFSET':\n      return {\n        ...state,\n        pitchOffset: action.value\n      }\n\n    case 'RESET_USER_NOTES':\n      return {\n        ...state,\n        notes: []\n      }\n\n    case 'APPEND_USER_NOTE':\n      return {\n        ...state,\n        notes: state.notes.concat(action.note)\n      }\n\n    default:\n      return state\n  }\n}\n\nconst history = createBrowserHistory({\n  basename: '/damjiro/'\n})\n\nconst rootReducer = combineReducers({\n  gakufu: gakufuReducer,\n  user: persistReducer(\n    {\n      key: 'user',\n      storage,\n      whitelist: ['pitchOffset']\n    },\n    userReducer\n  ),\n  snack: snackbarReducer,\n  router: connectRouter(history)\n})\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n  },\n  rootReducer\n)\n\nconst store = createStore(\n  persistedReducer,\n  compose(applyMiddleware(routerMiddleware(history)))\n)\nconst persistor = persistStore(store)\n\nexport const useCardStyles = makeStyles(theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  wrapIcon: {\n    verticalAlign: 'middle',\n    display: 'inline-flex',\n    marginRight: theme.spacing(1)\n  },\n  wrapAwesomeIcon: {\n    verticalAlign: 'middle',\n    display: 'inline-flex',\n    marginRight: theme.spacing(1),\n    fontSize: '24px'\n  }\n}))\n\nexport const useMarginStyles = makeStyles(theme => ({\n  mt1: {\n    marginTop: theme.spacing(1)\n  },\n  mt2: {\n    marginTop: theme.spacing(2)\n  },\n  mt3: {\n    marginTop: theme.spacing(3)\n  },\n  mb1: {\n    marginBottom: theme.spacing(1)\n  },\n  mb2: {\n    marginBottom: theme.spacing(2)\n  },\n  m1: {\n    margin: theme.spacing(1)\n  },\n  m3: {\n    margin: theme.spacing(3)\n  },\n  ml1: {\n    marginLeft: theme.spacing(1)\n  },\n  collapse: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  mr2: {\n    marginRight: theme.spacing(2)\n  },\n  mauto: {\n    margin: 'auto'\n  }\n}))\n\nfunction App () {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <CssBaseline />\n        <Header />\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route exact path='/' component={AboutPage} />\n            <Route exact path='/gakufu/make' component={MakeGakufuPage} />\n            <Route exact path='/gakufu/sing' component={SingGakufuPage} />\n            <Route exact path='/midi/sing' component={SingMIDIPage} />\n            <Route exact path='/error' component={ErrorPage} />\n            <Route render={() => <Redirect to='/error?status=404' />} />\n          </Switch>\n        </ConnectedRouter>\n        <MessageSnackbar />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App\n","export default function snackbarReducer (\n  state = {\n    loadSnack: false,\n    message: '',\n    variant: ''\n  },\n  action\n) {\n  switch (action.type) {\n    case 'SNACK_LOAD':\n      console.log('loaded', action)\n      return {\n        ...state,\n        openSnack: true,\n        message: action.message,\n        variant: action.variant\n      }\n\n    case 'SNACK_UNLOAD':\n      console.log('unloaded', action)\n      return {\n        ...state,\n        openSnack: false\n      }\n\n    default:\n      return state\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}